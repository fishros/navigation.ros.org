# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020
# This file is distributed under the same license as the Navigation 2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Navigation 2 latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-18 21:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh\n"
"Language-Team: zh <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"


#: ../../migration/Dashing.rst:4
msgid "Dashing to Eloquent"
msgstr "从Dashing到Eloquent"


#: ../../migration/Dashing.rst:6
msgid "Moving from ROS 2 Dashing to Eloquent, a number of stability improvements were added that we will not specifically address here."
msgstr "从 ROS 2 Dashing 到 Eloquent 的迁移中，我们添加了一些稳定性改进，这里不会具体讨论。"


#: ../../migration/Dashing.rst:9
msgid "New Packages"
msgstr "新的包"


#: ../../migration/Dashing.rst:11
msgid "Navigation2 now includes a new package ``nav2_waypoint_follower``. The waypoint follower is an action server that will take in a list of waypoints to follow and follow them in order. There is a parameter ``stop_on_failure`` whether the robot should continue to the next waypoint on a single waypoint failure, or to return fail to the action client. The waypoint follower is also a reference application for how to use the Navigation2 action server to complete a basic autonomy task."
msgstr "Navigation2 现在包含一个新包 ``nav2_waypoint_follower``。Waypoint 跟随者是一个行动服务器，它将接收一个要跟随的 waypoint 列表，并按顺序跟随它们。有一个参数 ``stop_on_failure``，用于控制在单个 waypoint 失败时机器人是继续前往下一个 waypoint，还是向行动客户端返回失败。Waypoint 跟随者还是一个参考应用程序，演示了如何使用 Navigation2 行动服务器完成基本自主任务。"


#: ../../migration/Dashing.rst:18
msgid "Navigation2 now supports new algorithms for control and SLAM. The Timed-Elastic Band (TEB) controller was implemented `and can be found here <https://github.com/rst-tu-dortmund/teb_local_planner>`_. It is its own controller plugin that can be used instead of the DWB controller. Nav2 also supports SLAM Toolbox as the default SLAM implementation for ROS 2. This replaces the use of Cartographer."
msgstr "Navigation2现在支持用于控制和SLAM的新算法。Timed-Elastic Band (TEB)控制器已经实现，并可在此处找到： <https://github.com/rst-tu-dortmund/teb_local_planner>。它是自己的控制器插件，可用作DWB控制器的替代方案。Nav2还支持SLAM Toolbox作为ROS 2的默认SLAM实现，用以取代Cartographer的使用。"


#: ../../migration/Dashing.rst:25 ../../migration/Eloquent.rst:79 ../../migration/Foxy.rst:108
msgid "New Plugins"
msgstr "新插件"


#: ../../migration/Dashing.rst:27
msgid "Eloquent introduces back in pluginlib plugins to the navigation stack. ``nav2_core`` defines the plugin header interfaces to be used to implement controller, planner, recovery, and goal checker plugins. All algorithms (NavFn, DWB, recoveries) were added as plugin interfaces and the general packages for servers were created. ``nav2_planner`` is the action server for planning that hosts a plugin for the planner. ``nav2_controller`` is the action server for controller that hosts a plugin for the controller. ``nav2_recovery`` is the action server for recovery that hosts a plugin for recovery."
msgstr "Eloquent在导航堆栈中引入了pluginlib插件。``nav2_core``定义了插件头接口，用于实现控制器、规划器、恢复器和目标检查器插件。所有算法（NavFn、DWB、恢复器）都作为插件接口进行了添加，并创建了用于服务器的通用包。``nav2_planner``是规划的动作服务器，托管了规划器的插件。``nav2_controller``是控制的动作服务器，托管了控制器的插件。``nav2_recovery``是恢复的动作服务器，托管了恢复器的插件。"


#: ../../migration/Dashing.rst:34
msgid "New recovery plugins were added including backup, which will take in a distance to back up, if collision-free. Additionally, the wait recovery was added that will wait a configurable period of time before trying to navigate again. This plugin is especially helpful for time-dependent obstacles or pausing navigation for a scene to become less dynamic."
msgstr "新增了一些恢复插件，包括备份功能，如果无冲突的话，可以根据距离进行备份。此外，还新增了等待恢复功能，可以在再次尝试导航之前等待可配置的一段时间。该插件对于时间相关的障碍物或者暂停导航以使场景变得不太动态非常有帮助。"


#: ../../migration/Dashing.rst:38
msgid "Many new behavior tree nodes were added. These behavior tree nodes are hard-coded in the behavior tree engine. Behavior tree cpp v3 supports plugins and will be converted in the next release."
msgstr "添加了许多新的行为树节点。这些行为树节点在行为树引擎中进行了硬编码。行为树cpp v3支持插件，并将在下一个版本中进行转换。"


#: ../../migration/Dashing.rst:42
msgid "Navigation2 Architectural Changes"
msgstr "Navigation2架构更改"


#: ../../migration/Dashing.rst:44
msgid "The ``nav2_world_model`` package was removed. The individual ``nav2_planner`` and ``nav2_controller`` servers now host their relevent costmaps. This was done to reduce network traffic and ensure up-to-date information for the safety-critical elements of the system. As above mentions, plugins were introduced into the stack and these servers each host plugins for navigation, control, and costmap layers."
msgstr "``nav2_world_model``包已被移除。个别的``nav2_planner``和``nav2_controller``服务器现在托管其相关的代价地图。这样做是为了减少网络流量并确保系统中关键安全元素的最新信息。如上所述，插件被引入到堆栈中，这些服务器分别托管用于导航、控制和代价地图层的插件。"


#: ../../migration/Dashing.rst:48
msgid "Map server was substantially refactored but the external API remains the same. It now uses the SDL library for image loading."
msgstr "地图服务器进行了大规模的重构，但外部API保持不变。现在它使用SDL库来加载图像。"


#: ../../migration/Dashing.rst:50
msgid "TF-based positioning is now used for pose-estimation everywhere in the stack. Prior, some elements of the navigation stack only updated its pose from the ``/amcl_pose`` topic publishing at an irregular rate. This is obviously low-accuracy and high-latency. All positioning is now based on the TF tree from the global frame to the robot frame."
msgstr "在整个堆栈中，现在都使用基于TF的定位进行姿态估计。之前，导航堆栈的一些元素只在不规则的频率下从``/amcl_pose``话题中更新其姿态。这显然是低精度且高延迟的。现在所有的定位都基于从全局坐标系到机器人坐标系的TF树。"


#: ../../migration/Dashing.rst:55
msgid "Prior to Eloquent, there were no ROS 2 action servers and clients available. Navigation2, rather, used an interface we called Tasks. Eloquent now contains actions and a simple action server interface was created and is used now throughout the stack. Tasks were removed."
msgstr "在Eloquent版本之前，没有ROS 2的动作服务器和客户端可用。Navigation2使用了一种我们称之为Tasks的接口。在Eloquent版本中，引入了动作和简单的动作服务器接口，并在整个堆栈中使用。Tasks被移除了。"


#: ../../migration/Eloquent.rst:4
msgid "Eloquent to Foxy"
msgstr "从Eloquent升级到Foxy"


#: ../../migration/Eloquent.rst:6
msgid "Moving from ROS 2 Eloquent to Foxy, a number of stability improvements were added that we will not specifically address here. We will specifically mention, however, the reduction in terminal noise. TF2 transformation timeout errors and warnings on startup have been largely removed or throttled to be more tractable. Additionally, message filters filling up resulting in messages being dropped were resolved in costmap 2d."
msgstr "从ROS 2 Eloquent迁移到Foxy版本，增加了许多稳定性改进，我们不会在此具体说明。但值得一提的是终端噪音的减少。大部分启动时的TF2变换超时错误和警告已经被大大减少或限制，使其更易处理。此外，解决了costmap 2d中消息过滤器充满导致消息丢失的问题。"


#: ../../migration/Eloquent.rst:12
msgid "General"
msgstr "常规"


#: ../../migration/Eloquent.rst:14
msgid "The lifecycle manager was split into 2 unique lifecycle managers. They are the ``navigation_lifecycle_manager`` and ``localization_lifecycle_manager``. This gives each process their own manager to allow users to switch between SLAM and localization without effecting Navigation. It also reduces the redundant code in ``nav2_bringup``."
msgstr "生命周期管理器被分成了两个独立的生命周期管理器，它们分别是``navigation_lifecycle_manager``和``localization_lifecycle_manager``。这样每个进程都有自己的管理器，允许用户在SLAM和定位之间切换而不影响导航。它还减少了``nav2_bringup``中的冗余代码。"


#: ../../migration/Eloquent.rst:19
msgid "The lifecycle manager also now contains ``Bond`` connections to each lifecycle server. This means that if a server crashes or exits, the lifecycle manager will be constantly checking and transition down its lifecycle nodes for safety. This acts as a watchdog during run-time to complement the lifecycle manager's transitioning up and down from active states. See `this PR for details <https://github.com/ros-planning/navigation2/pull/1894>`_."
msgstr "生命周期管理器现在还包含与每个生命周期服务器的``Bond``连接。这意味着如果一个服务器崩溃或退出，生命周期管理器将不断检查并将其生命周期节点过渡到安全状态。这在运行时充当看门狗，以补充生命周期管理器从活动状态向上和向下过渡的功能。有关详细信息，请参阅`此PR <https://github.com/ros-planning/navigation2/pull/1894>`_。"


#: ../../migration/Eloquent.rst:23
msgid "A fix to the BT navigator was added to remove a rare issue where it may crash due to asynchronous issues. As a result, a behavior tree is created for each navigation request rather than resetting an existing tree. The creation of this tree will add a small amount of latency. Proposals to reduce this latency will be considered before the next release."
msgstr "修复了BT导航器的一个问题，该问题可能由于异步问题而导致导航器崩溃。因此，每次导航请求都会创建一个行为树，而不是重置现有的树。创建该树会增加一小段延迟。在下一个版本发布之前，将考虑减少这种延迟的建议。"


#: ../../migration/Eloquent.rst:29
msgid "Server Updates"
msgstr "服务器更新"


#: ../../migration/Eloquent.rst:30
msgid "All plugin servers (controller, planner, recovery) now supports the use of multiple plugins. This can be done by loading a map of plugins, mapping the name of the plugin to its intended use-case. Each server defines a parameter where the list of names for the plugins to be loaded can be defined."
msgstr "现在，所有插件服务器（控制器、规划器、恢复器）都支持使用多个插件。可以通过加载插件映射表，将插件的名称映射到其预期的用例来实现。每个服务器都定义了一个参数，可以在其中定义要加载的插件名称列表。"


#: ../../migration/Eloquent.rst:35
msgid "Server Name"
msgstr "服务器名称"


#: ../../migration/Eloquent.rst:35
msgid "Plugin Parameter"
msgstr "插件参数"


#: ../../migration/Eloquent.rst:37 ../../migration/Eloquent.rst:39 ../../migration/Eloquent.rst:41
msgid "Controller Server"
msgstr "控制器服务器"


#: ../../migration/Eloquent.rst:37
msgid "progress_checker_plugin"
msgstr "progress_checker_plugin"


#: ../../migration/Eloquent.rst:39
msgid "goal_checker_plugin"
msgstr "goal_checker_plugin"


#: ../../migration/Eloquent.rst:41
msgid "controller_plugins"
msgstr "controller_plugins"


#: ../../migration/Eloquent.rst:43
msgid "Planner Server"
msgstr "规划器服务器"


#: ../../migration/Eloquent.rst:43
msgid "planner_plugins"
msgstr "规划器插件"


#: ../../migration/Eloquent.rst:45
msgid "Recovery Server"
msgstr "恢复服务器"


#: ../../migration/Eloquent.rst:45
msgid "recovery_plugins"
msgstr "recovery_plugins"


#: ../../migration/Eloquent.rst:47
msgid "Costmap Node"
msgstr "成本地图节点"


#: ../../migration/Eloquent.rst:47
msgid "plugins"
msgstr "plugins"


#: ../../migration/Eloquent.rst:50
msgid "The type of plugin to be mapped to a particular name has to be defined using the ``plugin`` parameter in the plugin namespace for each name defined in the server plugin list. Each name in the plugin parameter list is expected to have the ``plugin`` parameter defined."
msgstr "将特定名称映射到特定插件的类型必须在每个服务器插件列表的插件命名空间中使用“plugin”参数进行定义。预期插件参数列表中的每个名称都应该有“plugin”参数定义。"


#: ../../migration/Eloquent.rst:53
msgid "An example: ``controller_server`` defines the parameter ``controller_plugins`` where a list of plugin names can be defined:"
msgstr "一个例子：``controller_server`` 定义了参数``controller_plugins``，可以在其中定义插件名称的列表："


#: ../../migration/Eloquent.rst:68
msgid "``FollowPath`` controller is of type ``dwb_local_planner/DWBLocalPlanner`` and ``DynamicFollowPath`` of type ``teb_local_planner/TEBLocalPlanner``. Each plugin will load the parameters in their namespace, e.g. ``FollowPath.max_vel_x``, rather than globally in the server namespace. This will allow multiple plugins of the same type with different parameters and reduce conflicting parameter names."
msgstr "``FollowPath`` 控制器的类型为 ``dwb_local_planner/DWBLocalPlanner``，而 ``DynamicFollowPath`` 的类型为 ``teb_local_planner/TEBLocalPlanner``。每个插件都将在其命名空间中加载参数，例如 ``FollowPath.max_vel_x``，而不是在服务器命名空间中全局加载。这将允许具有不同参数的多个相同类型的插件，并减少参数名称冲突。"


#: ../../migration/Eloquent.rst:72
msgid "DWB Contains new parameters as an update relative to the ROS 1 updates, `see here for more information <https://github.com/ros-planning/navigation2/pull/1501>`_. Additionally, the controller and planner interfaces were updated to include a ``std::string name`` parameter on initialization. This was added to the interfaces to allow the plugins to know the namespace it should load its parameters in. E.g. for a controller to find the parameter ``FollowPath.max_vel_x``, it must be given its name, ``FollowPath`` to get this parameter. All plugins will be expected to look up parameters in the namespace of its given name."
msgstr "DWB 相对于 ROS 1 更新，新增了一些参数，详见 `这里的更多信息 <https://github.com/ros-planning/navigation2/pull/1501>`_。此外，控制器和规划器接口在初始化时更新，包括一个 ``std::string name`` 参数。这个参数被添加到接口中，以便插件知道应该在哪个命名空间中加载其参数。例如，要查找参数 ``FollowPath.max_vel_x``，控制器必须给出它的名称 ``FollowPath``。所有插件都应该在其给定名称的命名空间中查找参数。"


#: ../../migration/Eloquent.rst:81
msgid "Many new behavior tree nodes were added. These behavior tree nodes are now BT plugins and dynamically loadable at run-time using behavior tree cpp v3. The default behavior trees have been upgraded to stop the recovery behaviours and trigger a replanning when the navigation goal is preempted. See ``nav2_behavior_tree`` for a full listing, or :ref:`plugins` for the current list of behavior tree plugins and their descriptions. These plugins are set as default in the ``nav2_bt_navigator`` but may be overridden by the ``bt_plugins`` parameter to include your specific plugins."
msgstr "添加了许多新的行为树节点。这些行为树节点现在是行为树插件，可以在运行时使用行为树 cpp v3 进行动态加载。默认的行为树已经升级，停止了恢复行为，并在导航目标被中止时触发重新规划。请参阅 ``nav2_behavior_tree`` 获取完整列表，或者参阅 :ref:`plugins` 查看当前的行为树插件列表及其描述。这些插件在 ``nav2_bt_navigator`` 中设置为默认值，但可以通过 ``bt_plugins`` 参数覆盖以包含您特定的插件。"


#: ../../migration/Eloquent.rst:87 ../../migration/Foxy.rst:133 ../../migration/Foxy.rst:262
msgid "Original GitHub tickets:"
msgstr "原始的 GitHub 问题："


#: ../../migration/Eloquent.rst:89
msgid "`DistanceController <https://github.com/ros-planning/navigation2/pull/1699>`_"
msgstr "`DistanceController <https://github.com/ros-planning/navigation2/pull/1699>`_"


#: ../../migration/Eloquent.rst:90
msgid "`SpeedController <https://github.com/ros-planning/navigation2/pull/1744>`_"
msgstr "`SpeedController <https://github.com/ros-planning/navigation2/pull/1744>`_"


#: ../../migration/Eloquent.rst:91
msgid "`GoalUpdatedCondition <https://github.com/ros-planning/navigation2/pull/1712>`_"
msgstr "`GoalUpdatedCondition <https://github.com/ros-planning/navigation2/pull/1712>`_"


#: ../../migration/Eloquent.rst:92
msgid "`DistanceTraveledCondition <https://github.com/ros-planning/navigation2/pull/1705>`_"
msgstr "`DistanceTraveledCondition <https://github.com/ros-planning/navigation2/pull/1705>`_"


#: ../../migration/Eloquent.rst:93
msgid "`TimeExpiredCondition <https://github.com/ros-planning/navigation2/pull/1705>`_"
msgstr "`TimeExpiredCondition <https://github.com/ros-planning/navigation2/pull/1705>`_"


#: ../../migration/Eloquent.rst:94
msgid "`UpdateGoal <https://github.com/ros-planning/navigation2/pull/1859>`_"
msgstr "`UpdateGoal <https://github.com/ros-planning/navigation2/pull/1859>`_"


#: ../../migration/Eloquent.rst:95
msgid "`TruncatePath <https://github.com/ros-planning/navigation2/pull/1859>`_"
msgstr "`TruncatePath <https://github.com/ros-planning/navigation2/pull/1859>`_"


#: ../../migration/Eloquent.rst:96
msgid "`IsBatteryLowCondition <https://github.com/ros-planning/navigation2/pull/1974>`_"
msgstr "`IsBatteryLowCondition <https://github.com/ros-planning/navigation2/pull/1974>`_"


#: ../../migration/Eloquent.rst:97
msgid "`ProgressChecker <https://github.com/ros-planning/navigation2/pull/1857>`_"
msgstr "`ProgressChecker <https://github.com/ros-planning/navigation2/pull/1857>`_"


#: ../../migration/Eloquent.rst:98
msgid "`GoalChecker <https://github.com/ros-planning/navigation2/pull/1857>`_"
msgstr "`GoalChecker <https://github.com/ros-planning/navigation2/pull/1857>`_"


#: ../../migration/Eloquent.rst:101
msgid "Map Server Re-Work"
msgstr "地图服务器重构"


#: ../../migration/Eloquent.rst:103
msgid "``map_saver`` was re-worked and divided into 2 parts: CLI and server. CLI part is a command-line tool that listens incoming map topic, saves map once into a file and finishes its work. This part is remained to be almost untouched: CLI executable was renamed from ``map_saver`` to ``map_saver_cli`` without changing its functionality. Server is a new part. It spins in the background and can be used to save map continuously through a ``save_map`` service. By each service request it tries to listen incoming map topic, receive a message from it and write obtained map into a file."
msgstr "``map_saver`` 被重新设计并分为两部分：CLI 和服务器。CLI 部分是一个命令行工具，它监听传入的地图主题，将地图保存到文件中并完成其工作。这部分几乎没有改动：CLI 可执行文件的名称从 ``map_saver`` 更改为 ``map_saver_cli``，但其功能没有改变。服务器是一个新的部分。它在后台运行，可用于通过 ``save_map`` 服务连续保存地图。每次服务请求时，它会尝试监听传入的地图主题，接收来自其中的消息，并将获取到的地图写入文件。"


#: ../../migration/Eloquent.rst:107
msgid "``map_server`` was dramatically simplified and cleaned-up. ``OccGridLoader`` was merged with ``MapServer`` class as it is intended to work only with one ``OccupancyGrid`` type of messages in foreseeable future."
msgstr "``map_server`` 已经大幅简化和清理。``OccGridLoader`` 已经与 ``MapServer`` 类合并，因为在可预见的未来它只能与一种``OccupancyGrid``类型的消息一起使用。"


#: ../../migration/Eloquent.rst:109
msgid "Map Server now has new ``map_io`` dynamic library. All functions saving/loading ``OccupancyGrid`` messages were moved from ``map_server`` and ``map_saver`` here. These functions could be easily called from any part of external ROS 2 code even if Map Server node was not started."
msgstr "地图服务器现在有一个新的 ``map_io`` 动态库。将从 ``map_server`` 和 ``map_saver`` 移动的所有保存/加载 ``OccupancyGrid`` 消息的函数都放在这里。即使没有启动地图服务器节点，这些函数也可以从外部 ROS 2 代码的任何部分轻松调用。"


#: ../../migration/Eloquent.rst:111
msgid "``map_loader`` was completely removed from ``nav2_util``. All its functionality already present in ``map_io``. Please use it in your code instead."
msgstr "``map_loader`` 已经从 ``nav2_util`` 中完全移除。所有功能已经在 ``map_io`` 中存在。请在您的代码中使用它。"


#: ../../migration/Eloquent.rst:113
msgid "Please refer to the `original GitHub ticket <https://github.com/ros-planning/navigation2/issues/1010>`_ and `Map Server README <https://github.com/ros-planning/navigation2/blob/main/nav2_map_server/README.md>`_ for more information."
msgstr "有关更多信息，请参阅 `原始 GitHub 提交 <https://github.com/ros-planning/navigation2/issues/1010>`_ 和 `地图服务器自述文件 <https://github.com/ros-planning/navigation2/blob/main/nav2_map_server/README.md>`_。"


#: ../../migration/Eloquent.rst:117
msgid "New Particle Filter Messages"
msgstr "新的粒子滤波器消息"


#: ../../migration/Eloquent.rst:119
msgid "New particle filter messages for particle clouds were added to include the particle weights along with their poses. ``nav2_msgs/Particle`` defines a single particle with a pose and a weight in a particle cloud. ``nav2_msgs/ParticleCloud`` defines a set of particles, each with a pose and a weight."
msgstr "为粒子云添加了新的粒子滤波器消息，包括粒子权重和姿态。``nav2_msgs/Particle`` 定义了一个带有姿态和权重的单个粒子。``nav2_msgs/ParticleCloud`` 定义了一组具有姿态和权重的粒子。"


#: ../../migration/Eloquent.rst:123
msgid "``AMCL`` now publishes its particle cloud as a ``nav2_msgs/ParticleCloud`` instead of a ``geometry_msgs/PoseArray``."
msgstr "``AMCL`` 现在将其粒子云发布为 ``nav2_msgs/ParticleCloud`` 而不是 ``geometry_msgs/PoseArray``。"


#: ../../migration/Eloquent.rst:125
msgid "`See here for more information. <https://github.com/ros-planning/navigation2/pull/1677>`_"
msgstr "`更多信息请参见此处 <https://github.com/ros-planning/navigation2/pull/1677>`_"


#: ../../migration/Eloquent.rst:129
msgid "Selection of Behavior Tree in each navigation action"
msgstr "每个导航动作中的行为树选择"


#: ../../migration/Eloquent.rst:131
msgid "The ``NavigateToPose`` action allows now to select in the action request the behavior tree to be used by ``bt_navigator`` for carrying out the navigation action through the ``string behavior_tree`` field. This field indicates the absolute path of the xml file that will be used to use to carry out the action. If no file is specified, leaving this field empty, the default behavior tree specified in the ``default_bt_xml_filename parameter`` will be used."
msgstr "现在``NavigateToPose``动作可以在动作请求中选择``bt_navigator``用于执行导航动作的行为树，通过``string behavior_tree``字段。该字段指示将用于执行该动作的xml文件的绝对路径。如果未指定文件，即将该字段留空，则将使用``default_bt_xml_filename``参数中指定的默认行为树。"


#: ../../migration/Eloquent.rst:133
msgid "This functionality has been discussed in `the ticket #1780 <https://github.com/ros-planning/navigation2/issues/1780>`_, and carried out in `the pull request #1784 <https://github.com/ros-planning/navigation2/pull/1784>`_."
msgstr "此功能已在 `ticket #1780 <https://github.com/ros-planning/navigation2/issues/1780>`_ 中讨论，并在 `pull request #1784 <https://github.com/ros-planning/navigation2/pull/1784>`_ 中实施。"


#: ../../migration/Eloquent.rst:137
msgid "FollowPoint Capability"
msgstr "FollowPoint功能"


#: ../../migration/Eloquent.rst:139
msgid "A new behavior tree ``followpoint.xml`` has added. This behavior tree makes a robot follow a dynamically generated point, keeping a certain distance from the target. This can be used for moving target following maneuvers."
msgstr "添加了一个新的行为树``followpoint.xml``。该行为树使机器人跟随一个动态生成的点，并保持与目标的一定距离。这可用于移动目标跟踪操纵。"


#: ../../migration/Eloquent.rst:141
msgid "This functionality has been discussed in `the ticket #1660 <https://github.com/ros-planning/navigation2/issues/1660>`_, and carried out in `the pull request #1859 <https://github.com/ros-planning/navigation2/issues/1859>`_."
msgstr "此功能已在`票号1660 <https://github.com/ros-planning/navigation2/issues/1660>`_ 中讨论，并在`拉取请求号1859 <https://github.com/ros-planning/navigation2/issues/1859>`_ 中实现。"


#: ../../migration/Eloquent.rst:144
msgid "New Costmap Layer"
msgstr "新的Costmap图层"


#: ../../migration/Eloquent.rst:145
msgid "The range sensor costmap has not been ported to navigation2 as ``nav2_costmap_2d::RangeSensorLayer\"``. It uses the same probabilistic model as the `ROS1 <http://wiki.ros.org/range_sensor_layer>`_ layer as well as much of the same interface. Documentation on parameters has been added to docs/parameters and the navigation.ros.org under ``Configuration Guide``."
msgstr "范围传感器代价地图在navigation2中尚未迁移为``nav2_costmap_2d::RangeSensorLayer``。它使用与`ROS1 <http://wiki.ros.org/range_sensor_layer>`_层相同的概率模型，以及大部分相同的接口。参数的文档已添加到docs/parameters和navigation.ros.org的``配置指南``下。"


#: ../../migration/Foxy.rst:4
msgid "Foxy to Galactic"
msgstr "Foxy到Galactic"


#: ../../migration/Foxy.rst:6
msgid "Moving from ROS 2 Foxy to Galactic, a number of stability improvements were added that we will not specifically address here."
msgstr "从ROS 2 Foxy迁移到Galactic，我们添加了许多稳定性改进，这里不会具体说明。"


#: ../../migration/Foxy.rst:9
msgid "NavigateToPose Action Feedback updates"
msgstr "NavigateToPose动作反馈更新"


#: ../../migration/Foxy.rst:11
msgid "The NavigateToPose action feedback has two improvements:"
msgstr "NavigateToPose动作反馈有两个改进："


#: ../../migration/Foxy.rst:13
msgid "``distance_remaining`` now integrates path poses to report accurate distance remaining to go. Previously, this field reported the euclidean distance between the current pose and the goal pose."
msgstr "``distance_remaining``现在整合了路径姿势以报告准确的剩余距离。先前，该字段报告当前姿势和目标姿势之间的欧几里德距离。"


#: ../../migration/Foxy.rst:14
msgid "Addition of ``estimated_time_remaining`` field. This field reports the estimated time remaining by dividing the remaining distance by the current speed."
msgstr "新增了``estimated_time_remaining``字段。该字段通过将剩余距离除以当前速度来报告预计剩余时间。"


#: ../../migration/Foxy.rst:17
msgid "NavigateToPose BT-node Interface Changes"
msgstr "NavigateToPose BT节点接口更改"


#: ../../migration/Foxy.rst:19
msgid "The NavigateToPose input port has been changed to PoseStamped instead of Point and Quaternion."
msgstr "NavigateToPose输入端口已更改为PoseStamped，而不是Point和Quaternion。"


#: ../../migration/Foxy.rst:21
msgid "See :ref:`bt_navigate_to_pose_action` for more information."
msgstr "更多信息请参阅:ref:`bt_navigate_to_pose_action`。"


#: ../../migration/Foxy.rst:25
msgid "NavigateThroughPoses and ComputePathThroughPoses Actions Added"
msgstr "新增了NavigateThroughPoses和ComputePathThroughPoses动作。"


#: ../../migration/Foxy.rst:27
msgid "The ``NavigateThroughPoses`` action has been added analog to the ``NavigateToPose``. Rather than going to a single position, this Action will allow a user to specify a number of hard intermediary pose constraints between the start and final pose to plan through. The new ``ComputePathThroughPoses`` action has been added to the ``planner_server`` to process these requests through ``N goal_poses``."
msgstr "新增了``NavigateThroughPoses``动作，类似于``NavigateToPose``。与前者只到达一个位置不同，这个动作允许用户在起始姿态和目标姿态之间指定多个硬约束的中间姿态。新增了``ComputePathThroughPoses``动作，用于在``planner_server``中处理这些通过``N个目标姿态``的请求。"


#: ../../migration/Foxy.rst:29
msgid "The ``ComputePathThroughPoses`` action server will take in a set of ``N`` goals to achieve, plan through each pose and concatenate the output path for use in navigation. The controller and navigator know nothing about the semantics of the generated path, so the robot will not stop or slow on approach to these goals. It will rather continue through each pose as it were any other point on the path continuously. When paired with the ``SmacPlanner``, this feature can be used to generate **completely kinematically feasible trajectories through pose constraints**."
msgstr "``ComputePathThroughPoses``动作服务器将接收一组``N``个目标以实现，通过每个姿势进行规划，并连接输出路径以供导航使用。控制器和导航器对生成路径的语义一无所知，因此机器人不会在接近这些目标时停止或减速。相反，它将像处理路径上的任何其他点一样持续通过每个姿势。与``SmacPlanner``配对使用时，此功能可用于生成**完全符合运动约束的轨迹**。"


#: ../../migration/Foxy.rst:31
msgid "If you wish to stop at each goal pose, consider using the waypoint follower instead, which will stop and allow a user to optionally execute a task plugin at each pose."
msgstr "如果您希望在每个目标姿态处停下来，请考虑使用航点跟随器（waypoint follower），它会停下来，并允许用户在每个姿态上选择性地执行任务插件。"


#: ../../migration/Foxy.rst:34
msgid "ComputePathToPose BT-node Interface Changes"
msgstr "ComputePathToPose BT节点接口更改"


#: ../../migration/Foxy.rst:36
msgid "The ``start`` input port has been added to optionally allow the request of a path from ``start`` to ``goal``  instead of from the current position of the robot to ``goal``."
msgstr "新增了``start``输入端口，可选择性地请求从``start``到``goal``的路径，而不是从机器人的当前位置到``goal``的路径。"


#: ../../migration/Foxy.rst:38
msgid "See :ref:`bt_compute_path_to_pose_action` for more information."
msgstr "有关详细信息，请参见：:ref:`bt_compute_path_to_pose_action`。"


#: ../../migration/Foxy.rst:41
msgid "ComputePathToPose Action Interface Changes"
msgstr "ComputePathToPose Action接口变更"


#: ../../migration/Foxy.rst:43
msgid "The goal pose field ``pose`` was changed to ``goal``."
msgstr "目标姿势字段``pose``已更改为``goal``。"


#: ../../migration/Foxy.rst:44
msgid "The PoseStamped field ``start`` has been added."
msgstr "新增了PoseStamped字段``start``。"


#: ../../migration/Foxy.rst:45
msgid "The bool field ``use_start`` has been added."
msgstr "已添加了布尔字段``use_start``。"


#: ../../migration/Foxy.rst:47
msgid "These two additional fields have been added to optionally allow, when ``use_start`` is true, the request of a path from ``start`` to ``goal`` instead of from the current position of the robot to ``goal``. Corresponding changes have been done of the Planner Server."
msgstr "这两个附加字段可选择性地在``use_start``为true时，允许请求从``start``到``goal``的路径，而不是从机器人的当前位置到``goal``的路径。相应的变更已在Planner Server上进行。"


#: ../../migration/Foxy.rst:50
msgid "BackUp BT-node Interface Changes"
msgstr "备份BT节点接口更改"


#: ../../migration/Foxy.rst:52
msgid "The ``backup_dist`` and ``backup_speed`` input ports should both be positive values indicating the distance to go backward respectively the speed with which the robot drives backward."
msgstr "``backup_dist``和``backup_speed``输入端口应为正值，分别指示后退距离和机器人后退时的速度。"


#: ../../migration/Foxy.rst:55
msgid "BackUp Recovery Interface Changes"
msgstr "备份恢复接口更改"


#: ../../migration/Foxy.rst:57
msgid "``speed`` in a backup recovery goal should be positive indicating the speed with which to drive backward. ``target.x`` in a backup recovery goal should be positive indicating the distance to drive backward. In both cases negative values are silently inverted."
msgstr "在备份恢复目标中，``speed`` 应为正数，表示向后驱动的速度。在备份恢复目标中，``target.x`` 应为正数，表示向后驱动的距离。在这两种情况下，负值会被自动转为相反数。"


#: ../../migration/Foxy.rst:62
msgid "Nav2 Controllers and Goal Checker Plugin Interface Changes"
msgstr "Nav2控制器和目标检查器插件接口更改"


#: ../../migration/Foxy.rst:64
msgid "As of `this PR 2247 <https://github.com/ros-planning/navigation2/pull/2247>`_, the ``controller`` plugins will now be given a pointer to the current goal checker in use of the navigation task in ``computeAndPublishVelocity()``. This is geared to enabling controllers to have access to predictive checks for goal completion as well as access to the state information of the goal checker plugin."
msgstr "从 `这个PR 2247 <https://github.com/ros-planning/navigation2/pull/2247>`_ 开始，``controller`` 插件现在会在 ``computeAndPublishVelocity()`` 中得到一个指向当前使用的导航任务的目标检查器的指针。这旨在使控制器能够访问有关目标完成的预测检查以及目标检查器插件的状态信息。"


#: ../../migration/Foxy.rst:66
msgid "The ``goal_checker`` plugins also have the change of including a ``getTolerances()`` method. This method allows a goal checker holder to access the tolerance information of the goal checker to consider at the goal. Each field of the ``pose`` and ``velocity`` represents the maximum allowable error in each dimension for a goal to be considered completed. In the case of a translational tolerance (combined X and Y components), each the X and Y will be populated with the tolerance value because it is the **maximum** tolerance in the dimension (assuming the other has no error). If the goal checker does not contain any tolerances for a dimension, the ``numeric_limits<double> lowest()`` value is utilized in its place."
msgstr "``goal_checker``插件还包括了``getTolerances()``方法的更改。该方法允许目标检查器持有者访问目标检查器在目标处要考虑的容限信息。``pose``和``velocity``的每个字段表示目标在每个维度上允许的最大误差。对于平移容限（合并的X和Y分量），X和Y将填充容限值，因为它是该维度上的**最大**容限（假设另一个没有误差）。如果目标检查器不包含任何维度的容限，将使用``numeric_limits<double> lowest()``值代替。"


#: ../../migration/Foxy.rst:69
msgid "FollowPath goal_checker_id attribute"
msgstr "FollowPath 的 goal_checker_id 属性"


#: ../../migration/Foxy.rst:70
msgid "For example: you could use for some specific navigation motion a more precise goal checker than the default one that it is used in usual motions."
msgstr "例如：对于某些特定导航动作，您可以使用比通常使用的默认目标检查器更精确的目标检查器。"


#: ../../migration/Foxy.rst:76
msgid "The previous usage of the ``goal_checker_plugin`` parameter to declare the controller_server goal_checker is now obsolete and removed."
msgstr "先前使用的 ``goal_checker_plugin`` 参数来声明 controller_server 的 goal_checker 现在已过时并已移除。"


#: ../../migration/Foxy.rst:77
msgid "The controller_server parameters now support the declaration of a list of goal checkers ``goal_checker_plugins`` mapped to unique identifier names, such as is the case with ``FollowPath`` and ``GridBased`` for the controller and planner plugins, respectively."
msgstr "controller_server参数现在支持声明一个将目标检查器``goal_checker_plugins``映射到唯一标识符名称的列表，类似于控制器和规划器插件的``FollowPath``和``GridBased``的情况。"


#: ../../migration/Foxy.rst:79
msgid "The specification of the selected goal checker is mandatory when more than one checker is defined in the controller_server parameter configuration. If only one goal_checker is configured in the controller_server it is selected by default even if no goal_checker is specified."
msgstr "在 controller_server 参数配置中定义多个检查器时，必须指定所选目标检查器。如果在 controller_server 中仅配置了一个 goal_checker，则默认选择该检查器，即使未指定 goal_checker。"


#: ../../migration/Foxy.rst:81
msgid "Below it is shown an example of goal_checker configuration of the controller_server node."
msgstr "下面显示了控制器服务器节点的goal_checker配置示例。"


#: ../../migration/Foxy.rst:100
msgid "Groot Support"
msgstr "Groot 支持"


#: ../../migration/Foxy.rst:102
msgid "Live Monitoring and Editing of behavior trees with Groot is now possible. Switching bt-xmls on the fly through a new goal request is also included. This is all done without breaking any APIs. Enabled by default."
msgstr "现在可以使用Groot进行行为树的实时监控和编辑。还包括通过新的目标请求实时切换bt-xml。所有这些操作都不会破坏任何API。默认情况下启用。"


#: ../../migration/Foxy.rst:110
msgid "``nav2_waypoint_follower`` has an action server that takes in a list of waypoints to follow and follow them in order. In some cases we might want robot to perform some tasks/behaviours at arrivals of these waypoints. In order to perform such tasks, a generic plugin interface `WaypointTaskExecutor` has been added to ``nav2_core``. Users can inherit from this interface to implement their own plugin to perform more specific tasks at waypoint arrivals for their needs."
msgstr "``nav2_waypoint_follower`` 具有一个动作服务器，接收一个要按顺序跟随的路径点列表。在某些情况下，我们可能希望机器人在到达这些路径点时执行某些任务/行为。为了执行这些任务，已经在 ``nav2_core`` 中添加了一个通用插件接口 `WaypointTaskExecutor`。用户可以从该接口继承，以实现自己的插件，以满足其特定需求下路径点到达时执行更具体任务的需要。"


#: ../../migration/Foxy.rst:114
msgid "Several example implementations are included in ``nav2_waypoint_follower``. ``WaitAtWaypoint`` and ``PhotoAtWaypoint`` plusings are included in ``nav2_waypoint_follower`` as run-time loadable plugins. ``WaitAtWaypoint`` simply lets robot to pause for a specified amount of time in milliseconds, at waypoint arrivals. While ``PhotoAtWaypoint`` takes photos at waypoint arrivals and saves the taken photos to specified directory, the format for taken photos also can be configured through parameters. All major image formats such as ``png``, ``jpeg``, ``jpg`` etc. are supported, the default format is ``png``."
msgstr "``nav2_waypoint_follower``中包含了几个示例实现。``WaitAtWaypoint``和``PhotoAtWaypoint``插件包含在``nav2_waypoint_follower``中作为运行时可加载插件。``WaitAtWaypoint``允许机器人在到达航点时暂停指定的时间（以毫秒为单位）。而``PhotoAtWaypoint``在到达航点时拍照并将拍摄的照片保存到指定目录，拍摄的照片格式也可以通过参数进行配置。支持所有主要的图像格式，如``png``、``jpeg``、``jpg``等，默认格式为``png``。"


#: ../../migration/Foxy.rst:119
msgid "Loading a plugin of this type is done through ``nav2_bringup/params/nav2_param.yaml``, by specifying plugin's name, type and it's used parameters."
msgstr "Loading a plugin of this type is done through ``nav2_bringup/params/nav2_param.yaml``, by specifying plugin's name, type and it's used parameters."


#: ../../migration/Foxy.rst:135
msgid "`WaypointTaskExecutor <https://github.com/ros-planning/navigation2/pull/1993>`_"
msgstr "``WaypointTaskExecutor <https://github.com/ros-planning/navigation2/pull/1993>`_"


#: ../../migration/Foxy.rst:136
msgid "`WaitAtWaypoint <https://github.com/ros-planning/navigation2/pull/1993>`_"
msgstr "`WaitAtWaypoint <https://github.com/ros-planning/navigation2/pull/1993>`_"


#: ../../migration/Foxy.rst:137
msgid "`PhotoAtWaypoint <https://github.com/ros-planning/navigation2/pull/2041>`_"
msgstr "``PhotoAtWaypoint <https://github.com/ros-planning/navigation2/pull/2041>`_"


#: ../../migration/Foxy.rst:138
msgid "`InputAtWaypoint <https://github.com/ros-planning/navigation2/pull/2049>`_"
msgstr "`InputAtWaypoint <https://github.com/ros-planning/navigation2/pull/2049>`_"


#: ../../migration/Foxy.rst:141 ../../migration/Humble.rst:98
msgid "Costmap Filters"
msgstr "代价地图过滤器"


#: ../../migration/Foxy.rst:143
msgid "A new concept interacting with spatial-dependent objects called \"Costmap Filters\" appeared in Galactic (more information about this concept could be found at :ref:`concepts` page). Costmap filters are acting as a costmap plugins, applied to a separate costmap above common plugins. In order to make a filtered costmap and change robot's behavior in annotated areas, filter plugin reads the data came from filter mask. Then this data is being linearly transformed into feature map in a filter space. It could be passability of an area, maximum speed limit in m/s, robot desired direction in degrees or anything else. Transformed feature map along with the map/costmap, sensors data and current robot position is used in plugin's algorithms to make required updates in the resulting costmap and robot's behavor."
msgstr "Galactic引入了一个与空间相关对象进行交互的新概念，称为\"Costmap Filters\"（成本地图过滤器）（有关该概念的更多信息可在:ref:`concepts`页面找到）。Costmap过滤器作为成本地图插件，应用于一个独立于常规插件的单独成本地图上。为了创建一个经过过滤的成本地图并在标注区域改变机器人的行为，过滤器插件读取来自过滤器掩码的数据。然后，这些数据被线性转换为过滤空间中的特征图。这可以是区域的可通过性、最大速度限制（以米/秒为单位）、机器人期望的方向（以度为单位）或其他任何内容。转换后的特征图与地图/成本地图、传感器数据和当前机器人位置一起用于插件算法中，以对结果成本地图和机器人行为进行必要的更新。"


#: ../../migration/Foxy.rst:145
msgid "Architecturally, costmap filters consists from ``CostmapFilter`` class which is a basic class incorporating much common of its inherited filter plugins:"
msgstr "Architecturally, costmap filters consists from ``CostmapFilter`` class which is a basic class incorporating much common of its inherited filter plugins:"


#: ../../migration/Foxy.rst:147
msgid "``KeepoutFilter``: keep-out/safety zones filter plugin."
msgstr "``KeepoutFilter``：禁止进入/安全区域过滤器插件。"


#: ../../migration/Foxy.rst:148
msgid "``SpeedFilter``: slow/speed-restricted areas filter."
msgstr "``SpeedFilter``: slow/speed-restricted areas filter."


#: ../../migration/Foxy.rst:149
msgid "Preferred lanes in industries. This plugin is covered by ``KeepoutFilter`` (see discussion in `corresponding PR <https://github.com/ros-planning/navigation2/issues/1522>`_ for more details)."
msgstr "Preferred lanes in industries. This plugin is covered by ``KeepoutFilter`` (see discussion in `corresponding PR <https://github.com/ros-planning/navigation2/issues/1522>`_ for more details)."


#: ../../migration/Foxy.rst:151
msgid "Each costmap filter subscribes to filter info topic (publishing by `Costmap Filter Info Publisher Server <https://github.com/ros-planning/navigation2/tree/main/nav2_map_server/src/costmap_filter_info>`_) having all necessary information for loaded costmap filter and filter mask topic. ``SpeedFilter`` additionally publishes maximum speed restricting `messages <https://github.com/ros-planning/navigation2/blob/main/nav2_msgs/msg/SpeedLimit.msg>`_ targeted for a Controller to enforce robot won't exceed given limit."
msgstr "Each costmap filter subscribes to filter info topic (publishing by `Costmap Filter Info Publisher Server <https://github.com/ros-planning/navigation2/tree/main/nav2_map_server/src/costmap_filter_info>`_) having all necessary information for loaded costmap filter and filter mask topic. ``SpeedFilter`` additionally publishes maximum speed restricting `messages <https://github.com/ros-planning/navigation2/blob/main/nav2_msgs/msg/SpeedLimit.msg>`_ targeted for a Controller to enforce robot won't exceed given limit."


#: ../../migration/Foxy.rst:154
msgid "High-level design of this concept could be found `here <https://github.com/ros-planning/navigation2/tree/main/doc/design/CostmapFilters_design.pdf>`_. The functionality of costmap filters is being disscussed in `the ticket #1263 <https://github.com/ros-planning/navigation2/issues/1263>`_ and carried out by `PR #1882 <https://github.com/ros-planning/navigation2/pull/1882>`_. The following tutorials: :ref:`navigation2_with_keepout_filter` and :ref:`navigation2_with_speed_filter` will help to easily get involved with ``KeepoutFilter`` and ``SpeedFilter`` functionalities."
msgstr "High-level design of this concept could be found `here <https://github.com/ros-planning/navigation2/tree/main/doc/design/CostmapFilters_design.pdf>`_. The functionality of costmap filters is being disscussed in `the ticket #1263 <https://github.com/ros-planning/navigation2/issues/1263>`_ and carried out by `PR #1882 <https://github.com/ros-planning/navigation2/pull/1882>`_. The following tutorials: :ref:`navigation2_with_keepout_filter` and :ref:`navigation2_with_speed_filter` will help to easily get involved with ``KeepoutFilter`` and ``SpeedFilter`` functionalities."


#: ../../migration/Foxy.rst:157
msgid "SmacPlanner"
msgstr "SmacPlanner"


#: ../../migration/Foxy.rst:159
msgid "A new package, ``nav2_smac_planner`` was added containing 4 or 8 connected 2D A*, and Dubin and Reed-shepp model hybrid-A* with smoothing, multi-resolution query, and more."
msgstr "A new package, ``nav2_smac_planner`` was added containing 4 or 8 connected 2D A*, and Dubin and Reed-shepp model hybrid-A* with smoothing, multi-resolution query, and more."


#: ../../migration/Foxy.rst:161
msgid "The ``nav2_smac_planner`` package contains an optimized templated A* search algorithm used to create multiple A*-based planners for multiple types of robot platforms. We support differential-drive and omni-directional drive robots using the ``SmacPlanner2D`` planner which implements a cost-aware A* planner. We support cars, car-like, and ackermann vehicles using the ``SmacPlanner`` plugin which implements a Hybrid-A* planner. This plugin is also useful for curvature constrained planning, like when planning robot at high speeds to make sure they don't flip over or otherwise skid out of control."
msgstr "The ``nav2_smac_planner`` package contains an optimized templated A* search algorithm used to create multiple A*-based planners for multiple types of robot platforms. We support differential-drive and omni-directional drive robots using the ``SmacPlanner2D`` planner which implements a cost-aware A* planner. We support cars, car-like, and ackermann vehicles using the ``SmacPlanner`` plugin which implements a Hybrid-A* planner. This plugin is also useful for curvature constrained planning, like when planning robot at high speeds to make sure they don't flip over or otherwise skid out of control."


#: ../../migration/Foxy.rst:163
msgid "The ``SmacPlanner`` fully-implements the Hybrid-A* planner as proposed in `Practical Search Techniques in Path Planning for Autonomous Driving <https://ai.stanford.edu/~ddolgov/papers/dolgov_gpp_stair08.pdf>`_, including hybrid searching, CG smoothing, analytic expansions and hueristic functions."
msgstr "The ``SmacPlanner`` fully-implements the Hybrid-A* planner as proposed in `Practical Search Techniques in Path Planning for Autonomous Driving <https://ai.stanford.edu/~ddolgov/papers/dolgov_gpp_stair08.pdf>`_, including hybrid searching, CG smoothing, analytic expansions and hueristic functions."


#: ../../migration/Foxy.rst:166
msgid "ThetaStarPlanner"
msgstr "ThetaStarPlanner"


#: ../../migration/Foxy.rst:167
msgid "A new package, ``nav2_theta_star_planner`` was added containing 4 or 8 connected Theta* implementation for 2D maps."
msgstr "A new package, ``nav2_theta_star_planner`` was added containing 4 or 8 connected Theta* implementation for 2D maps."


#: ../../migration/Foxy.rst:169
msgid "This package implements an optimized version of the Theta* Path Planner (specifically the `Lazy Theta\\* P <http://idm-lab.org/bib/abstracts/papers/aaai10b.pdf>`_ variant) to plan any-angled paths for differential-drive and omni-directional robots, while also taking into account the costmap costs. This plugin is useful for the cases where you might want to plan a path at a higher rate but without requiring extremely smooth paths around the corners which, for example, could be handled by a local planner/controller."
msgstr "This package implements an optimized version of the Theta* Path Planner (specifically the `Lazy Theta\\* P <http://idm-lab.org/bib/abstracts/papers/aaai10b.pdf>`_ variant) to plan any-angled paths for differential-drive and omni-directional robots, while also taking into account the costmap costs. This plugin is useful for the cases where you might want to plan a path at a higher rate but without requiring extremely smooth paths around the corners which, for example, could be handled by a local planner/controller."


#: ../../migration/Foxy.rst:172
msgid "RegulatedPurePursuitController"
msgstr "RegulatedPurePursuitController"


#: ../../migration/Foxy.rst:174
msgid "A new package, ``nav2_regulated_pure_pursuit_controller`` was added containing a novel varient of the Pure Pursuit algorithm. It also includes configurations to enable Pure Pursuit and Adaptive Pure Pursuit variations as well."
msgstr "A new package, ``nav2_regulated_pure_pursuit_controller`` was added containing a novel varient of the Pure Pursuit algorithm. It also includes configurations to enable Pure Pursuit and Adaptive Pure Pursuit variations as well."


#: ../../migration/Foxy.rst:177
msgid "This variation is specifically targeting service / industrial robot needs. It regulates the linear velocities by curvature of the path to help reduce overshoot at high speeds around blind corners allowing operations to be much more safe. It also better follows paths than any other variation currently available of Pure Pursuit. It also has heuristics to slow in proximity to other obstacles so that you can slow the robot automatically when nearby potential collisions. It also implements the Adaptive lookahead point features to be scaled by velocities to enable more stable behavior in a larger range of translational speeds."
msgstr "This variation is specifically targeting service / industrial robot needs. It regulates the linear velocities by curvature of the path to help reduce overshoot at high speeds around blind corners allowing operations to be much more safe. It also better follows paths than any other variation currently available of Pure Pursuit. It also has heuristics to slow in proximity to other obstacles so that you can slow the robot automatically when nearby potential collisions. It also implements the Adaptive lookahead point features to be scaled by velocities to enable more stable behavior in a larger range of translational speeds."


#: ../../migration/Foxy.rst:183
msgid "There's more this does, that that's the general information. See the package's ``README`` for more."
msgstr "There's more this does, that that's the general information. See the package's ``README`` for more."


#: ../../migration/Foxy.rst:186
msgid "Costmap2D ``current_`` Usage"
msgstr "Costmap2D ``current_`` Usage"


#: ../../migration/Foxy.rst:188
msgid "In costmap2D, ``current_`` was used in ROS1 to represent whether a costmap layer was still enabled and actively processing data. It would be turned to ``false`` only under the situation that the expected update rate of a sensor was not met, so it was getting stale or no messages. It acts as a fail-safe for if a navigation sensor stops publishing."
msgstr "In costmap2D, ``current_`` was used in ROS1 to represent whether a costmap layer was still enabled and actively processing data. It would be turned to ``false`` only under the situation that the expected update rate of a sensor was not met, so it was getting stale or no messages. It acts as a fail-safe for if a navigation sensor stops publishing."


#: ../../migration/Foxy.rst:190
msgid "In galactic, that will remain turn, however it will also add additional capabilities. It is also now set to ``false`` when a costmap is reset due to clearing or other navigation recoveries. That stops the robot from creating a plan or control effort until after the costmap has been updated at least once after a reset. This enables us to make sure we cannot ever create a path or control with a completely empty costmap, potentially leading to collisions, due to clearing the costmap and then immediately requesting an algorithm to run."
msgstr "In galactic, that will remain turn, however it will also add additional capabilities. It is also now set to ``false`` when a costmap is reset due to clearing or other navigation recoveries. That stops the robot from creating a plan or control effort until after the costmap has been updated at least once after a reset. This enables us to make sure we cannot ever create a path or control with a completely empty costmap, potentially leading to collisions, due to clearing the costmap and then immediately requesting an algorithm to run."


#: ../../migration/Foxy.rst:193
msgid "Standard time units in parameters"
msgstr "Standard time units in parameters"


#: ../../migration/Foxy.rst:194
msgid "To follow the SI units outlined in REP-103 to the \"T\" nodes below were modified to use seconds consistently in every parameter. Under each node name you can see which parameters changed to seconds instead of using milliseconds."
msgstr "To follow the SI units outlined in REP-103 to the \"T\" nodes below were modified to use seconds consistently in every parameter. Under each node name you can see which parameters changed to seconds instead of using milliseconds."


#: ../../migration/Foxy.rst:196
msgid "lifecycle manager"
msgstr "lifecycle manager"


#: ../../migration/Foxy.rst:198
msgid "``bond_timeout_ms`` became ``bond_timeout`` in seconds"
msgstr "``bond_timeout_ms`` became ``bond_timeout`` in seconds"


#: ../../migration/Foxy.rst:200
msgid "smac planner"
msgstr "smac planner"


#: ../../migration/Foxy.rst:202
msgid "``max_planning_time_ms`` became ``max_planning_time`` in seconds"
msgstr "``max_planning_time_ms`` became ``max_planning_time`` in seconds"


#: ../../migration/Foxy.rst:204
msgid "map saver"
msgstr "map saver"


#: ../../migration/Foxy.rst:206
msgid "``save_map_timeout`` in seconds"
msgstr "``save_map_timeout`` in seconds"


#: ../../migration/Foxy.rst:209
msgid "Ray Tracing Parameters"
msgstr "Ray Tracing Parameters"


#: ../../migration/Foxy.rst:210
msgid "Raytracing functionality was modified to include a minimum range parameter from which ray tracing starts to clear obstacles to avoid incorrectly clearing obstacles too close to the robot. This issue was mentioned in `ROS Answers <https://answers.ros.org/question/355150/obstacles-in-sensor-deadzone/>`_. An existing parameter ``raytrace_range`` was renamed to ``raytrace_max_range`` to reflect the functionality it affects. The renamed parameters and the plugins that they belong to are mentioned below. The changes were introduced in this `pull request <https://github.com/ros-planning/navigation2/pull/2126>`_."
msgstr "Raytracing functionality was modified to include a minimum range parameter from which ray tracing starts to clear obstacles to avoid incorrectly clearing obstacles too close to the robot. This issue was mentioned in `ROS Answers <https://answers.ros.org/question/355150/obstacles-in-sensor-deadzone/>`_. An existing parameter ``raytrace_range`` was renamed to ``raytrace_max_range`` to reflect the functionality it affects. The renamed parameters and the plugins that they belong to are mentioned below. The changes were introduced in this `pull request <https://github.com/ros-planning/navigation2/pull/2126>`_."


#: ../../migration/Foxy.rst:212 ../../migration/Foxy.rst:228
msgid "obstacle_layer plugin"
msgstr "obstacle_layer plugin"


#: ../../migration/Foxy.rst:214 ../../migration/Foxy.rst:220
msgid "``raytrace_min_range`` controls the minimum range from which ray tracing clears obstacles from the costmap"
msgstr "``raytrace_min_range`` controls the minimum range from which ray tracing clears obstacles from the costmap"


#: ../../migration/Foxy.rst:216 ../../migration/Foxy.rst:222
msgid "``raytrace_max_range`` controls the maximum range to which ray tracing clears obstacles from the costmap"
msgstr "``raytrace_max_range`` controls the maximum range to which ray tracing clears obstacles from the costmap"


#: ../../migration/Foxy.rst:218 ../../migration/Foxy.rst:234
msgid "voxel_layer plugin"
msgstr "voxel_layer plugin"


#: ../../migration/Foxy.rst:225
msgid "Obstacle Marking Parameters"
msgstr "Obstacle Marking Parameters"


#: ../../migration/Foxy.rst:226
msgid "Obstacle marking was modified to include a minimum range parameter from which obstacles are marked on the costmap to prevent addition of obstacles in the costmap due to noisy and incorrect measurements. This modification is related to the change with the raytracing parameters. The renamed parameters, newly added parameters and the plugins they belong to are given below."
msgstr "Obstacle marking was modified to include a minimum range parameter from which obstacles are marked on the costmap to prevent addition of obstacles in the costmap due to noisy and incorrect measurements. This modification is related to the change with the raytracing parameters. The renamed parameters, newly added parameters and the plugins they belong to are given below."


#: ../../migration/Foxy.rst:230 ../../migration/Foxy.rst:236
msgid "``obstacle_min_range`` controls the minimum range from which obstacle are marked on the costmap"
msgstr "``obstacle_min_range`` controls the minimum range from which obstacle are marked on the costmap"


#: ../../migration/Foxy.rst:232 ../../migration/Foxy.rst:238
msgid "``obstacle_max_range`` controls the maximum range to which obstacles are marked on the costmap"
msgstr "``obstacle_max_range`` controls the maximum range to which obstacles are marked on the costmap"


#: ../../migration/Foxy.rst:241
msgid "Recovery Action Changes"
msgstr "Recovery Action Changes"


#: ../../migration/Foxy.rst:242
msgid "The recovery actions, ``Spin`` and ``BackUp`` were modified to correctly return ``FAILURE`` if the recovery action is aborted due to a potential collision. Previously, these actions incorrectly always returned ``SUCCESS``. Changes to this resulted in downstream action clients, such as the default behavior tree. The changes were introduced in this `pull request 1855 <https://github.com/ros-planning/navigation2/pull/1855>`_."
msgstr "The recovery actions, ``Spin`` and ``BackUp`` were modified to correctly return ``FAILURE`` if the recovery action is aborted due to a potential collision. Previously, these actions incorrectly always returned ``SUCCESS``. Changes to this resulted in downstream action clients, such as the default behavior tree. The changes were introduced in this `pull request 1855 <https://github.com/ros-planning/navigation2/pull/1855>`_."


#: ../../migration/Foxy.rst:245
msgid "Default Behavior Tree Changes"
msgstr "Default Behavior Tree Changes"


#: ../../migration/Foxy.rst:246
msgid "The default behavior tree (BT) ``navigate_w_replanning_and_recovery.xml`` has been updated to allow for replanning in between recoveries. The changes were introduced in this `PR 1855 <https://github.com/ros-planning/navigation2/pull/1855>`_. Additionally, an alternative BT ``navigate_w_replanning_and_round_robin_recovery.xml`` was removed due to similarity with the updated default BT."
msgstr "The default behavior tree (BT) ``navigate_w_replanning_and_recovery.xml`` has been updated to allow for replanning in between recoveries. The changes were introduced in this `PR 1855 <https://github.com/ros-planning/navigation2/pull/1855>`_. Additionally, an alternative BT ``navigate_w_replanning_and_round_robin_recovery.xml`` was removed due to similarity with the updated default BT."


#: ../../migration/Foxy.rst:249
msgid "NavFn Planner Parameters"
msgstr "NavFn Planner Parameters"


#: ../../migration/Foxy.rst:250
msgid "The NavFn Planner has now its 3 parameters reconfigurable at runtime (``tolerance``, ``use_astar`` and ``allow_unknown``). The changes were introduced in this `pull request 2181 <https://github.com/ros-planning/navigation2/pull/2181>`_."
msgstr "The NavFn Planner has now its 3 parameters reconfigurable at runtime (``tolerance``, ``use_astar`` and ``allow_unknown``). The changes were introduced in this `pull request 2181 <https://github.com/ros-planning/navigation2/pull/2181>`_."


#: ../../migration/Foxy.rst:253
msgid "New ClearCostmapExceptRegion and ClearCostmapAroundRobot BT-nodes"
msgstr "New ClearCostmapExceptRegion and ClearCostmapAroundRobot BT-nodes"


#: ../../migration/Foxy.rst:254
msgid "The ClearEntireCostmap action node was already implemented but the ClearCostmapExceptRegion and ClearCostmapAroundRobot BT nodes calling the sister services ``(local_or_global)_costmap/clear_except_(local_or_global)_costmap`` and ``clear_around_(local_or_global)_costmap`` of Costmap 2D were missing, they are now implemented in a similar way. They both expose a ``reset_distance`` input port. See :ref:`bt_clear_costmap_except_region_action` and :ref:`bt_clear_entire_costmap_around_robot_action` for more.  The changes were introduced in this `pull request 2204 <https://github.com/ros-planning/navigation2/pull/2204>`_."
msgstr "The ClearEntireCostmap action node was already implemented but the ClearCostmapExceptRegion and ClearCostmapAroundRobot BT nodes calling the sister services ``(local_or_global)_costmap/clear_except_(local_or_global)_costmap`` and ``clear_around_(local_or_global)_costmap`` of Costmap 2D were missing, they are now implemented in a similar way. They both expose a ``reset_distance`` input port. See :ref:`bt_clear_costmap_except_region_action` and :ref:`bt_clear_entire_costmap_around_robot_action` for more.  The changes were introduced in this `pull request 2204 <https://github.com/ros-planning/navigation2/pull/2204>`_."


#: ../../migration/Foxy.rst:257
msgid "New Behavior Tree Nodes"
msgstr "New Behavior Tree Nodes"


#: ../../migration/Foxy.rst:258
msgid "A new behavior tree node was added and dynamically loadable at run-time using behavior tree cpp v3. See ``nav2_behavior_tree`` for a full listing, or :ref:`plugins` for the current list of behavior tree plugins and their descriptions. These plugins are set as default in the ``nav2_bt_navigator`` but may be overridden by the ``bt_plugins`` parameter to include your specific plugins."
msgstr "A new behavior tree node was added and dynamically loadable at run-time using behavior tree cpp v3. See ``nav2_behavior_tree`` for a full listing, or :ref:`plugins` for the current list of behavior tree plugins and their descriptions. These plugins are set as default in the ``nav2_bt_navigator`` but may be overridden by the ``bt_plugins`` parameter to include your specific plugins."


#: ../../migration/Foxy.rst:264
msgid "`SingleTrigger <https://github.com/ros-planning/navigation2/pull/2236>`_"
msgstr "`SingleTrigger <https://github.com/ros-planning/navigation2/pull/2236>`_"


#: ../../migration/Foxy.rst:265
msgid "`PlannerSelector <https://github.com/ros-planning/navigation2/pull/2249>`_"
msgstr "`PlannerSelector <https://github.com/ros-planning/navigation2/pull/2249>`_"


#: ../../migration/Foxy.rst:266
msgid "`ControllerSelector <https://github.com/ros-planning/navigation2/pull/2266>`_"
msgstr "`ControllerSelector <https://github.com/ros-planning/navigation2/pull/2266>`_"


#: ../../migration/Foxy.rst:267
msgid "`GoalCheckerSelector <https://github.com/ros-planning/navigation2/pull/2269>`_"
msgstr "`GoalCheckerSelector <https://github.com/ros-planning/navigation2/pull/2269>`_"


#: ../../migration/Foxy.rst:268
msgid "`NavigateThroughPoses <https://github.com/ros-planning/navigation2/pull/2271>`_"
msgstr "`NavigateThroughPoses <https://github.com/ros-planning/navigation2/pull/2271>`_"


#: ../../migration/Foxy.rst:269
msgid "`RemovePassedGoals <https://github.com/ros-planning/navigation2/pull/2271>`_"
msgstr "`RemovePassedGoals <https://github.com/ros-planning/navigation2/pull/2271>`_"


#: ../../migration/Foxy.rst:270
msgid "`ComputePathThroughPoses <https://github.com/ros-planning/navigation2/pull/2271>`_"
msgstr "`ComputePathThroughPoses <https://github.com/ros-planning/navigation2/pull/2271>`_"


#: ../../migration/Foxy.rst:272
msgid "Additionally, behavior tree nodes were modified to contain their own local executors to spin for actions, topics, services, etc to ensure that each behavior tree node is independent of each other (e.g. spinning in one BT node doesn't trigger a callback in another)."
msgstr "Additionally, behavior tree nodes were modified to contain their own local executors to spin for actions, topics, services, etc to ensure that each behavior tree node is independent of each other (e.g. spinning in one BT node doesn't trigger a callback in another)."


#: ../../migration/Foxy.rst:275
msgid "sensor_msgs/PointCloud to sensor_msgs/PointCloud2 Change"
msgstr "sensor_msgs/PointCloud to sensor_msgs/PointCloud2 Change"


#: ../../migration/Foxy.rst:276
msgid "Due to deprecation of `sensor_msgs/PointCloud <https://docs.ros2.org/foxy/api/sensor_msgs/msg/PointCloud.html>`_ the topics which were publishing sensor_msgs/PointCloud are converted to sensor_msgs/PointCloud2. The details on these topics and their respective information are listed below."
msgstr "Due to deprecation of `sensor_msgs/PointCloud <https://docs.ros2.org/foxy/api/sensor_msgs/msg/PointCloud.html>`_ the topics which were publishing sensor_msgs/PointCloud are converted to sensor_msgs/PointCloud2. The details on these topics and their respective information are listed below."


#: ../../migration/Foxy.rst:278
msgid "``clearing_endpoints`` topic in ``voxel_layer`` plugin of ``nav2_costmap_2d`` package"
msgstr "``clearing_endpoints`` topic in ``voxel_layer`` plugin of ``nav2_costmap_2d`` package"


#: ../../migration/Foxy.rst:279
msgid "``voxel_marked_cloud`` and ``voxel_unknown_cloud`` topic in ``costmap_2d_cloud`` node of ``nav2_costmap_2d`` package"
msgstr "``voxel_marked_cloud`` and ``voxel_unknown_cloud`` topic in ``costmap_2d_cloud`` node of ``nav2_costmap_2d`` package"


#: ../../migration/Foxy.rst:280
msgid "``cost_cloud`` topic of ``publisher.cpp`` of ``dwb_core`` package."
msgstr "``cost_cloud`` topic of ``publisher.cpp`` of ``dwb_core`` package."


#: ../../migration/Foxy.rst:282
msgid "These changes were introduced in `pull request 2263 <https://github.com/ros-planning/navigation2/pull/2263>`_."
msgstr "These changes were introduced in `pull request 2263 <https://github.com/ros-planning/navigation2/pull/2263>`_."


#: ../../migration/Foxy.rst:285
msgid "ControllerServer New Parameter failure_tolerance"
msgstr "ControllerServer New Parameter failure_tolerance"


#: ../../migration/Foxy.rst:286
msgid "A new parameter :code:`failure_tolerance` was added to the Controller Server for tolerating controller plugin exceptions without failing immediately. It is analogous to ``controller_patience`` in ROS(1) Nav. See :ref:`configuring_controller_server` for description. This change was introduced in this `pull request 2264 <https://github.com/ros-planning/navigation2/pull/2264>`_."
msgstr "A new parameter :code:`failure_tolerance` was added to the Controller Server for tolerating controller plugin exceptions without failing immediately. It is analogous to ``controller_patience`` in ROS(1) Nav. See :ref:`configuring_controller_server` for description. This change was introduced in this `pull request 2264 <https://github.com/ros-planning/navigation2/pull/2264>`_."


#: ../../migration/Foxy.rst:290
msgid "Removed BT XML Launch Configurations"
msgstr "Removed BT XML Launch Configurations"


#: ../../migration/Foxy.rst:291
msgid "The launch python configurations for CLI setting of the behavior tree XML file has been removed. Instead, you should use the yaml files to set this value. If you, however, have a ``path`` to the yaml file that is inconsistent in a larger deployment, you can use the ``RewrittenYaml`` tool in your parent launch file to remap the default XML paths utilizing the ``get_shared_package_path()`` directory finder (or as you were before in python3)."
msgstr "The launch python configurations for CLI setting of the behavior tree XML file has been removed. Instead, you should use the yaml files to set this value. If you, however, have a ``path`` to the yaml file that is inconsistent in a larger deployment, you can use the ``RewrittenYaml`` tool in your parent launch file to remap the default XML paths utilizing the ``get_shared_package_path()`` directory finder (or as you were before in python3)."


#: ../../migration/Foxy.rst:293
msgid "The use of map subscription QoS launch configuration was also removed, use parameter file. This change was introduced in this `pull request 2295 <https://github.com/ros-planning/navigation2/pull/2295>`_."
msgstr "The use of map subscription QoS launch configuration was also removed, use parameter file. This change was introduced in this `pull request 2295 <https://github.com/ros-planning/navigation2/pull/2295>`_."


#: ../../migration/Foxy.rst:297
msgid "Nav2 RViz Panel Action Feedback Information"
msgstr "Nav2 RViz Panel Action Feedback Information"


#: ../../migration/Foxy.rst:298
msgid "The Nav2 RViz Panel now displays the action feedback published by ``nav2_msgs/NavigateToPose`` and ``nav2_msgs/NavigateThroughPoses`` actions. Users can find information like the estimated time of arrival, distance remaining to goal, time elapsed since navigation started, and number of recoveries performed during a navigation action directly through the RViz panel. This feature was introduced in this `pull request 2338 <https://github.com/ros-planning/navigation2/pull/2338>`_."
msgstr "The Nav2 RViz Panel now displays the action feedback published by ``nav2_msgs/NavigateToPose`` and ``nav2_msgs/NavigateThroughPoses`` actions. Users can find information like the estimated time of arrival, distance remaining to goal, time elapsed since navigation started, and number of recoveries performed during a navigation action directly through the RViz panel. This feature was introduced in this `pull request 2338 <https://github.com/ros-planning/navigation2/pull/2338>`_."


msgid "Navigation feedback in RViz."
msgstr "Navigation feedback in RViz."


#: ../../migration/Galactic.rst:4
msgid "Galactic to Humble"
msgstr "Galactic to Humble"


#: ../../migration/Galactic.rst:6
msgid "Moving from ROS 2 Galactic to Humble, a number of stability improvements were added that we will not specifically address here."
msgstr "Moving from ROS 2 Galactic to Humble, a number of stability improvements were added that we will not specifically address here."


#: ../../migration/Galactic.rst:9
msgid "Major improvements to Smac Planners"
msgstr "Major improvements to Smac Planners"


#: ../../migration/Galactic.rst:11
msgid "The Smac Planner was significantly improved, of both the 2D and Hybrid-A* implementations, making the paths better, faster, and of higher quality."
msgstr "The Smac Planner was significantly improved, of both the 2D and Hybrid-A* implementations, making the paths better, faster, and of higher quality."


#: ../../migration/Galactic.rst:13
msgid "Collision checker rejects collisions faster and queries the costmap for coordinates less often"
msgstr "Collision checker rejects collisions faster and queries the costmap for coordinates less often"


#: ../../migration/Galactic.rst:14
msgid "Zero-copy collision checking object"
msgstr "Zero-copy collision checking object"


#: ../../migration/Galactic.rst:15
msgid "precompute collision checking footprint orientations so no need for trig at runtime"
msgstr "precompute collision checking footprint orientations so no need for trig at runtime"


#: ../../migration/Galactic.rst:16
msgid "Only checking full SE2 footprint when the robot is in the possibly inscribed zones"
msgstr "Only checking full SE2 footprint when the robot is in the possibly inscribed zones"


#: ../../migration/Galactic.rst:17
msgid "Computing the possibly inscribed zones, or the cost over which some part of the footprint may be in collision with a boundary to check the full footprint. Else, check center cost since promised to not be in a potential collision state"
msgstr "Computing the possibly inscribed zones, or the cost over which some part of the footprint may be in collision with a boundary to check the full footprint. Else, check center cost since promised to not be in a potential collision state"


#: ../../migration/Galactic.rst:18
msgid "Renaming Hybrid-A* planner to SmacPlannerHybrid"
msgstr "Renaming Hybrid-A* planner to SmacPlannerHybrid"


#: ../../migration/Galactic.rst:19
msgid "Precomputing the Reedshepp and Dubin paths offline so at runtime its just a lookup table"
msgstr "Precomputing the Reedshepp and Dubin paths offline so at runtime its just a lookup table"


#: ../../migration/Galactic.rst:20
msgid "Replacing the wavefront heuristic with a new, and novel, heuristic dubbed the obstacle heuristic. This computes a Dijkstra's path using Differential A* search taking into account the 8 connected space, as well as weights for the cost at the positions to guide the heuristic into the center of aisle ways. It also downsamples the costmap such that it can reduce the number of expansions by 75% and have a very small error introduced into the heuristic by being off by at most a partial fraction of a single cell distance"
msgstr "Replacing the wavefront heuristic with a new, and novel, heuristic dubbed the obstacle heuristic. This computes a Dijkstra's path using Differential A* search taking into account the 8 connected space, as well as weights for the cost at the positions to guide the heuristic into the center of aisle ways. It also downsamples the costmap such that it can reduce the number of expansions by 75% and have a very small error introduced into the heuristic by being off by at most a partial fraction of a single cell distance"


#: ../../migration/Galactic.rst:21
msgid "Improvements to the analytic expansion algorithm to remove the possibility of loops at the end of paths, whenever possible to remove"
msgstr "Improvements to the analytic expansion algorithm to remove the possibility of loops at the end of paths, whenever possible to remove"


#: ../../migration/Galactic.rst:22
msgid "Improving analytic expansions to provide maximum path length to prevent skirting close to obstacles"
msgstr "Improving analytic expansions to provide maximum path length to prevent skirting close to obstacles"


#: ../../migration/Galactic.rst:23
msgid "2D A* travel cost and heuristic improvements to speed up planning times and also increase the path quality significantly"
msgstr "2D A* travel cost and heuristic improvements to speed up planning times and also increase the path quality significantly"


#: ../../migration/Galactic.rst:24
msgid "Replaced smoother with a bespoke gradient descent implementation"
msgstr "Replaced smoother with a bespoke gradient descent implementation"


#: ../../migration/Galactic.rst:25
msgid "Abstract out common utilities of planners into a utils file"
msgstr "Abstract out common utilities of planners into a utils file"


#: ../../migration/Galactic.rst:26
msgid "tuned cost functions"
msgstr "tuned cost functions"


#: ../../migration/Galactic.rst:27
msgid "precomputed obstacle heuristic using dynamic programming to expand only the minimum number of nodes"
msgstr "precomputed obstacle heuristic using dynamic programming to expand only the minimum number of nodes"


#: ../../migration/Galactic.rst:28
msgid "A caching heuristic setting to enable 25hz planning rates using cached obstacle heuristic values when the goal remains the same"
msgstr "A caching heuristic setting to enable 25hz planning rates using cached obstacle heuristic values when the goal remains the same"


#: ../../migration/Galactic.rst:29
msgid "Leveraging the symmetry in the dubin and reeds-sheep space to reduce cache size by 50% to increase the window size available for heuristic lookup."
msgstr "Leveraging the symmetry in the dubin and reeds-sheep space to reduce cache size by 50% to increase the window size available for heuristic lookup."


#: ../../migration/Galactic.rst:30
msgid "Precompute primitives at all orientation bins"
msgstr "Precompute primitives at all orientation bins"


#: ../../migration/Galactic.rst:31
msgid "SmacPlanner2D parameters are now all reconfigurable"
msgstr "SmacPlanner2D parameters are now all reconfigurable"


#: ../../migration/Galactic.rst:32
msgid "Both Hybrid-A* and State Lattice planners are now fully admissible"
msgstr "Both Hybrid-A* and State Lattice planners are now fully admissible"


#: ../../migration/Galactic.rst:33
msgid "Hybrid-A* and State Lattice have had their parameterization for path smoothing readded."
msgstr "Hybrid-A* and State Lattice have had their parameterization for path smoothing readded."


#: ../../migration/Galactic.rst:34
msgid "The smoother now enables kinematically feasible boundary conditions."
msgstr "The smoother now enables kinematically feasible boundary conditions."


#: ../../migration/Galactic.rst:35
msgid "State Lattice supports turning in place primitive types"
msgstr "State Lattice supports turning in place primitive types"


#: ../../migration/Galactic.rst:36
msgid "Retrospective penalty added to speed up the planner, making it prioritize later search branches before earlier ones, which have negligible chance to improve path in vast majority of situations"
msgstr "Retrospective penalty added to speed up the planner, making it prioritize later search branches before earlier ones, which have negligible chance to improve path in vast majority of situations"


#: ../../migration/Galactic.rst:42
msgid "The tl;dr of these improvements is:"
msgstr "The tl;dr of these improvements is:"


#: ../../migration/Galactic.rst:39
msgid "Plans are 2-3x as fast as they were before, well under 200ms for nearly all situations, making it as fast as NavFn and Global Planner (but now kinematically feasible). Typical planning times are sub-100ms without even making use of the caching or downsampling features."
msgstr "Plans are 2-3x as fast as they were before, well under 200ms for nearly all situations, making it as fast as NavFn and Global Planner (but now kinematically feasible). Typical planning times are sub-100ms without even making use of the caching or downsampling features."


#: ../../migration/Galactic.rst:40
msgid "Paths are of significantly higher quality via improved smoothers and a novel heuristic that steers the robot towards the center of aisleways implicitly. This makes smoother paths that are also further from obstacles whenever possible."
msgstr "Paths are of significantly higher quality via improved smoothers and a novel heuristic that steers the robot towards the center of aisleways implicitly. This makes smoother paths that are also further from obstacles whenever possible."


#: ../../migration/Galactic.rst:41
msgid "Using caching or downsampler parameterizations, can easily achieve path planning with sub-50ms in nearly any sized space."
msgstr "Using caching or downsampler parameterizations, can easily achieve path planning with sub-50ms in nearly any sized space."


#: ../../migration/Galactic.rst:42
msgid "Smoother is now able to do more refinements and can create kinematically feasible boundary conditions, even while reversing."
msgstr "Smoother is now able to do more refinements and can create kinematically feasible boundary conditions, even while reversing."


#: ../../migration/Galactic.rst:44
msgid "Additional improvements were made to include a ``analytic_expansion_max_length`` parameter such that analytic expansions are limited in their potential length. If the length is too far, reject this expansion. This prevents unsafe shortcutting of paths into higher cost areas far out from the goal itself, let search to the work of getting close before the analytic expansion brings it home. This should never be smaller than 4-5x the minimum turning radius being used, or planning times will begin to spike."
msgstr "Additional improvements were made to include a ``analytic_expansion_max_length`` parameter such that analytic expansions are limited in their potential length. If the length is too far, reject this expansion. This prevents unsafe shortcutting of paths into higher cost areas far out from the goal itself, let search to the work of getting close before the analytic expansion brings it home. This should never be smaller than 4-5x the minimum turning radius being used, or planning times will begin to spike."


#: ../../migration/Galactic.rst:46
msgid "Further, the traversal cost and heuristic cost computations were updated **requiring retuning of your penalty functions** if you have a previously existing configuration. Defaults of the algorithm were also retuned appropriately to the change for similar our of the box behavior as before (to use as a reference)."
msgstr "Further, the traversal cost and heuristic cost computations were updated **requiring retuning of your penalty functions** if you have a previously existing configuration. Defaults of the algorithm were also retuned appropriately to the change for similar our of the box behavior as before (to use as a reference)."


#: ../../migration/Galactic.rst:49
msgid "Simple (Python) Commander"
msgstr "Simple (Python) Commander"


#: ../../migration/Galactic.rst:51
msgid "`This PR 2411 <https://github.com/ros-planning/navigation2/pull/2411>`_ introduces a new package to Nav2, called the ``nav2_simple_commander``. It is a set of functions in an object, ``BasicNavigator``, which can be used to build Nav2-powered autonomy tasks in Python3 without concerning yourself with the Nav2, ROS 2, or Action server details. It contains a simple API taking common types (primarily ``PoseStamped``) and handles all of the implementation details behind the hood. For example, this is a simple navigation task using this API:"
msgstr "`This PR 2411 <https://github.com/ros-planning/navigation2/pull/2411>`_ introduces a new package to Nav2, called the ``nav2_simple_commander``. It is a set of functions in an object, ``BasicNavigator``, which can be used to build Nav2-powered autonomy tasks in Python3 without concerning yourself with the Nav2, ROS 2, or Action server details. It contains a simple API taking common types (primarily ``PoseStamped``) and handles all of the implementation details behind the hood. For example, this is a simple navigation task using this API:"


#: ../../migration/Galactic.rst:88
msgid "`The full API can be found in the README of the package <https://github.com/ros-planning/navigation2/tree/main/nav2_simple_commander>`_. A number of well commented examples and demos can also be found in the package's source code at the link prior."
msgstr "`The full API can be found in the README of the package <https://github.com/ros-planning/navigation2/tree/main/nav2_simple_commander>`_. A number of well commented examples and demos can also be found in the package's source code at the link prior."


#: ../../migration/Galactic.rst:92
msgid "Reduce Nodes and Executors"
msgstr "Reduce Nodes and Executors"


#: ../../migration/Galactic.rst:94
msgid "In order for nav2 to make the best use of ROS 2, we need minimize the number of nodes and executors in nav2, which can improve performance."
msgstr "In order for nav2 to make the best use of ROS 2, we need minimize the number of nodes and executors in nav2, which can improve performance."


#: ../../migration/Galactic.rst:96
msgid "This functionality has been discussed in `the ticket #816 <https://github.com/ros-planning/navigation2/issues/816>`_, and carried out in"
msgstr "This functionality has been discussed in `the ticket #816 <https://github.com/ros-planning/navigation2/issues/816>`_, and carried out in"


#: ../../migration/Galactic.rst:98
msgid "Remove ``client_node_`` in ``class WaypointFollower`` : `PR2441 <https://github.com/ros-planning/navigation2/pull/2441>`_"
msgstr "Remove ``client_node_`` in ``class WaypointFollower`` : `PR2441 <https://github.com/ros-planning/navigation2/pull/2441>`_"


#: ../../migration/Galactic.rst:99
msgid "Remove ``rclcpp_node_`` in ``class MapSaver`` : `PR2454 <https://github.com/ros-planning/navigation2/pull/2454>`_"
msgstr "Remove ``rclcpp_node_`` in ``class MapSaver`` : `PR2454 <https://github.com/ros-planning/navigation2/pull/2454>`_"


#: ../../migration/Galactic.rst:100
msgid "Remove ``bond_client_node_`` in ``class LifecycleManager`` : `PR2456 <https://github.com/ros-planning/navigation2/pull/2456>`_"
msgstr "Remove ``bond_client_node_`` in ``class LifecycleManager`` : `PR2456 <https://github.com/ros-planning/navigation2/pull/2456>`_"


#: ../../migration/Galactic.rst:101
msgid "Remove ``node_`` in ``class LifecycleManagerClient`` : `PR2469 <https://github.com/ros-planning/navigation2/pull/2469>`_"
msgstr "Remove ``node_`` in ``class LifecycleManagerClient`` : `PR2469 <https://github.com/ros-planning/navigation2/pull/2469>`_"


#: ../../migration/Galactic.rst:102
msgid "Remove ``rclcpp_node_`` in ``class ControllerServer`` : `PR2459 <https://github.com/ros-planning/navigation2/pull/2459>`_, `PR2479 <https://github.com/ros-planning/navigation2/pull/2479>`_"
msgstr "Remove ``rclcpp_node_`` in ``class ControllerServer`` : `PR2459 <https://github.com/ros-planning/navigation2/pull/2459>`_, `PR2479 <https://github.com/ros-planning/navigation2/pull/2479>`_"


#: ../../migration/Galactic.rst:103
msgid "Remove ``rclcpp_node_`` in ``class PlannerServer`` : `PR2459 <https://github.com/ros-planning/navigation2/pull/2459>`_, `PR2480 <https://github.com/ros-planning/navigation2/pull/2480>`_"
msgstr "Remove ``rclcpp_node_`` in ``class PlannerServer`` : `PR2459 <https://github.com/ros-planning/navigation2/pull/2459>`_, `PR2480 <https://github.com/ros-planning/navigation2/pull/2480>`_"


#: ../../migration/Galactic.rst:104
msgid "Remove ``rclcpp_node_`` in ``class AmclNode`` : `PR2483 <https://github.com/ros-planning/navigation2/pull/2483>`_"
msgstr "Remove ``rclcpp_node_`` in ``class AmclNode`` : `PR2483 <https://github.com/ros-planning/navigation2/pull/2483>`_"


#: ../../migration/Galactic.rst:105
msgid "Remove ``rclcpp_node_`` and ``clinet_node_`` in ``class Costmap2DROS`` : `PR2489 <https://github.com/ros-planning/navigation2/pull/2489>`_"
msgstr "Remove ``rclcpp_node_`` and ``clinet_node_`` in ``class Costmap2DROS`` : `PR2489 <https://github.com/ros-planning/navigation2/pull/2489>`_"


#: ../../migration/Galactic.rst:106
msgid "Remove ``rclcpp_node_`` in ``class LifecycleNode`` : `PR2993 <https://github.com/ros-planning/navigation2/pull/2993>`_"
msgstr "Remove ``rclcpp_node_`` in ``class LifecycleNode`` : `PR2993 <https://github.com/ros-planning/navigation2/pull/2993>`_"


#: ../../migration/Galactic.rst:110
msgid "some APIs are changed in these PRs:"
msgstr "some APIs are changed in these PRs:"


#: ../../migration/Galactic.rst:109
msgid "`PR2489 <https://github.com/ros-planning/navigation2/pull/2489>`_ removes arguments ``client_node``, ``rclcpp_node`` and adds argument ``callback_group`` in the initialize function of class ``nav2_costmap_2d::Layer``. ``callback_group`` is used to replace ``rclcpp_node``."
msgstr "`PR2489 <https://github.com/ros-planning/navigation2/pull/2489>`_ removes arguments ``client_node``, ``rclcpp_node`` and adds argument ``callback_group`` in the initialize function of class ``nav2_costmap_2d::Layer``. ``callback_group`` is used to replace ``rclcpp_node``."


#: ../../migration/Galactic.rst:110
msgid "`PR2993 <https://github.com/ros-planning/navigation2/pull/2993>`_ removes argument ``use_rclcpp_node `` in the constructor of class ``nav2_util::LifecycleNode``."
msgstr "`PR2993 <https://github.com/ros-planning/navigation2/pull/2993>`_ removes argument ``use_rclcpp_node `` in the constructor of class ``nav2_util::LifecycleNode``."


#: ../../migration/Galactic.rst:113
msgid "API Change for nav2_core"
msgstr "API Change for nav2_core"


#: ../../migration/Galactic.rst:115
msgid "`PR 2976 <https://github.com/ros-planning/navigation2/pull/2976>`_ changes the API for ``nav2_core::Controller`` and ``nav2_core::Smoother`` by replacing the use of shared pointer references ``(const shared_ptr<> &)`` to shared pointers ``(shared_ptr<>)``. Use of shared pointer references meant that the shared pointer counter was never incremented."
msgstr "`PR 2976 <https://github.com/ros-planning/navigation2/pull/2976>`_ changes the API for ``nav2_core::Controller`` and ``nav2_core::Smoother`` by replacing the use of shared pointer references ``(const shared_ptr<> &)`` to shared pointers ``(shared_ptr<>)``. Use of shared pointer references meant that the shared pointer counter was never incremented."


#: ../../migration/Galactic.rst:120
msgid "Extending the BtServiceNode to process Service-Results"
msgstr "Extending the BtServiceNode to process Service-Results"


#: ../../migration/Galactic.rst:122
msgid "`This PR 2481 <https://github.com/ros-planning/navigation2/pull/2481>`_ and `PR 2992 <https://github.com/ros-planning/navigation2/pull/2992>`_  address `the ticket <https://github.com/ros-planning/navigation2/issues/2467>`_ and `this ticket <https://github.com/ros-planning/navigation2/issues/2968>`_ and adds a virtual ``on_completion()`` function to the ``BtServiceNode`` class (`can be found here <https://github.com/ros-planning/navigation2/blob/c417e2fd267e1dfa880b7ff9d37aaaa7b5eab9ca/nav2_behavior_tree/include/nav2_behavior_tree/bt_service_node.hpp>`_). Similar to the already existing virtual ``on_wait_for_result()`` function, it can be overwritten in the child class to react to a respective event with some user-defined operation. The added ``on_completion()`` function will be called after the service interaction of the ``BtServiceNode`` has been successfully completed."
msgstr "`This PR 2481 <https://github.com/ros-planning/navigation2/pull/2481>`_ and `PR 2992 <https://github.com/ros-planning/navigation2/pull/2992>`_  address `the ticket <https://github.com/ros-planning/navigation2/issues/2467>`_ and `this ticket <https://github.com/ros-planning/navigation2/issues/2968>`_ and adds a virtual ``on_completion()`` function to the ``BtServiceNode`` class (`can be found here <https://github.com/ros-planning/navigation2/blob/c417e2fd267e1dfa880b7ff9d37aaaa7b5eab9ca/nav2_behavior_tree/include/nav2_behavior_tree/bt_service_node.hpp>`_). Similar to the already existing virtual ``on_wait_for_result()`` function, it can be overwritten in the child class to react to a respective event with some user-defined operation. The added ``on_completion()`` function will be called after the service interaction of the ``BtServiceNode`` has been successfully completed."


#: ../../migration/Galactic.rst:139
msgid "The returned ``BT::NodeStatus`` will set the current status of the BT-Node. Since the function has access to the results of the service, the returned node-status can depend on those service results, for example. The normal behavior of the ``BtServiceNode`` is not affected by introducing the ``on_completion()`` function, since the the default implementation still simply returns ``BT::NodeStatus::SUCCESS``, if the service interaction completed successfully."
msgstr "The returned ``BT::NodeStatus`` will set the current status of the BT-Node. Since the function has access to the results of the service, the returned node-status can depend on those service results, for example. The normal behavior of the ``BtServiceNode`` is not affected by introducing the ``on_completion()`` function, since the the default implementation still simply returns ``BT::NodeStatus::SUCCESS``, if the service interaction completed successfully."


#: ../../migration/Galactic.rst:143
msgid "Including new Rotation Shim Controller Plugin"
msgstr "Including new Rotation Shim Controller Plugin"


#: ../../migration/Galactic.rst:145
msgid "`This PR 2718 <https://github.com/ros-planning/navigation2/pull/2718>`_ introduces the new ``nav2_rotation_shim_controller``. This controller will check the rough heading difference with respect to the robot and a newly received path. If within a threshold, it will pass the request onto the primary controller to execute. If it is outside of the threshold, this controller will rotate the robot towards that path heading. Once it is within the tolerance, it will then pass off control-execution from this rotation shim controller onto the primary controller plugin. At this point, the robot is still going to be rotating, allowing the current plugin to take control for a smooth hand off into path tracking."
msgstr "`This PR 2718 <https://github.com/ros-planning/navigation2/pull/2718>`_ introduces the new ``nav2_rotation_shim_controller``. This controller will check the rough heading difference with respect to the robot and a newly received path. If within a threshold, it will pass the request onto the primary controller to execute. If it is outside of the threshold, this controller will rotate the robot towards that path heading. Once it is within the tolerance, it will then pass off control-execution from this rotation shim controller onto the primary controller plugin. At this point, the robot is still going to be rotating, allowing the current plugin to take control for a smooth hand off into path tracking."


#: ../../migration/Galactic.rst:148
msgid "The Rotation Shim Controller is suitable for:"
msgstr "The Rotation Shim Controller is suitable for:"


#: ../../migration/Galactic.rst:150
msgid "Robots that can rotate in place, such as differential and omnidirectional robots."
msgstr "能够原地旋转的机器人，如差分驱动和全向驱动机器人。"


#: ../../migration/Galactic.rst:151
msgid "Preference to rotate in place rather than 'spiral out' when starting to track a new path that is at a significantly different heading than the robot's current heading."
msgstr "Preference to rotate in place rather than 'spiral out' when starting to track a new path that is at a significantly different heading than the robot's current heading."


#: ../../migration/Galactic.rst:152
msgid "Using planners that are non-kinematically feasible, such as NavFn, Theta\\*, or Smac 2D (Feasible planners such as Smac Hybrid-A* and State Lattice will start search from the robot's actual starting heading, requiring no rotation)."
msgstr "Using planners that are non-kinematically feasible, such as NavFn, Theta\\*, or Smac 2D (Feasible planners such as Smac Hybrid-A* and State Lattice will start search from the robot's actual starting heading, requiring no rotation)."


#: ../../migration/Galactic.rst:155
msgid "Spawning the robot in Gazebo"
msgstr "Spawning the robot in Gazebo"


#: ../../migration/Galactic.rst:157
msgid "`This PR 2473 <https://github.com/ros-planning/navigation2/pull/2473>`_ deletes the pkg ``nav2_gazebo_spawner`` inside nav2_bringup directory. Instead of ``nav2_gazebo_spawner`` the Node `spawn_entity.py <https://github.com/ros-simulation/gazebo_ros_pkgs/blob/ros2/gazebo_ros/scripts/spawn_entity.py>`_ of ``gazebo_ros`` is recomended to spawn the robot in gazebo. Note that"
msgstr "`This PR 2473 <https://github.com/ros-planning/navigation2/pull/2473>`_ deletes the pkg ``nav2_gazebo_spawner`` inside nav2_bringup directory. Instead of ``nav2_gazebo_spawner`` the Node `spawn_entity.py <https://github.com/ros-simulation/gazebo_ros_pkgs/blob/ros2/gazebo_ros/scripts/spawn_entity.py>`_ of ``gazebo_ros`` is recomended to spawn the robot in gazebo. Note that"


#: ../../migration/Galactic.rst:160
msgid "gazebo should be started with both ``libgazebo_ros_init.so`` and ``libgazebo_ros_factory.so`` to work correctly."
msgstr "gazebo should be started with both ``libgazebo_ros_init.so`` and ``libgazebo_ros_factory.so`` to work correctly."


#: ../../migration/Galactic.rst:162
msgid "spawn_entity node could not remap /tf and /tf_static to tf and tf_static in the launch file yet, used only for multi-robot situations. This problem was overcame by adding remapping argument ``<remapping>/tf:=tf</remapping>``  ``<remapping>/tf_static:=tf_static</remapping>`` under ros2 tag in each plugin which publishs transforms in the SDF file. It is essential to differentiate the tf's of the different robot."
msgstr "spawn_entity node could not remap /tf and /tf_static to tf and tf_static in the launch file yet, used only for multi-robot situations. This problem was overcame by adding remapping argument ``<remapping>/tf:=tf</remapping>``  ``<remapping>/tf_static:=tf_static</remapping>`` under ros2 tag in each plugin which publishs transforms in the SDF file. It is essential to differentiate the tf's of the different robot."


#: ../../migration/Galactic.rst:165
msgid "Recovery Behavior Timeout"
msgstr "Recovery Behavior Timeout"


#: ../../migration/Galactic.rst:167
msgid "Recoveries in Nav2, spin and backup, now have ``time_allowance`` ports in their BT nodes and request fields in their actions to specify a timeout. This helps ensure that the robot can exit a backup or spin primitive behavior in case it gets stuck or otherwise is unable to backup the full distance over a reasonable block of time."
msgstr "Recoveries in Nav2, spin and backup, now have ``time_allowance`` ports in their BT nodes and request fields in their actions to specify a timeout. This helps ensure that the robot can exit a backup or spin primitive behavior in case it gets stuck or otherwise is unable to backup the full distance over a reasonable block of time."


#: ../../migration/Galactic.rst:170
msgid "New parameter ``use_final_approach_orientation`` for the 3 2D planners"
msgstr "New parameter ``use_final_approach_orientation`` for the 3 2D planners"


#: ../../migration/Galactic.rst:172
msgid "`Pull request 2488 <https://github.com/ros-planning/navigation2/pull/2488>`_ adds a new parameter ``use_final_approach_orientation`` to the 3 2D planners (Theta*, SmacPlanner2D and NavFn), ``false`` by default. If ``true``, the last pose of the path generated by the planner will have its orientation set to the approach orientation, i.e. the orientation of the vector connecting the last two points of the path. It allows sending the robot to a position (x,y) instead of a pose (x,y,theta) by effectively ignoring the goal orientation. For example, below, for the same goal with an orientaton pointed left of the screen, ``use_final_approach_orientation=false`` (left) and ``use_final_approach_orientation=true`` (right)"
msgstr "`Pull request 2488 <https://github.com/ros-planning/navigation2/pull/2488>`_ adds a new parameter ``use_final_approach_orientation`` to the 3 2D planners (Theta*, SmacPlanner2D and NavFn), ``false`` by default. If ``true``, the last pose of the path generated by the planner will have its orientation set to the approach orientation, i.e. the orientation of the vector connecting the last two points of the path. It allows sending the robot to a position (x,y) instead of a pose (x,y,theta) by effectively ignoring the goal orientation. For example, below, for the same goal with an orientaton pointed left of the screen, ``use_final_approach_orientation=false`` (left) and ``use_final_approach_orientation=true`` (right)"


#: ../../migration/Galactic.rst:182
msgid "SmacPlanner2D and Theta*: fix goal orientation being ignored"
msgstr "SmacPlanner2D and Theta*: fix goal orientation being ignored"


#: ../../migration/Galactic.rst:184
msgid "`This pull request 2488 <https://github.com/ros-planning/navigation2/pull/2488>`_ fixes `the  issue <https://github.com/ros-planning/navigation2/issues/2482>`_ of the goal pose orientation being ignored (the end path pose orientation was always set to 0)."
msgstr "`This pull request 2488 <https://github.com/ros-planning/navigation2/pull/2488>`_ fixes `the  issue <https://github.com/ros-planning/navigation2/issues/2482>`_ of the goal pose orientation being ignored (the end path pose orientation was always set to 0)."


#: ../../migration/Galactic.rst:187
msgid "SmacPlanner2D, NavFn and Theta*: fix small path corner cases"
msgstr "SmacPlanner2D, NavFn and Theta*: fix small path corner cases"


#: ../../migration/Galactic.rst:189
msgid "`This PR 2488 <https://github.com/ros-planning/navigation2/pull/2488>`_ ensures the planners are not failing when the distance between the start and the goal is small (i.e. when they are on the same costmap cell), and in that case the output path is constructed with a single pose."
msgstr "`This PR 2488 <https://github.com/ros-planning/navigation2/pull/2488>`_ ensures the planners are not failing when the distance between the start and the goal is small (i.e. when they are on the same costmap cell), and in that case the output path is constructed with a single pose."


#: ../../migration/Galactic.rst:192
msgid "Change and fix behavior of dynamic parameter change detection"
msgstr "Change and fix behavior of dynamic parameter change detection"


#: ../../migration/Galactic.rst:194
msgid "`This <https://github.com/ros-planning/navigation2/pull/2576>`_ and `this PR <https://github.com/ros-planning/navigation2/pull/2585>`_ modify the method used to catch the changes of dynamic parameters. The motivation was to fix the issue that ``void on_parameter_event_callback(const rcl_interfaces::msg::ParameterEvent::SharedPtr event)`` was called for every parameter change of every node leading to unwanted parameter changes if 2 different nodes had the same parameter name."
msgstr "`This <https://github.com/ros-planning/navigation2/pull/2576>`_ and `this PR <https://github.com/ros-planning/navigation2/pull/2585>`_ modify the method used to catch the changes of dynamic parameters. The motivation was to fix the issue that ``void on_parameter_event_callback(const rcl_interfaces::msg::ParameterEvent::SharedPtr event)`` was called for every parameter change of every node leading to unwanted parameter changes if 2 different nodes had the same parameter name."


#: ../../migration/Galactic.rst:197
msgid "Dynamic Parameters"
msgstr "Dynamic Parameters"


#: ../../migration/Galactic.rst:199
msgid "Newly added dynamic parameters to:"
msgstr "Newly added dynamic parameters to:"


#: ../../migration/Galactic.rst:201
msgid "`This PR 2592 <https://github.com/ros-planning/navigation2/pull/2592>`_ makes most of the Costmap2DROS parameters dynamic"
msgstr "`This PR 2592 <https://github.com/ros-planning/navigation2/pull/2592>`_ makes most of the Costmap2DROS parameters dynamic"


#: ../../migration/Galactic.rst:202
msgid "`This PR 2607 <https://github.com/ros-planning/navigation2/pull/2607>`_ makes most of the Regulated Pure Pursuit parameters dynamic"
msgstr "`This PR 2607 <https://github.com/ros-planning/navigation2/pull/2607>`_ makes most of the Regulated Pure Pursuit parameters dynamic"


#: ../../migration/Galactic.rst:203
msgid "`This PR 2665 <https://github.com/ros-planning/navigation2/pull/2665>`_ makes most of the Theta * Planner parameters dynamic"
msgstr "`This PR 2665 <https://github.com/ros-planning/navigation2/pull/2665>`_ makes most of the Theta * Planner parameters dynamic"


#: ../../migration/Galactic.rst:204
msgid "`This PR 2704 <https://github.com/ros-planning/navigation2/pull/2704>`_ makes Waypoint Follower, Planner Server, and Controller Server's params reconfigurable"
msgstr "`This PR 2704 <https://github.com/ros-planning/navigation2/pull/2704>`_ makes Waypoint Follower, Planner Server, and Controller Server's params reconfigurable"


#: ../../migration/Galactic.rst:208
msgid "BT Action Nodes Exception Changes"
msgstr "BT Action Nodes Exception Changes"


#: ../../migration/Galactic.rst:210
msgid "When BT action nodes throw exceptions due to networking or action server failures, they now return a status code of ``FAILURE`` to fail that particular action in the behavior tree to react to. This is in contrast to prior where the exceptions thrown from networking were sent to the root tree which would count as a task-level failure that the tree could not react to."
msgstr "When BT action nodes throw exceptions due to networking or action server failures, they now return a status code of ``FAILURE`` to fail that particular action in the behavior tree to react to. This is in contrast to prior where the exceptions thrown from networking were sent to the root tree which would count as a task-level failure that the tree could not react to."


#: ../../migration/Galactic.rst:213
msgid "BT Navigator Groot Multiple Navigators"
msgstr "BT Navigator Groot Multiple Navigators"


#: ../../migration/Galactic.rst:215
msgid "`This PR 2627 <https://github.com/ros-planning/navigation2/pull/2627>`_ creates separate parameters for groot monitoring for the NavToPose and NavThroughPoses navigator types so you can individually track the state of each behavior tree through the ZMQ publisher. This resolves a long-standing problem after we added multiple navigator types to BT Navigator that you could only view the nav to poses BT execution live. BT.CPP and Groot only support one static ZMQ stream at a time, so there is a bit of a quirk where you must locally reset Groot after switching trees in order to view the live stream of the Nav Through Poses BT, if in use. This is a state of the BT.CPP and Groot libraries and not something we can resolve withing Nav2."
msgstr "`This PR 2627 <https://github.com/ros-planning/navigation2/pull/2627>`_ creates separate parameters for groot monitoring for the NavToPose and NavThroughPoses navigator types so you can individually track the state of each behavior tree through the ZMQ publisher. This resolves a long-standing problem after we added multiple navigator types to BT Navigator that you could only view the nav to poses BT execution live. BT.CPP and Groot only support one static ZMQ stream at a time, so there is a bit of a quirk where you must locally reset Groot after switching trees in order to view the live stream of the Nav Through Poses BT, if in use. This is a state of the BT.CPP and Groot libraries and not something we can resolve withing Nav2."


#: ../../migration/Galactic.rst:217
msgid "There is some thought into the future regarding complete deprecation of live BT monitoring using Groot due to this quirk and the almost-certain infux of tickets on the topic. Groot will however always be supported for visualizing behavior tree XML files and modifications, simply not visualizing the BT execution live during robot navigation."
msgstr "There is some thought into the future regarding complete deprecation of live BT monitoring using Groot due to this quirk and the almost-certain infux of tickets on the topic. Groot will however always be supported for visualizing behavior tree XML files and modifications, simply not visualizing the BT execution live during robot navigation."


#: ../../migration/Galactic.rst:220
msgid "Removed Kinematic Limiting in RPP"
msgstr "Removed Kinematic Limiting in RPP"


#: ../../migration/Galactic.rst:222
msgid "The parameters ``max_linear_accel`` and ``max_linear_decel`` were removed along with the kinematic limiting in the controller causing instabilities. Instead, use a velocity smoother available in the ROS ecosystem if you would like similar behavior."
msgstr "The parameters ``max_linear_accel`` and ``max_linear_decel`` were removed along with the kinematic limiting in the controller causing instabilities. Instead, use a velocity smoother available in the ROS ecosystem if you would like similar behavior."


#: ../../migration/Galactic.rst:225
msgid "Added Smoother Task Server"
msgstr "Added Smoother Task Server"


#: ../../migration/Galactic.rst:227
msgid "A new task server was added which loads smoother plugins and executes them to improve quality of an existing planned path. Smoothing action can be called from a behavior tree using SmoothPath action node. `PR 2569 <https://github.com/ros-planning/navigation2/pull/2569>`_ implements and `PR 2875 <https://github.com/ros-planning/navigation2/pull/2875>`_ adds in the first of the plugins using it with a simple smoother. Other smoothers are in development and will be added in the future."
msgstr "A new task server was added which loads smoother plugins and executes them to improve quality of an existing planned path. Smoothing action can be called from a behavior tree using SmoothPath action node. `PR 2569 <https://github.com/ros-planning/navigation2/pull/2569>`_ implements and `PR 2875 <https://github.com/ros-planning/navigation2/pull/2875>`_ adds in the first of the plugins using it with a simple smoother. Other smoothers are in development and will be added in the future."


#: ../../migration/Galactic.rst:231
msgid "Removed Use Approach Velocity Scaling Param in RPP"
msgstr "Removed Use Approach Velocity Scaling Param in RPP"


#: ../../migration/Galactic.rst:233
msgid "The parameter ``use_approach_linear_velocity_scaling`` is removed in favor of always on to help in smooth transitions to the goal. `This PR 2701 <https://github.com/ros-planning/navigation2/pull/2701>`_ implements."
msgstr "The parameter ``use_approach_linear_velocity_scaling`` is removed in favor of always on to help in smooth transitions to the goal. `This PR 2701 <https://github.com/ros-planning/navigation2/pull/2701>`_ implements."


#: ../../migration/Galactic.rst:236
msgid "Refactored AMCL motion models as plugins"
msgstr "Refactored AMCL motion models as plugins"


#: ../../migration/Galactic.rst:238
msgid "`This PR 2642 <https://github.com/ros-planning/navigation2/pull/2642>`_ creates plugins for the different motion models currently used in AMCL. This functionality enables users to use any custom motion model by creating it as a plugin and changing the robot_model_type parameter to the name of the plugin in nav2_params.yaml file. This helps to use custom motion models without the need to modify the AMCL source code."
msgstr "`This PR 2642 <https://github.com/ros-planning/navigation2/pull/2642>`_ creates plugins for the different motion models currently used in AMCL. This functionality enables users to use any custom motion model by creating it as a plugin and changing the robot_model_type parameter to the name of the plugin in nav2_params.yaml file. This helps to use custom motion models without the need to modify the AMCL source code."


#: ../../migration/Galactic.rst:241
msgid "Dropping Support for Live Groot Monitoring of Nav2"
msgstr "Dropping Support for Live Groot Monitoring of Nav2"


#: ../../migration/Galactic.rst:243
msgid "https://github.com/ros-planning/navigation2/pull/2642"
msgstr "https://github.com/ros-planning/navigation2/pull/2642"


#: ../../migration/Galactic.rst:245
msgid "It was a great feature idea but never quite panned out, especially after we introduced multiple navigator types in the BT Navigator server. The issue we run into primarily is that Zero-MQ prevents users from producing multiple logger types in the same process. Since BT nav has multiple servers, the swapping between them for viewing has never had a clean hand off causing folks to file tickets or have nasty logs appear or ZMQ crashes in the background. The BT.CPP client for this doesn't allow us to have a clean shutdown process so we're left with hoping that ZMQ properly handles the situation, which it rarely does. Further, Groot only supports visualizing one type of tree at a time so for applications often switching between navigator types, its not possible to use a single groot client, causing great frustration."
msgstr "It was a great feature idea but never quite panned out, especially after we introduced multiple navigator types in the BT Navigator server. The issue we run into primarily is that Zero-MQ prevents users from producing multiple logger types in the same process. Since BT nav has multiple servers, the swapping between them for viewing has never had a clean hand off causing folks to file tickets or have nasty logs appear or ZMQ crashes in the background. The BT.CPP client for this doesn't allow us to have a clean shutdown process so we're left with hoping that ZMQ properly handles the situation, which it rarely does. Further, Groot only supports visualizing one type of tree at a time so for applications often switching between navigator types, its not possible to use a single groot client, causing great frustration."


#: ../../migration/Galactic.rst:247
msgid "So, what I propose here is to remove live monitoring of the BT from Nav2. **We can still use Groot to modify, visualize, and generally work with behavior trees**, the only thing being removed is to live view the executing behavior tree as Nav2 is currently executing it (it used to light up the boxes of the current nodes). This was of dubious value anyhow, since the tree ticks so fast its difficult to visualize and get meaningful insights into things as the system is moving so quickly."
msgstr "So, what I propose here is to remove live monitoring of the BT from Nav2. **We can still use Groot to modify, visualize, and generally work with behavior trees**, the only thing being removed is to live view the executing behavior tree as Nav2 is currently executing it (it used to light up the boxes of the current nodes). This was of dubious value anyhow, since the tree ticks so fast its difficult to visualize and get meaningful insights into things as the system is moving so quickly."


#: ../../migration/Galactic.rst:250
msgid "Replanning Only if Path is Invalid"
msgstr "Replanning Only if Path is Invalid"


#: ../../migration/Galactic.rst:252
msgid "`This PR 2591 <https://github.com/ros-planning/navigation2/pull/2591>`_ creates two new condition BT node to facilitate replanning only if path becomes invalid rather than constantly replanning. These new nodes were integrated into the default BT."
msgstr "`This PR 2591 <https://github.com/ros-planning/navigation2/pull/2591>`_ creates two new condition BT node to facilitate replanning only if path becomes invalid rather than constantly replanning. These new nodes were integrated into the default BT."


#: ../../migration/Galactic.rst:255
msgid "Fix CostmapLayer clearArea invert param logic"
msgstr "Fix CostmapLayer clearArea invert param logic"


#: ../../migration/Galactic.rst:256
msgid "`This PR 2772 <https://github.com/ros-planning/navigation2/pull/2772>`_ fixes the invert paramlogic of the CostmapLayer clearArea fonction. Hence correcting the behavior of the clearAroundRobot and clearExceptRegion services and their corresponding BT actions."
msgstr "`This PR 2772 <https://github.com/ros-planning/navigation2/pull/2772>`_ fixes the invert paramlogic of the CostmapLayer clearArea fonction. Hence correcting the behavior of the clearAroundRobot and clearExceptRegion services and their corresponding BT actions."


#: ../../migration/Galactic.rst:259
msgid "Dynamic Composition"
msgstr "Dynamic Composition"


#: ../../migration/Galactic.rst:261
msgid "`This PR 2750 <https://github.com/ros-planning/navigation2/pull/2750>`_ provides a optional bringup based on ROS2 dynamic composition for users. It can be used to compose all Nav2 nodes in a single process instead of launching these nodes separately, which is useful for embedded systems users that need to make optimizations due to harsh resource constraints. it's used by default, but can be disabled by using the launch argument ``use_composition:=False``."
msgstr "`This PR 2750 <https://github.com/ros-planning/navigation2/pull/2750>`_ provides a optional bringup based on ROS2 dynamic composition for users. It can be used to compose all Nav2 nodes in a single process instead of launching these nodes separately, which is useful for embedded systems users that need to make optimizations due to harsh resource constraints. it's used by default, but can be disabled by using the launch argument ``use_composition:=False``."


#: ../../migration/Galactic.rst:263
msgid "Some experiments to show performance improvement of dynamic composition, and the cpu and memory are captured by ``psutil`` :"
msgstr "Some experiments to show performance improvement of dynamic composition, and the cpu and memory are captured by ``psutil`` :"


#: ../../migration/Galactic.rst:266
msgid "CPU: Intel(R) i7-8700 (6Cores 12Threads), Memory: 32GB"
msgstr "CPU: Intel(R) i7-8700 (6Cores 12Threads), Memory: 32GB"


#: ../../migration/Galactic.rst:266
msgid "cpu(%)"
msgstr "cpu(%)"


#: ../../migration/Galactic.rst:266
msgid "memory(%)"
msgstr "memory(%)"


#: ../../migration/Galactic.rst:268
msgid "normal multiple processes"
msgstr "normal multiple processes"


#: ../../migration/Galactic.rst:268
msgid "44"
msgstr "44"


#: ../../migration/Galactic.rst:268
msgid "0.76"
msgstr "0.76"


#: ../../migration/Galactic.rst:269
msgid "dynamic composition (use ``component_container_isolated``)"
msgstr "dynamic composition (use ``component_container_isolated``)"


#: ../../migration/Galactic.rst:269
msgid "38"
msgstr "38"


#: ../../migration/Galactic.rst:269
msgid "0.23"
msgstr "0.23"


#: ../../migration/Galactic.rst:272
msgid "The way of dynamic composition consumes lower memory(saves ~70%),  and lower cpu (saves ~13%) than normal multiple processes."
msgstr "The way of dynamic composition consumes lower memory(saves ~70%),  and lower cpu (saves ~13%) than normal multiple processes."


#: ../../migration/Galactic.rst:275
msgid "BT Cancel Node"
msgstr "BT Cancel Node"


#: ../../migration/Galactic.rst:276
msgid "`This PR 2787 <https://github.com/ros-planning/navigation2/pull/2787>`_ caters the users with an abstract node to develop cancel behaviors for different servers present in the Nav2 stack such as the controller_server, recovery_server and so on. As a start, this PR also provides the ``CancelControl`` behavior to cancel the goal given to the controller_server. As an addition to the ``CancelControl`` `This PR 2856 <https://github.com/ros-planning/navigation2/pull/2856>`_ provides the users with the option to cancel the recoveries such as the ``backup``, ``spin`` and ``wait``."
msgstr "`This PR 2787 <https://github.com/ros-planning/navigation2/pull/2787>`_ caters the users with an abstract node to develop cancel behaviors for different servers present in the Nav2 stack such as the controller_server, recovery_server and so on. As a start, this PR also provides the ``CancelControl`` behavior to cancel the goal given to the controller_server. As an addition to the ``CancelControl`` `This PR 2856 <https://github.com/ros-planning/navigation2/pull/2856>`_ provides the users with the option to cancel the recoveries such as the ``backup``, ``spin`` and ``wait``."


#: ../../migration/Galactic.rst:279
msgid "BT PathLongerOnApproach Node"
msgstr "BT PathLongerOnApproach Node"


#: ../../migration/Galactic.rst:281
msgid "In the `PR <https://github.com/ros-planning/navigation2/pull/2802>`_, a new Decorator BT node known as ``PathLongerOnApproach`` has been added to provide with the functionality to check and potentially handle longer path generated due to an obstacle in the given goal proximity. To demonstrate this functionality, a new BT ``navigate_to_pose_w_replanning_goal_patience_and_recovery.xml`` would serve both as an example and ready-to-use BT for a specific application that wishes to optimize their process cycle time. Demo of the developed BT can be seen below, where the robot pauses when close to a goal to see if the dynamic obstacle moves out of the way. Else, it executes the replan:"
msgstr "In the `PR <https://github.com/ros-planning/navigation2/pull/2802>`_, a new Decorator BT node known as ``PathLongerOnApproach`` has been added to provide with the functionality to check and potentially handle longer path generated due to an obstacle in the given goal proximity. To demonstrate this functionality, a new BT ``navigate_to_pose_w_replanning_goal_patience_and_recovery.xml`` would serve both as an example and ready-to-use BT for a specific application that wishes to optimize their process cycle time. Demo of the developed BT can be seen below, where the robot pauses when close to a goal to see if the dynamic obstacle moves out of the way. Else, it executes the replan:"


#: ../../migration/Galactic.rst:283
msgid "Obstacle does not clear at all, with `obstacle_clearance_time` to be 3 seconds:"
msgstr "Obstacle does not clear at all, with `obstacle_clearance_time` to be 3 seconds:"


#: ../../migration/Galactic.rst:287
msgid "Obstacle clears and you can see the robot pass through the (could have been ideally the) same path:"
msgstr "Obstacle clears and you can see the robot pass through the (could have been ideally the) same path:"


#: ../../migration/Galactic.rst:292
msgid "BT TruncatePathLocal Node"
msgstr "BT TruncatePathLocal Node"


#: ../../migration/Galactic.rst:294
msgid "In the `PR 2753 <https://github.com/ros-planning/navigation2/pull/2753>`_, a new Action BT node named ``TruncatePathLocal`` has been added to extract a bounded-length path section near robot to be used e.g. for collision checking or computationally expensive smoothers"
msgstr "In the `PR 2753 <https://github.com/ros-planning/navigation2/pull/2753>`_, a new Action BT node named ``TruncatePathLocal`` has been added to extract a bounded-length path section near robot to be used e.g. for collision checking or computationally expensive smoothers"


#: ../../migration/Galactic.rst:297
msgid "Constrained Smoother"
msgstr "Constrained Smoother"


#: ../../migration/Galactic.rst:299
msgid "In `the PR 2753 <https://github.com/ros-planning/navigation2/pull/2753>`_, a new Smoother named ``nav2_constrained_smoother::ConstrainedSmoother`` has been added to optimize various path criteria such as smoothness or distance from obstacles, maintaining minimum turning radius"
msgstr "In `the PR 2753 <https://github.com/ros-planning/navigation2/pull/2753>`_, a new Smoother named ``nav2_constrained_smoother::ConstrainedSmoother`` has been added to optimize various path criteria such as smoothness or distance from obstacles, maintaining minimum turning radius"


#: ../../migration/Galactic.rst:302
msgid "Replanning at a Constant Rate and if the Path is Invalid"
msgstr "Replanning at a Constant Rate and if the Path is Invalid"


#: ../../migration/Galactic.rst:303
msgid "`This PR 2804 <https://github.com/ros-planning/navigation2/pull/2841>`_ introduces a new behavior tree that navigates to pose with consistent replanning and if the path becomes invalid. To facilitate the new behavior tree a new condition node PathExpiringTimer was introduced to trigger replanning at a consistent rate."
msgstr "`This PR 2804 <https://github.com/ros-planning/navigation2/pull/2841>`_ introduces a new behavior tree that navigates to pose with consistent replanning and if the path becomes invalid. To facilitate the new behavior tree a new condition node PathExpiringTimer was introduced to trigger replanning at a consistent rate."


#: ../../migration/Galactic.rst:307
msgid "Euclidean Distance 2D"
msgstr "Euclidean Distance 2D"


#: ../../migration/Galactic.rst:309
msgid "`This PR 2865 <https://github.com/ros-planning/navigation2/pull/2865>`_ changes Euclidean distance calculation throughout nav2 to project on to the XY plane (i.e. discard any information related to components in Z). This may potentially subtly change the way certain BT nodes, BT Navigators, controller servers, planner servers, and RPP behave if using custom plugins outside the Nav2 ecosystem."
msgstr "`This PR 2865 <https://github.com/ros-planning/navigation2/pull/2865>`_ changes Euclidean distance calculation throughout nav2 to project on to the XY plane (i.e. discard any information related to components in Z). This may potentially subtly change the way certain BT nodes, BT Navigators, controller servers, planner servers, and RPP behave if using custom plugins outside the Nav2 ecosystem."


#: ../../migration/Galactic.rst:314
msgid "Recovery To Behavior"
msgstr "Recovery To Behavior"


#: ../../migration/Galactic.rst:315
msgid "`This PR 2867 <https://github.com/ros-planning/navigation.ros.org/pull/298>`_ renames the nav2_recoveries to nav2_behaviors."
msgstr "`This PR 2867 <https://github.com/ros-planning/navigation.ros.org/pull/298>`_ renames the nav2_recoveries to nav2_behaviors."


#: ../../migration/Galactic.rst:317
msgid "In navigation_launch.py recoveries_server -> behavior_server and nav2_recoveries -> nav2_behaviors. In nav2_params.yaml recovery_plugins -> behavior_plugins and nav2_recoveries -> nav2_behaviors."
msgstr "In navigation_launch.py recoveries_server -> behavior_server and nav2_recoveries -> nav2_behaviors. In nav2_params.yaml recovery_plugins -> behavior_plugins and nav2_recoveries -> nav2_behaviors."


#: ../../migration/Galactic.rst:321
msgid "Respawn Support in Launch and Lifecycle Manager"
msgstr "Respawn Support in Launch and Lifecycle Manager"


#: ../../migration/Galactic.rst:323
msgid "`PR 2752 <https://github.com/ros-planning/navigation2/pull/2910>`_ enables respawn support in Nav2. In the launch files, you may set ``use_respawn`` to ``true`` to enable respawning of servers that crash. This is only available in non-composed systems, since in composed systems, all of the nodes are under a single process and a crash anywhere will bring everything down (including the lifecycle manager itself). Even if the container was set to respawn, it would only respawn the empty container, not with all of the components loaded into it."
msgstr "`PR 2752 <https://github.com/ros-planning/navigation2/pull/2910>`_ enables respawn support in Nav2. In the launch files, you may set ``use_respawn`` to ``true`` to enable respawning of servers that crash. This is only available in non-composed systems, since in composed systems, all of the nodes are under a single process and a crash anywhere will bring everything down (including the lifecycle manager itself). Even if the container was set to respawn, it would only respawn the empty container, not with all of the components loaded into it."


#: ../../migration/Galactic.rst:325
msgid "That PR also enables the lifecycle manager to check if a system goes down due to a crash. If so, it allows the manager to check if the server comes back online within a given timeout period. If it does, it will automatically retransition the system back up to active to continue on its task automatically."
msgstr "That PR also enables the lifecycle manager to check if a system goes down due to a crash. If so, it allows the manager to check if the server comes back online within a given timeout period. If it does, it will automatically retransition the system back up to active to continue on its task automatically."


#: ../../migration/Galactic.rst:328
msgid "New Nav2 Velocity Smoother"
msgstr "New Nav2 Velocity Smoother"


#: ../../migration/Galactic.rst:330
msgid "`PR 2964 <https://github.com/ros-planning/navigation2/pull/2964>`_ introduces the ``nav2_velocity_smoother`` for smoothing velocity commands from Nav2 to a robot controller by velocity, acceleration, and deadband constraints. See :ref:`configuring_velocity_smoother` for more details. It is not included in the default bringup batteries included from ``nav2_bringup``."
msgstr "`PR 2964 <https://github.com/ros-planning/navigation2/pull/2964>`_ introduces the ``nav2_velocity_smoother`` for smoothing velocity commands from Nav2 to a robot controller by velocity, acceleration, and deadband constraints. See :ref:`configuring_velocity_smoother` for more details. It is not included in the default bringup batteries included from ``nav2_bringup``."


#: ../../migration/Galactic.rst:333
msgid "Goal Checker API Changed"
msgstr "Goal Checker API Changed"


#: ../../migration/Galactic.rst:334
msgid "`PR 2965 <https://github.com/ros-planning/navigation2/pull/2965>`_ adds an extra argument in the initialize function of the `nav2_core::GoalChecker` class. The extra argument is a costmap_ros pointer. This is used to check if the goal is in collision, so that we can avoid moving towards the goal and replanning can be initiates using some BT plugin."
msgstr "`PR 2965 <https://github.com/ros-planning/navigation2/pull/2965>`_ adds an extra argument in the initialize function of the `nav2_core::GoalChecker` class. The extra argument is a costmap_ros pointer. This is used to check if the goal is in collision, so that we can avoid moving towards the goal and replanning can be initiates using some BT plugin."


#: ../../migration/Galactic.rst:338
msgid "Added Assisted Teleop"
msgstr "Added Assisted Teleop"


#: ../../migration/Galactic.rst:339
msgid "`PR 2904 <https://github.com/ros-planning/navigation2/pull/2904>`_ adds a new behavior for assisted teleop along with two new BT nodes AssistedTeleop and CancelAssistedTeleop."
msgstr "`PR 2904 <https://github.com/ros-planning/navigation2/pull/2904>`_ adds a new behavior for assisted teleop along with two new BT nodes AssistedTeleop and CancelAssistedTeleop."


#: ../../migration/Humble.rst:4
msgid "Humble to Iron"
msgstr "Humble to Iron"


#: ../../migration/Humble.rst:6
msgid "Moving from ROS 2 Humble to Iron, a number of stability improvements were added that we will not specifically address here."
msgstr "Moving from ROS 2 Humble to Iron, a number of stability improvements were added that we will not specifically address here."


#: ../../migration/Humble.rst:9
msgid "New Behavior-Tree Navigator Plugins"
msgstr "New Behavior-Tree Navigator Plugins"


#: ../../migration/Humble.rst:11
msgid "New in `PR 3345 <https://github.com/ros-planning/navigation2/pull/3345>`_, the navigator types are exposed to users as plugins that can be replaced or new navigator types added. The default behaviors of navigate to pose and navigate through poses continue to be default behavior but are now customizable with new action interface definitions. These plugins implement the ``nav2_core::BehaviorTreeNavigator`` base class, which must process the action request, feedback, and completion messages. The behavior tree is handled by this base class with as much general logic as possible abstracted away from users to minimize repetition."
msgstr "New in `PR 3345 <https://github.com/ros-planning/navigation2/pull/3345>`_, the navigator types are exposed to users as plugins that can be replaced or new navigator types added. The default behaviors of navigate to pose and navigate through poses continue to be default behavior but are now customizable with new action interface definitions. These plugins implement the ``nav2_core::BehaviorTreeNavigator`` base class, which must process the action request, feedback, and completion messages. The behavior tree is handled by this base class with as much general logic as possible abstracted away from users to minimize repetition."


#: ../../migration/Humble.rst:13
msgid "See :ref:`writing_new_nav2navigator_plugin` for a tutorial about writing new navigator plugins."
msgstr "See :ref:`writing_new_nav2navigator_plugin` for a tutorial about writing new navigator plugins."


#: ../../migration/Humble.rst:16
msgid "Added Collision Monitor"
msgstr "Added Collision Monitor"


#: ../../migration/Humble.rst:17
msgid "`PR 2982 <https://github.com/ros-planning/navigation2/pull/2982>`_ adds new safety layer operating independently of Nav2 stack which ensures the robot to control the collisions with near obstacles, obtained from different sensors (LaserScan, PointCloud, IR, Sonars, etc...). See :ref:`configuring_collision_monitor` for more details. It is not included in the default bringup batteries included from ``nav2_bringup``."
msgstr "`PR 2982 <https://github.com/ros-planning/navigation2/pull/2982>`_ adds new safety layer operating independently of Nav2 stack which ensures the robot to control the collisions with near obstacles, obtained from different sensors (LaserScan, PointCloud, IR, Sonars, etc...). See :ref:`configuring_collision_monitor` for more details. It is not included in the default bringup batteries included from ``nav2_bringup``."


#: ../../migration/Humble.rst:20
msgid "Removed use_sim_time from yaml"
msgstr "Removed use_sim_time from yaml"


#: ../../migration/Humble.rst:21
msgid "`PR #3131 <https://github.com/ros-planning/navigation2/pull/3131>`_ makes it possible to set the use_sim_time parameter from the launch file for multiple nodes instead of individually via the yaml files. If using the Nav2 launch files, you can optionally remove the use_sim_time parameter from your yaml files and set it via a launch argument."
msgstr "`PR #3131 <https://github.com/ros-planning/navigation2/pull/3131>`_ makes it possible to set the use_sim_time parameter from the launch file for multiple nodes instead of individually via the yaml files. If using the Nav2 launch files, you can optionally remove the use_sim_time parameter from your yaml files and set it via a launch argument."


#: ../../migration/Humble.rst:24
msgid "Run-time Speed up of Smac Planner"
msgstr "Run-time Speed up of Smac Planner"


#, python-format
msgid "The core data structure of the graph implementation in the Smac Planner framework was swapped out in `PR 3201 <https://github.com/ros-planning/navigation2/pull/3201>`_ to using a specialized unordered map implementation. This speeds up the planner by 10% on trivial requests and reports up to 30% on complex plans that involve numerous rehashings."
msgstr "The core data structure of the graph implementation in the Smac Planner framework was swapped out in `PR 3201 <https://github.com/ros-planning/navigation2/pull/3201>`_ to using a specialized unordered map implementation. This speeds up the planner by 10% on trivial requests and reports up to 30% on complex plans that involve numerous rehashings."


#: ../../migration/Humble.rst:28
msgid "Recursive Refinement of Smac and Simple Smoothers"
msgstr "Recursive Refinement of Smac and Simple Smoothers"


#: ../../migration/Humble.rst:30
msgid "The number of recursive refinements for the Simple and Smac Planner Smoothers have been exposed under the ``refinement_num`` parameter. Previous behavior had this hardcoded if ``do_refinement = True`` to ``4``. Now, default is ``2`` to help decrease out-of-the-box over smoothing reducing in paths closer to collision than probably ideal, but old behavior can be achieved by changing this to ``4``."
msgstr "The number of recursive refinements for the Simple and Smac Planner Smoothers have been exposed under the ``refinement_num`` parameter. Previous behavior had this hardcoded if ``do_refinement = True`` to ``4``. Now, default is ``2`` to help decrease out-of-the-box over smoothing reducing in paths closer to collision than probably ideal, but old behavior can be achieved by changing this to ``4``."


#: ../../migration/Humble.rst:33
msgid "Simple Commander Python API"
msgstr "Simple Commander Python API"


#: ../../migration/Humble.rst:34
msgid "`PR 3159 <https://github.com/ros-planning/navigation2/pull/3159>`_ and follow-up PRs add in Costmap API in Python3 simple commander to receive ``OccupancyGrid`` messages from Nav2 and be able to work with them natively in Python3, analog to the C++ Costmap API. It also includes a line iterator and collision checking object to perform footprint or other collision checking in Python3. See the Simple Commander API for more details."
msgstr "`PR 3159 <https://github.com/ros-planning/navigation2/pull/3159>`_ and follow-up PRs add in Costmap API in Python3 simple commander to receive ``OccupancyGrid`` messages from Nav2 and be able to work with them natively in Python3, analog to the C++ Costmap API. It also includes a line iterator and collision checking object to perform footprint or other collision checking in Python3. See the Simple Commander API for more details."


#: ../../migration/Humble.rst:37
msgid "Smac Planner Start Pose Included in Path"
msgstr "Smac Planner Start Pose Included in Path"


#: ../../migration/Humble.rst:39
msgid "`PR 3168 <https://github.com/ros-planning/navigation2/pull/3168>`_ adds the starting pose to the Smac Planners that was previously excluded during backtracing."
msgstr "`PR 3168 <https://github.com/ros-planning/navigation2/pull/3168>`_ adds the starting pose to the Smac Planners that was previously excluded during backtracing."


#: ../../migration/Humble.rst:42
msgid "Parameterizable Collision Checking in RPP"
msgstr "Parameterizable Collision Checking in RPP"


#: ../../migration/Humble.rst:44
msgid "`PR 3204 <https://github.com/ros-planning/navigation2/pull/3204>`_ adds makes collision checking for RPP optional (default on)."
msgstr "`PR 3204 <https://github.com/ros-planning/navigation2/pull/3204>`_ adds makes collision checking for RPP optional (default on)."


#: ../../migration/Humble.rst:47
msgid "Expanded Planner Benchmark Tests"
msgstr "Expanded Planner Benchmark Tests"


#: ../../migration/Humble.rst:49
msgid "`PR 3218 <https://github.com/ros-planning/navigation2/pull/3218>`_ adds launch files and updated scripts for performing objective random planning tests across the planners in Nav2 for benchmarking and metric computation."
msgstr "`PR 3218 <https://github.com/ros-planning/navigation2/pull/3218>`_ adds launch files and updated scripts for performing objective random planning tests across the planners in Nav2 for benchmarking and metric computation."


#: ../../migration/Humble.rst:52
msgid "Smac Planner Path Tolerances"
msgstr "Smac Planner Path Tolerances"


#: ../../migration/Humble.rst:54
msgid "`PR 3219 <https://github.com/ros-planning/navigation2/pull/3219>`_ adds path tolerances to Hybrid-A* and State Lattice planners to return approximate paths if exact paths cannot be found, within a configurable tolerance aroun the goal pose."
msgstr "`PR 3219 <https://github.com/ros-planning/navigation2/pull/3219>`_ adds path tolerances to Hybrid-A* and State Lattice planners to return approximate paths if exact paths cannot be found, within a configurable tolerance aroun the goal pose."


#: ../../migration/Humble.rst:57
msgid "costmap_2d_node default constructor"
msgstr "costmap_2d_node default constructor"


#: ../../migration/Humble.rst:59
msgid "`PR #3222 <https://github.com/ros-planning/navigation2/pull/3222>`_ changes the constructor used by the standalone costmap node. The new constructor does not set a name and namespace internally so it can be set via the launch file."
msgstr "`PR #3222 <https://github.com/ros-planning/navigation2/pull/3222>`_ changes the constructor used by the standalone costmap node. The new constructor does not set a name and namespace internally so it can be set via the launch file."


#: ../../migration/Humble.rst:62
msgid "Feedback for Navigation Failures"
msgstr "Feedback for Navigation Failures"


#: ../../migration/Humble.rst:64
msgid "`PR #3146 <https://github.com/ros-planning/navigation2/pull/3146>`_ updates the global planners to throw exceptions on planning failures. These exceptions get reported back to the planner server which in turn places a error code on the Behavior Tree Navigator's blackboard for use in contextual error handling in the autonomy application."
msgstr "`PR #3146 <https://github.com/ros-planning/navigation2/pull/3146>`_ updates the global planners to throw exceptions on planning failures. These exceptions get reported back to the planner server which in turn places a error code on the Behavior Tree Navigator's blackboard for use in contextual error handling in the autonomy application."


#: ../../migration/Humble.rst:66
msgid "The following errors codes are supported (with more to come as necessary): Unknown, TF Error, Start or Goal Outside of Map, Start or Goal Occupied, Timeout, or No Valid Path Found."
msgstr "The following errors codes are supported (with more to come as necessary): Unknown, TF Error, Start or Goal Outside of Map, Start or Goal Occupied, Timeout, or No Valid Path Found."


#: ../../migration/Humble.rst:68
msgid "`PR #3248 <https://github.com/ros-planning/navigation2/pull/3248>`_ updates the compute path through poses action to report planning failures. These exceptions get reported back to the planner server which in turn places a error code on the Behavior Tree Navigator's blackboard for use in contextual error handling in the autonomy application."
msgstr "`PR #3248 <https://github.com/ros-planning/navigation2/pull/3248>`_ updates the compute path through poses action to report planning failures. These exceptions get reported back to the planner server which in turn places a error code on the Behavior Tree Navigator's blackboard for use in contextual error handling in the autonomy application."


#: ../../migration/Humble.rst:70
msgid "The following errors codes are supported (with more to come as necessary): Unknown, TF Error, Start or Goal Outside of Map, Start or Goal Occupied, Timeout, No Valid Path Found and No Waypoints given."
msgstr "The following errors codes are supported (with more to come as necessary): Unknown, TF Error, Start or Goal Outside of Map, Start or Goal Occupied, Timeout, No Valid Path Found and No Waypoints given."


#: ../../migration/Humble.rst:72
msgid "`PR #3227 <https://github.com/ros-planning/navigation2/pull/3227>`_ updates the controllers to throw exceptions on failures. These exceptions get reported back to the controller server which in turn places a error code on the Behavior Tree Navigatior's blackboard for use in contextual error handling in the autonomy application."
msgstr "`PR #3227 <https://github.com/ros-planning/navigation2/pull/3227>`_ updates the controllers to throw exceptions on failures. These exceptions get reported back to the controller server which in turn places a error code on the Behavior Tree Navigatior's blackboard for use in contextual error handling in the autonomy application."


#: ../../migration/Humble.rst:74
msgid "The following error codes are supported (with more to come as necessary): Unknown, TF Error, Invalid Path, Patience Exceeded, Failed To Make Progress, or No Valid Control."
msgstr "The following error codes are supported (with more to come as necessary): Unknown, TF Error, Invalid Path, Patience Exceeded, Failed To Make Progress, or No Valid Control."


#: ../../migration/Humble.rst:76
msgid "`PR #3251 <https://github.com/ros-planning/navigation2/pull/3251>`_ pipes the highest priority error code through the bt_navigator and defines the error code structure."
msgstr "`PR #3251 <https://github.com/ros-planning/navigation2/pull/3251>`_ pipes the highest priority error code through the bt_navigator and defines the error code structure."


#: ../../migration/Humble.rst:78
msgid "A new parameter for the the BT Navigator called \"error_code_id_names\" was added to the nav2_params.yaml to define the error codes to compare. The lowest error in the \"error_code_id_names\" is then returned in the action request (navigate to pose, navigate through poses waypoint follower), whereas the code enums increase the higher up in the software stack - giving higher priority to lower-level failures."
msgstr "A new parameter for the the BT Navigator called \"error_code_id_names\" was added to the nav2_params.yaml to define the error codes to compare. The lowest error in the \"error_code_id_names\" is then returned in the action request (navigate to pose, navigate through poses waypoint follower), whereas the code enums increase the higher up in the software stack - giving higher priority to lower-level failures."


#: ../../migration/Humble.rst:81
msgid "The error codes produced from the servers follow the guidelines stated below. Error codes from 0 to 9999 are reserved for nav2 while error codes from 10000-65535 are reserved for external servers. Each server has two \"reserved\" error codes. 0 is reserved for NONE and the first error code in the sequence is reserved for UNKNOWN."
msgstr "The error codes produced from the servers follow the guidelines stated below. Error codes from 0 to 9999 are reserved for nav2 while error codes from 10000-65535 are reserved for external servers. Each server has two \"reserved\" error codes. 0 is reserved for NONE and the first error code in the sequence is reserved for UNKNOWN."


#: ../../migration/Humble.rst:85
msgid "The current implemented servers with error codes are:"
msgstr "The current implemented servers with error codes are:"


#: ../../migration/Humble.rst:87
msgid "Controller Server: NONE:0, UNKNOWN:100, server error codes: 101-199"
msgstr "Controller Server: NONE:0, UNKNOWN:100, server error codes: 101-199"


#: ../../migration/Humble.rst:88
msgid "Planner Server(compute_path_to_pose): NONE:0, UNKNOWN:201, server error codes: 201-299"
msgstr "Planner Server(compute_path_to_pose): NONE:0, UNKNOWN:201, server error codes: 201-299"


#: ../../migration/Humble.rst:89
msgid "Planner Server(compute_path_through_poses): NONE:0, UNKNOWN:301, server error codes: 301-399"
msgstr "Planner Server(compute_path_through_poses): NONE:0, UNKNOWN:301, server error codes: 301-399"


#: ../../migration/Humble.rst:90
msgid "Smoother Server: NONE: 0, UNKNOWN: 501, server error codes: 501-599"
msgstr "Smoother Server: NONE: 0, UNKNOWN: 501, server error codes: 501-599"


#: ../../migration/Humble.rst:91
msgid "Waypoint Follower Server: NONE: 0, UNKNOWN: 601, server error codes: 601-699"
msgstr "Waypoint Follower Server: NONE: 0, UNKNOWN: 601, server error codes: 601-699"


#: ../../migration/Humble.rst:93
msgid "This pr also updates the waypoint follower server to throw exceptions on failures. These exceptions get reported back to the server which in turn places a error code on the Behavior Tree Navigator's blackboard for use in contextual error handling in the autonomy application. The following errors codes are supported (with more to come as necessary): Unknown and Task Executor Failed. See :ref:`adding_a_nav2_task_server` and the PR for additional information."
msgstr "This pr also updates the waypoint follower server to throw exceptions on failures. These exceptions get reported back to the server which in turn places a error code on the Behavior Tree Navigator's blackboard for use in contextual error handling in the autonomy application. The following errors codes are supported (with more to come as necessary): Unknown and Task Executor Failed. See :ref:`adding_a_nav2_task_server` and the PR for additional information."


#: ../../migration/Humble.rst:100
msgid "Costmap Filters now are have an ability to be enabled/disabled in run-time by calling ``toggle_filter`` service for appropriate filter (`PR #3229 <https://github.com/ros-planning/navigation2/pull/3229>`_)."
msgstr "Costmap Filters now are have an ability to be enabled/disabled in run-time by calling ``toggle_filter`` service for appropriate filter (`PR #3229 <https://github.com/ros-planning/navigation2/pull/3229>`_)."


#: ../../migration/Humble.rst:102
msgid "Added new binary flip filter, allowing e.g. to turn off camera in sensitive areas, turn on headlights/leds/other safety things or switch operating mode when robot is inside marked on mask areas (`PR #3228 <https://github.com/ros-planning/navigation2/pull/3228>`_)."
msgstr "Added new binary flip filter, allowing e.g. to turn off camera in sensitive areas, turn on headlights/leds/other safety things or switch operating mode when robot is inside marked on mask areas (`PR #3228 <https://github.com/ros-planning/navigation2/pull/3228>`_)."


#: ../../migration/Humble.rst:105
msgid "Savitzky-Golay Smoother"
msgstr "Savitzky-Golay平滑器"


#: ../../migration/Humble.rst:107
msgid "Adding a new smoother algorithm, the Savitzky-Golay smoother to the smoother server plugin list. See the configuration guide :ref:`configuring_savitzky_golay_filter_smoother` for more details."
msgstr "Adding a new smoother algorithm, the Savitzky-Golay smoother to the smoother server plugin list. See the configuration guide :ref:`configuring_savitzky_golay_filter_smoother` for more details."


#: ../../migration/Humble.rst:110
msgid "Changes to Map yaml file path for map_server node in Launch"
msgstr "Changes to Map yaml file path for map_server node in Launch"


#: ../../migration/Humble.rst:111
msgid "`PR #3174 <https://github.com/ros-planning/navigation2/pull/3174>`_ adds a way to set the path to map yaml file for the map_server node either from the yaml file or using the launch configuration parameter ``map`` giving priority to the launch configuration parameter. ``yaml_filename`` is no longer strictly required to be present in ``nav2_params.yaml``."
msgstr "`PR #3174 <https://github.com/ros-planning/navigation2/pull/3174>`_ adds a way to set the path to map yaml file for the map_server node either from the yaml file or using the launch configuration parameter ``map`` giving priority to the launch configuration parameter. ``yaml_filename`` is no longer strictly required to be present in ``nav2_params.yaml``."


#: ../../migration/Humble.rst:114
msgid "SmootherSelector BT Node"
msgstr "SmootherSelector BT Node"


#: ../../migration/Humble.rst:115
msgid "`PR #3283 <https://github.com/ros-planning/navigation2/pull/3283>`_ adds a BT node to set the smoother based on a topic or a default. See the configuration guide :ref:`configuring_simple_smoother` for more details."
msgstr "`PR #3283 <https://github.com/ros-planning/navigation2/pull/3283>`_ adds a BT node to set the smoother based on a topic or a default. See the configuration guide :ref:`configuring_simple_smoother` for more details."


#: ../../migration/Humble.rst:119
msgid "Publish Costmap Layers"
msgstr "Publish Costmap Layers"


#: ../../migration/Humble.rst:120
msgid "`PR #3320 <https://github.com/ros-planning/navigation2/pull/3320>`_ adds the ability for the nav2_costmap_2d package to publish out costmap data associated with each layer."
msgstr "`PR #3320 <https://github.com/ros-planning/navigation2/pull/3320>`_ adds the ability for the nav2_costmap_2d package to publish out costmap data associated with each layer."


#: ../../migration/Humble.rst:123
msgid "Give Behavior Server Access to Both Costmaps"
msgstr "Give Behavior Server Access to Both Costmaps"


#: ../../migration/Humble.rst:124
msgid "`PR #3255 <https://github.com/ros-planning/navigation2/pull/3255>`_ addes the ability for a behavior to access the local and global costmap."
msgstr "`PR #3255 <https://github.com/ros-planning/navigation2/pull/3255>`_ addes the ability for a behavior to access the local and global costmap."


#: ../../migration/Humble.rst:126
msgid "To update behaviors, any reference to the global_frame must be updated to the local_frame parameter along with the ``configuration`` method which now takes in the local and global collision checkers. Lastly, ``getResourceInfo`` must be overriden to return ``CostmapInfoType::LOCAL``. Other options include ``GLOBAL`` if the behavior useses global costmap and/or footprint) or ``BOTH`` if both are required. This allows us to only create and maintain the minimum amount of expensive resources."
msgstr "To update behaviors, any reference to the global_frame must be updated to the local_frame parameter along with the ``configuration`` method which now takes in the local and global collision checkers. Lastly, ``getResourceInfo`` must be overriden to return ``CostmapInfoType::LOCAL``. Other options include ``GLOBAL`` if the behavior useses global costmap and/or footprint) or ``BOTH`` if both are required. This allows us to only create and maintain the minimum amount of expensive resources."


#: ../../migration/Humble.rst:132
msgid "New Model Predictive Path Integral Controller"
msgstr "New Model Predictive Path Integral Controller"


#: ../../migration/Humble.rst:134
msgid "The new Nav2 MPPI Controller is a predictive controller - a successor to TEB and pure path tracking MPC controllers - with Nav2. It uses a sampling based approach to select optimal trajectories, optimizing between successive iterations. It contains plugin-based objective functions for customization and extension for various behaviors and behavioral attributes."
msgstr "The new Nav2 MPPI Controller is a predictive controller - a successor to TEB and pure path tracking MPC controllers - with Nav2. It uses a sampling based approach to select optimal trajectories, optimizing between successive iterations. It contains plugin-based objective functions for customization and extension for various behaviors and behavioral attributes."


#: ../../migration/Humble.rst:136
msgid "See the README.md and :ref:`configuring_mppic` page for more detail."
msgstr "See the README.md and :ref:`configuring_mppic` page for more detail."


#: ../../migration/Humble.rst:139
msgid "Behavior Tree Uses Error Codes"
msgstr "Behavior Tree Uses Error Codes"


#: ../../migration/Humble.rst:140
msgid "`PR #3324 <https:https://github.com/ros-planning/navigation2/pull/3324>`_ adds three new condition nodes to check for error codes on the blackboard set by action BT nodes which contain them."
msgstr "`PR #3324 <https:https://github.com/ros-planning/navigation2/pull/3324>`_ adds three new condition nodes to check for error codes on the blackboard set by action BT nodes which contain them."


#: ../../migration/Humble.rst:142
msgid "The ``AreErrorCodesPresent`` condition node allows the user to specify the error code from the server along with the error codes to match against. The ``WouldAControllerRecoveryHelp`` checks if the active error code is UNKNOWN, PATIENCE_EXCEEDED, FAILED_TO_MAKE_PROGRESS or NO_VALID_CONTROL. If the error code is a match, the condition returns ``SUCCESS``. These error code are potentially able to be cleared by a controller recovery."
msgstr "The ``AreErrorCodesPresent`` condition node allows the user to specify the error code from the server along with the error codes to match against. The ``WouldAControllerRecoveryHelp`` checks if the active error code is UNKNOWN, PATIENCE_EXCEEDED, FAILED_TO_MAKE_PROGRESS or NO_VALID_CONTROL. If the error code is a match, the condition returns ``SUCCESS``. These error code are potentially able to be cleared by a controller recovery."


#: ../../migration/Humble.rst:147
msgid "The ``WouldAPlannerRecoveryHelp`` checks if the active error code is UNKNOWN, NO_VALID_CONTROL, or TIMEOUT. If the error code is a match, the condition returns ``SUCCESS``. These error code are potentially able to be cleared by a planner recovery."
msgstr "The ``WouldAPlannerRecoveryHelp`` checks if the active error code is UNKNOWN, NO_VALID_CONTROL, or TIMEOUT. If the error code is a match, the condition returns ``SUCCESS``. These error code are potentially able to be cleared by a planner recovery."


#: ../../migration/Humble.rst:151
msgid "The ``WouldASmootherRecoveryHelp`` checks if the active error code is UNKNOWN, TIMEOUT, FAILED_TO_SMOOTH_PATH, or SMOOTHED_PATH_IN_COLLISION. If the error code is a match, the condition returns ``SUCCESS``. These error code are potentially able to be cleared by a smoother recovery."
msgstr "The ``WouldASmootherRecoveryHelp`` checks if the active error code is UNKNOWN, TIMEOUT, FAILED_TO_SMOOTH_PATH, or SMOOTHED_PATH_IN_COLLISION. If the error code is a match, the condition returns ``SUCCESS``. These error code are potentially able to be cleared by a smoother recovery."


#: ../../migration/Humble.rst:156
msgid "Load, Save and Loop Waypoints from the Nav2 Panel in RViz"
msgstr "Load, Save and Loop Waypoints from the Nav2 Panel in RViz"


#: ../../migration/Humble.rst:158
msgid "`PR #3165 <https:https://github.com/ros-planning/navigation2/pull/3165>`_ provides three new functionalities for the nav2 panel in RViz, they are:"
msgstr "`PR #3165 <https:https://github.com/ros-planning/navigation2/pull/3165>`_ provides three new functionalities for the nav2 panel in RViz, they are:"


#: ../../migration/Humble.rst:160
msgid "load and save waypoints in a yaml file for waypoint following (initial pose can also be stored if required)"
msgstr "load and save waypoints in a yaml file for waypoint following (initial pose can also be stored if required)"


#: ../../migration/Humble.rst:161
msgid "loop functionality to revisit the waypoints"
msgstr "loop functionality to revisit the waypoints"


#: ../../migration/Humble.rst:162
msgid "pause and resume button for stopping and continuing through the waypoints"
msgstr "pause and resume button for stopping and continuing through the waypoints"


#: ../../migration/Humble.rst:164
msgid "Looping functionality is not specific to the nav2 panel in RViz. Users utilizing nav2_waypoint_follower can take advantage of the changes made to the FollowWaypoint action, by specifying the desired number of loops in the action request that will be eventually sent to the nav2_waypoint_follower server."
msgstr "Looping functionality is not specific to the nav2 panel in RViz. Users utilizing nav2_waypoint_follower can take advantage of the changes made to the FollowWaypoint action, by specifying the desired number of loops in the action request that will be eventually sent to the nav2_waypoint_follower server."


#: ../../migration/Humble.rst:167
msgid "DWB Forward vs Reverse Pruning"
msgstr "DWB Forward vs Reverse Pruning"


#: ../../migration/Humble.rst:169
msgid "`PR #3374 <https://github.com/ros-planning/navigation2/pull/3374>`_ adds a new ``forward_prune_distance`` parameter in the DWB controller. It replaces the ``prune_distance`` for forward path shortening, enabled through the ``shorten_transformed_plan`` boolean parameter. This change allows to use different values for forward and backward path shortening."
msgstr "`PR #3374 <https://github.com/ros-planning/navigation2/pull/3374>`_ adds a new ``forward_prune_distance`` parameter in the DWB controller. It replaces the ``prune_distance`` for forward path shortening, enabled through the ``shorten_transformed_plan`` boolean parameter. This change allows to use different values for forward and backward path shortening."


#: ../../migration/Humble.rst:172
msgid "More stable regulation on curves for long lookahead distances"
msgstr "More stable regulation on curves for long lookahead distances"


#: ../../migration/Humble.rst:174
msgid "`PR #3414 <https://github.com/ros-planning/navigation2/pull/3414>`_ adds a new ``use_fixed_curvature_lookahead`` parameter to the RPP controller. This makes slowing down on curve not dependent on the instantaneous lookahead point, but instead on a fixed distance set by the parameter ``curvature_lookahead_dist``."
msgstr "`PR #3414 <https://github.com/ros-planning/navigation2/pull/3414>`_ adds a new ``use_fixed_curvature_lookahead`` parameter to the RPP controller. This makes slowing down on curve not dependent on the instantaneous lookahead point, but instead on a fixed distance set by the parameter ``curvature_lookahead_dist``."


#: ../../migration/Humble.rst:177
msgid "Publish Collision Monitor State"
msgstr "Publish Collision Monitor State"


#: ../../migration/Humble.rst:179
msgid "`PR #3504 <https://github.com/ros-planning/navigation2/pull/3504>`_ adds a new ``state_topic`` parameter to the CollisionMonitor. If specified, this optional parameter enables the state topic publisher. The topic reports the currently activated polygon action type and name."
msgstr "`PR #3504 <https://github.com/ros-planning/navigation2/pull/3504>`_ adds a new ``state_topic`` parameter to the CollisionMonitor. If specified, this optional parameter enables the state topic publisher. The topic reports the currently activated polygon action type and name."


#: ../../migration/Humble.rst:182
msgid "Renamed ROS-parameter in Collision Monitor"
msgstr "Renamed ROS-parameter in Collision Monitor"


#: ../../migration/Humble.rst:184
msgid "`PR #3513 <https://github.com/ros-planning/navigation2/pull/3513>`_ renames ``max_points`` parameter to ``min_points`` and changes its meaning. Formerly ``max_points`` meant the maximum number of points inside the area still not triggering the action, while ``min_points`` - is a minimal number of points starting from the action to be initiated. In other words ``min_points`` now should be adjusted as ``max_points + 1``."
msgstr "`PR #3513 <https://github.com/ros-planning/navigation2/pull/3513>`_ renames ``max_points`` parameter to ``min_points`` and changes its meaning. Formerly ``max_points`` meant the maximum number of points inside the area still not triggering the action, while ``min_points`` - is a minimal number of points starting from the action to be initiated. In other words ``min_points`` now should be adjusted as ``max_points + 1``."


#: ../../migration/Humble.rst:187
msgid "New safety behavior model \"limit\" in Collision Monitor"
msgstr "New safety behavior model \"limit\" in Collision Monitor"


#: ../../migration/Humble.rst:188
msgid "`PR #3519 <https://github.com/ros-planning/navigation2/pull/3519>`_ adds a new collision monitor behavior model ``limit`` that restricts maximum linear and angular speed to specific values (``linear_limit`` and ``angular_limit``) if enough points are in the given shape."
msgstr "`PR #3519 <https://github.com/ros-planning/navigation2/pull/3519>`_ adds a new collision monitor behavior model ``limit`` that restricts maximum linear and angular speed to specific values (``linear_limit`` and ``angular_limit``) if enough points are in the given shape."


#: ../../migration/Humble.rst:191
msgid "Velocity smoother applies deceleration when timeout"
msgstr "Velocity smoother applies deceleration when timeout"


#: ../../migration/Humble.rst:193
msgid "`PR #3512 <https://github.com/ros-planning/navigation2/pull/3512>`_ makes the VelocitySmoother apply the deceleration when the input command timeout."
msgstr "`PR #3512 <https://github.com/ros-planning/navigation2/pull/3512>`_ makes the VelocitySmoother apply the deceleration when the input command timeout."


#: ../../migration/Humble.rst:196
msgid "PoseProgressChecker plugin"
msgstr "PoseProgressChecker plugin"


#: ../../migration/Humble.rst:197
msgid "`PR #3530 <https://github.com/ros-planning/navigation2/pull/3530>`_ adds a new ``nav2_controller::PoseProgressChecker`` plugin. It builds on the behavior of the ``SimpleProgressChecker`` by adding a new parameter ``required_movement_angle``, allowing the plugin to considers that there is still progress when there is no translation movement, from the moment there is a rotation movement superior to ``required_movement_angle`` within the ``movement_time_allowance``."
msgstr "`PR #3530 <https://github.com/ros-planning/navigation2/pull/3530>`_ adds a new ``nav2_controller::PoseProgressChecker`` plugin. It builds on the behavior of the ``SimpleProgressChecker`` by adding a new parameter ``required_movement_angle``, allowing the plugin to considers that there is still progress when there is no translation movement, from the moment there is a rotation movement superior to ``required_movement_angle`` within the ``movement_time_allowance``."


#: ../../migration/Humble.rst:200
msgid "Allow multiple goal checkers and change parameter progress_checker_plugin(s) name and type"
msgstr "Allow multiple goal checkers and change parameter progress_checker_plugin(s) name and type"


#: ../../migration/Humble.rst:201
msgid "`PR #3555 <https://github.com/ros-planning/navigation2/pull/3555>`_  initializes the progress checker plugin(s) in the same way as for the goal checker and controller plugins: it is now a list of string and was renamed from ``progress_checker_plugin`` to ``progress_checker_plugins``, and the type changed from ``string`` to ``vector<string>``. This allows the initialization of multiple progress checkers that can be chosen from the added ``progress_checker_id field`` of the ``FollowPath`` action. Beware that it is a breaking change and that configuration files will need to be updated."
msgstr "`PR #3555 <https://github.com/ros-planning/navigation2/pull/3555>`_  initializes the progress checker plugin(s) in the same way as for the goal checker and controller plugins: it is now a list of string and was renamed from ``progress_checker_plugin`` to ``progress_checker_plugins``, and the type changed from ``string`` to ``vector<string>``. This allows the initialization of multiple progress checkers that can be chosen from the added ``progress_checker_id field`` of the ``FollowPath`` action. Beware that it is a breaking change and that configuration files will need to be updated."


#: ../../migration/Humble.rst:205
msgid "IsBatteryChargingCondition BT Node"
msgstr "IsBatteryChargingCondition BT Node"


#: ../../migration/Humble.rst:206
msgid "`PR #3553 <https://github.com/ros-planning/navigation2/pull/3553>`_ adds a BT node to check if the battery is charging. See the configuration guide :ref:`bt_is_battery_charging_condition` for more details."
msgstr "`PR #3553 <https://github.com/ros-planning/navigation2/pull/3553>`_ adds a BT node to check if the battery is charging. See the configuration guide :ref:`bt_is_battery_charging_condition` for more details."


#: ../../migration/Humble.rst:209
msgid "Behavior Server Error Codes"
msgstr "Behavior Server Error Codes"


#: ../../migration/Humble.rst:210
msgid "`PR #3569 <https://github.com/ros-planning/navigation2/pull/3539>`_ updates the behavior server plugins to provide error codes on failure."
msgstr "`PR #3569 <https://github.com/ros-planning/navigation2/pull/3539>`_ updates the behavior server plugins to provide error codes on failure."


#: ../../migration/Humble.rst:212
msgid "Spin: NONE: 0, UNKNOWN: 701, server error codes: 701-709"
msgstr "Spin: NONE: 0, UNKNOWN: 701, server error codes: 701-709"


#: ../../migration/Humble.rst:213
msgid "BackUp: NONE: 0, UNKNOWN: 801, server error codes: 710-719"
msgstr "BackUp: NONE: 0, UNKNOWN: 801, server error codes: 710-719"


#: ../../migration/Humble.rst:214
msgid "DriveOnHeading: NONE: 0, UNKNOWN: 901, server error codes: 720-729"
msgstr "DriveOnHeading: NONE: 0, UNKNOWN: 901, server error codes: 720-729"


#: ../../migration/Humble.rst:215
msgid "AssistedTeleop: NONE: 0, UNKNOWN: 1001, server error codes: 730-739"
msgstr "AssistedTeleop: NONE: 0, UNKNOWN: 1001, server error codes: 730-739"


#: ../../migration/Humble.rst:218
msgid "New Denoise Costmap Layer Plugin"
msgstr "New Denoise Costmap Layer Plugin"


#: ../../migration/Humble.rst:219
msgid "`PR #2567 <https://github.com/ros-planning/navigation2/pull/2567>`_ adds the new plugin for filtering noise on the costmap."
msgstr "`PR #2567 <https://github.com/ros-planning/navigation2/pull/2567>`_ adds the new plugin for filtering noise on the costmap."


#: ../../migration/Humble.rst:221
msgid "Due to errors in ``Voxel Layer`` or ``Obstacle Layer`` measurements, salt and pepper noise may appear on the :ref:`costmap <configuring_cosmaps>`. This noise creates false obstacles that prevent the robot from finding the best path on the map. The new ``Denoise Layer`` plugin is designed to filter out noise-induced standalone obstacles or small obstacles groups. This plugin allows you to add layer that will filter local or global costmap. More information about ``Denoise Layer`` plugin and how it works could be found :ref:`here <filtering_of_noise-induced_obstacles>`."
msgstr "Due to errors in ``Voxel Layer`` or ``Obstacle Layer`` measurements, salt and pepper noise may appear on the :ref:`costmap <configuring_cosmaps>`. This noise creates false obstacles that prevent the robot from finding the best path on the map. The new ``Denoise Layer`` plugin is designed to filter out noise-induced standalone obstacles or small obstacles groups. This plugin allows you to add layer that will filter local or global costmap. More information about ``Denoise Layer`` plugin and how it works could be found :ref:`here <filtering_of_noise-induced_obstacles>`."


#: ../../migration/Humble.rst:226
msgid "SmacPlannerHybrid viz_expansions parameter"
msgstr "SmacPlannerHybrid viz_expansions parameter"


#: ../../migration/Humble.rst:227
msgid "`PR #3577 <https://github.com/ros-planning/navigation2/pull/3577>`_ adds a new paremeter for visualising SmacPlannerHybrid expansions for debug purpose."
msgstr "`PR #3577 <https://github.com/ros-planning/navigation2/pull/3577>`_ adds a new paremeter for visualising SmacPlannerHybrid expansions for debug purpose."


#: ../../migration/index.rst:4
msgid "Migration Guides"
msgstr "Migration Guides"


#: ../../migration/index.rst:6
msgid "Navigation2 guides for migration between distributions."
msgstr "Navigation2 guides for migration between distributions."


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020
# This file is distributed under the same license as the Navigation 2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Navigation 2 latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-18 21:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh\n"
"Language-Team: zh <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:4
msgid "Build Troubleshooting Guide"
msgstr "构建故障排除指南"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:7
msgid "Common Nav2 Dependencies Build Failures"
msgstr "常见Nav2依赖项构建失败"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:9
msgid "Make sure that .bashrc file has no ROS environment variables in it. Open new terminals and try to build the packages again."
msgstr "确保.bashrc文件中没有ROS环境变量。打开新的终端并尝试重新构建软件包。"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:11
msgid "Make sure to run rosdep for the correct ROS 2 distribution. ``rosdep install -y -r -q --from-paths src --ignore-src --rosdistro <ros2-distro>``"
msgstr "确保对正确的ROS 2发行版运行rosdep。``rosdep install -y -r -q --from-paths src --ignore-src --rosdistro <ros2-distro>``"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:14
msgid "Make sure that the ``setup.bash`` is sourced in the ROS 2 installation or ROS 2 main build workspace, if applicable. Check if you can run talker and listener nodes."
msgstr "确保在ROS 2安装或ROS 2主要构建工作区中（如果适用），已加载``setup.bash``文件。检查是否可以运行talker和listener节点。"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:16
msgid "Make sure that the ``setup.bash`` in ``nav2_depend_ws/install`` is sourced."
msgstr "确保在``nav2_depend_ws/install``目录中的``setup.bash``已被引用。"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:18
msgid "Check if you have the correct ROS version and distribution. ``printenv | grep -i ROS``"
msgstr "检查是否使用了正确的ROS版本和发行版。``printenv | grep -i ROS``"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:20
msgid "If you see a bunch of errors on startup about ``map`` or ``odom`` frame not existing, remember to activate drivers (or gazebo for simulation) and set an initial pose in ``map`` frame. Costmap2D will block activation until a full TF tree is available."
msgstr "如果在启动时看到关于``map``或``odom``坐标系不存在的错误，请记得激活驱动程序（或用于仿真的gazebo）并在``map``坐标系中设置初始姿态。只有在完整的TF树可用时，Costmap2D才会阻止激活。"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:22
msgid "Make sure you've activated the lifecycle nodes if you're not seeing transforms or servers running."
msgstr "如果未看到转换或服务器运行，请确保已激活生命周期节点。"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:24
msgid "Search `GitHub Issues <https://github.com/ros-planning/navigation2/issues>`_"
msgstr "在`GitHub Issues <https://github.com/ros-planning/navigation2/issues>`_中进行搜索。"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:26
msgid "Make sure you're using the correct branch for your distribution. There is no cross support from branch for ``DistroA`` in ``DistroB``. The main development branch uses the rolling distribution."
msgstr "确保为您的发行版使用正确的分支。在``DistroB``中，没有来自``DistroA``的跨支持。主要开发分支使用rolling发行版。"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:28
msgid "Still can't solve it? Let us know about your issue. `Open a ticket <https://github.com/ros-planning/navigation2/issues/new>`_."
msgstr "仍然无法解决？告诉我们您的问题。`提交工单 <https://github.com/ros-planning/navigation2/issues/new>`_。"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:31
msgid "Reporting Issue"
msgstr "报告问题"


#: ../../development_guides/build_docs/build_troubleshooting_guide.rst:33
msgid "If you run into any issues when building Navigation2, you can use the search tool in the issues tab on `GitHub <https://github.com/ros-planning/navigation2/issues>`_ and always feel free to `open a ticket <https://github.com/ros-planning/navigation2/issues/new>`_."
msgstr "如果在构建Navigation2时遇到任何问题，您可以在`GitHub <https://github.com/ros-planning/navigation2/issues>`_的问题选项卡中使用搜索工具，并随时`提交工单 <https://github.com/ros-planning/navigation2/issues/new>`_。"


#: ../../development_guides/build_docs/index.rst:4
msgid "Build and Install"
msgstr "构建和安装"


#: ../../development_guides/build_docs/index.rst:7
msgid "Install"
msgstr "安装"


#: ../../development_guides/build_docs/index.rst:9
msgid "Nav2 and its dependencies are released as binaries. You may install it via the following to get the latest stable released version:"
msgstr "Nav2及其依赖项发布为二进制文件。您可以通过以下方式安装它以获取最新的稳定版本："


#: ../../development_guides/build_docs/index.rst:21
msgid "Build"
msgstr "构建"


#: ../../development_guides/build_docs/index.rst:23
msgid "There are a few ways to build Nav2 using:"
msgstr "有几种方法可以构建Nav2，包括："


#: ../../development_guides/build_docs/index.rst:25 ../../development_guides/build_docs/index.rst:43
msgid "Released Distribution Binaries"
msgstr "已发布的分发二进制文件"


#: ../../development_guides/build_docs/index.rst:27
msgid "Build Nav2 using readily installable binary dependencies"
msgstr "使用现成可安装的二进制依赖项构建Nav2"


#: ../../development_guides/build_docs/index.rst:29 ../../development_guides/build_docs/index.rst:77
msgid "Rolling Development Source"
msgstr "滚动式开发源代码"


#: ../../development_guides/build_docs/index.rst:31
msgid "Build Nav2 using custom or latest source dependencies"
msgstr "使用自定义或最新的源代码依赖项构建Nav2"


#: ../../development_guides/build_docs/index.rst:33 ../../development_guides/build_docs/index.rst:111
msgid "Docker Container Images"
msgstr "Docker 容器映像"


#: ../../development_guides/build_docs/index.rst:35
msgid "Build Nav2 using cached images and templated Dockerfiles"
msgstr "使用缓存的映像和模板化的Docker文件构建Nav2"


#: ../../development_guides/build_docs/index.rst:38
msgid "For a *repeatable*, *reproducible* and *streamlined* development experience, check the Nav2 documentation on using :ref:`devcontainers`!"
msgstr "要获得可重复、可复制和流畅的开发体验，请查看 Nav2 文档中关于使用 :ref:`devcontainers` 的内容！"


#: ../../development_guides/build_docs/index.rst:45
msgid "To build Nav2, you'll first need to build or install ROS 2 and related development tools, including: ``colcon``, ``rosdep`` and ``vcstool``."
msgstr "要构建Nav2，您首先需要构建或安装ROS 2及其相关开发工具，包括：``colcon``、``rosdep``和``vcstool``。"


#: ../../development_guides/build_docs/index.rst:48
msgid "For more information on building or installing ROS 2 distros, see the official documentation:"
msgstr "有关构建或安装 ROS 2 发行版的更多信息，请参阅官方文档："


#: ../../development_guides/build_docs/index.rst:50
msgid "`ROS 2 Installation <https://docs.ros.org/en/rolling/Installation.html>`_"
msgstr "``ROS 2安装 <https://docs.ros.org/en/rolling/Installation.html>`_"


#: ../../development_guides/build_docs/index.rst:51
msgid "`Install development tools and ROS tools <https://docs.ros.org/en/rolling/Installation/Alternatives/Ubuntu-Development-Setup.html#install-development-tools-and-ros-tools>`_"
msgstr "`安装开发工具和 ROS 工具 <https://docs.ros.org/en/rolling/Installation/Alternatives/Ubuntu-Development-Setup.html#install-development-tools-and-ros-tools>`_"


#: ../../development_guides/build_docs/index.rst:53
msgid "Once your environment is setup, clone the repo, install all dependencies, and build the workspace:"
msgstr "一旦您的环境设置完成，克隆存储库，安装所有依赖项并构建工作空间："


#: ../../development_guides/build_docs/index.rst:56
msgid "The branch naming schema for Nav2 is organized by ROS distro, while the default branch for Rolling is ``main``."
msgstr "Nav2 的分支命名方案按照 ROS 发行版进行组织，而 Rolling 的默认分支为 ``main``。"


#: ../../development_guides/build_docs/index.rst:69 ../../development_guides/build_docs/index.rst:103
msgid "You can then ``source ~/nav2_ws/install/setup.bash`` to get ready for demonstrations!"
msgstr "然后您可以执行 ``source ~/nav2_ws/install/setup.bash`` 准备进行演示！"


#: ../../development_guides/build_docs/index.rst:72
msgid "For more examples on building Nav2 from released distribution binaries, checkout `distro.Dockerfile <https://github.com/ros-planning/navigation2/blob/main/tools/distro.Dockerfile>`_."
msgstr "要了解如何从发布的分发二进制文件构建Nav2的更多示例，请查看`distro.Dockerfile <https://github.com/ros-planning/navigation2/blob/main/tools/distro.Dockerfile>`_。"


#: ../../development_guides/build_docs/index.rst:79
msgid "Building Nav2 using rolling development source is similar to building Nav2 from released distribution binaries, where instead you build dependencies from source using the main development branches for all ROS based packages."
msgstr "使用滚动开发源构建Nav2类似于使用发布的分发二进制文件构建Nav2，不同之处在于使用所有基于ROS的软件包的主要开发分支从源代码构建依赖项。"


#: ../../development_guides/build_docs/index.rst:82
msgid "For more information on building ROS 2 from source, see the official documentation:"
msgstr "要了解如何从源代码构建ROS 2的更多信息，请参阅官方文档："


#: ../../development_guides/build_docs/index.rst:84
msgid "`ROS 2 Building from source <https://docs.ros.org/en/rolling/Installation.html#building-from-source>`_"
msgstr "`ROS 2 从源代码构建 <https://docs.ros.org/en/rolling/Installation.html#building-from-source>`_"


#: ../../development_guides/build_docs/index.rst:86
msgid "Once your environment is setup, clone the repo, import all dependencies, and build the workspace:"
msgstr "完成环境设置后，克隆存储库，导入所有依赖项并构建工作空间："


#: ../../development_guides/build_docs/index.rst:89
msgid "Be sure to check that all dependencies you need are included and uncommented in the ``.repos`` file."
msgstr "请确保检查您需要的所有依赖项是否已在 ``.repos`` 文件中包含并取消注释。"


#: ../../development_guides/build_docs/index.rst:106
msgid "For more examples on building Nav2 from rolling development source, checkout `source.Dockerfile <https://github.com/ros-planning/navigation2/blob/main/tools/source.Dockerfile>`_."
msgstr "要了解如何从滚动开发源构建Nav2的更多示例，请查看`source.Dockerfile <https://github.com/ros-planning/navigation2/blob/main/tools/source.Dockerfile>`_。"


#: ../../development_guides/build_docs/index.rst:113
msgid "Building Nav2 using Docker container images provides a repeatable and reproducible environment to automate and self document the entire setup process. Instead of manually invoking the development tools as documented above, you can leverage the project's Dockerfiles to build and install Nav2 for various distributions."
msgstr "使用Docker容器镜像构建Nav2提供了可重复和可复制的环境，以自动化和自我记录整个设置过程。与上述文档中手动调用开发工具不同，您可以利用项目的Docker文件来构建和安装适用于各种分发版本的Nav2。"


#: ../../development_guides/build_docs/index.rst:116
msgid "For more information on installing Docker or leaning about Dockerfiles, see the official documentation:"
msgstr "要了解有关安装Docker或了解Docker文件的更多信息，请参阅官方文档："


#: ../../development_guides/build_docs/index.rst:118
msgid "`Docker Engine <https://docs.docker.com/engine/install>`_"
msgstr "`Docker 引擎 <https://docs.docker.com/engine/install>`_"


#: ../../development_guides/build_docs/index.rst:119
msgid "`Dockerfile reference <https://docs.docker.com/engine/reference/builder>`_"
msgstr "`Dockerfile参考 <https://docs.docker.com/engine/reference/builder>`_"


#: ../../development_guides/build_docs/index.rst:121
msgid "Once your system is setup, you can build the Nav2 Dockerfile from the root of the repo:"
msgstr "一旦您的系统设置完成，您可以从存储库的根目录中构建Nav2 Dockerfile："


#: ../../development_guides/build_docs/index.rst:133
msgid "The `docker build <https://docs.docker.com/engine/reference/commandline/build/>`_ command above creates a tagged image using the `Dockerfile` from the context specified using the path to the repo, where build-time variables are set using additional arguments, e.g. passing a set of `colcon mixins <https://github.com/colcon/colcon-mixin-repository>`_ to configure the workspace build. Check the ``ARG`` directives in the `Dockerfile` to discover all build-time variables available. The command also specifies an `external cache source <https://docs.docker.com/engine/reference/commandline/build/#cache-from>`_ to pull the latest cached image from Nav2's `Container Registry <https://github.com/ros-planning/navigation2/pkgs/container/navigation2>`_ to speed up the build process."
msgstr "上述`docker build <https://docs.docker.com/engine/reference/commandline/build/>`_命令使用来自指定路径到存储库的上下文的`Dockerfile`创建了一个带有标签的镜像，其中使用附加参数设置了构建时变量，例如通过传递一组`colcon mixins <https://github.com/colcon/colcon-mixin-repository>`_来配置工作空间构建。查看`Dockerfile`中的``ARG``指令以发现所有可用的构建时变量。该命令还指定了一个`外部缓存源 <https://docs.docker.com/engine/reference/commandline/build/#cache-from>`_，以从Nav2的`容器注册表 <https://github.com/ros-planning/navigation2/pkgs/container/navigation2>`_中拉取最新的缓存镜像以加快构建过程。"


#: ../../development_guides/build_docs/index.rst:136
msgid "The images cached from above are used for Nav2 CI, but can also be used with Nav2 :ref:`devcontainers`!"
msgstr "上面缓存的镜像用于Nav2 CI，但也可以与Nav2的devcontainers一起使用！"


#: ../../development_guides/build_docs/index.rst:141
msgid "Generate Doxygen"
msgstr "Generate Doxygen"


#: ../../development_guides/build_docs/index.rst:143
msgid "Run ``doxygen`` in the root of the Nav2 repository. It will generate a ``/doc/*`` directory containing the documentation. The documentation entrypoint in a browser is index.html."
msgstr "在Nav2存储库的根目录中运行``doxygen``。它将生成一个包含文档的``/doc/*``目录。文档的入口点在浏览器中是index.html。"


#: ../../development_guides/build_docs/index.rst:150
msgid "Help"
msgstr "Help"


#: ../../development_guides/build_docs/index.rst:152
msgid ":ref:`build-troubleshooting-guide`"
msgstr ":ref:`build-troubleshooting-guide`"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:2
msgid "Dev Container Guide"
msgstr "Dev Container Guide"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:4
msgid "In this guide, we'll walk through the process of creating and using dev containers for the project. While included subsections will provide greater detail on the various aspects of the process, complete comprehension of the entire guide is not required to get started, but is recommended for those interested in how dev containers work, or how to customize and optimize them for their own personal workflows."
msgstr "在本指南中，我们将逐步介绍为该项目创建和使用dev容器的过程。尽管包含的子部分将提供有关该过程各个方面的更详细信息，但并非必须完全理解整个指南即可开始使用，但对于那些对dev容器的工作原理、如何自定义和优化它们以适应自己的个人工作流程感兴趣的人来说，建议阅读完整的指南。"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:6
msgid "Creating Dev Containers"
msgstr "Creating Dev Containers"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:8
msgid "Before creating a dev container, you'll want to choose the exact configuration to use. By default the `.devcontainer/devcontainer.json` configuration is selected, however you can also choose any other `devcontainer.json` file in the `.devcontainer/` directory, where such configurations can be nested to provide greater customization: either by targeting different stages within different Dockerfiles, overriding any merged metadata or default properties, or inclusion of additional extensions and alternate commands."
msgstr "在创建dev容器之前，您需要选择要使用的确切配置。默认情况下选择`.devcontainer/devcontainer.json`配置，但您也可以选择`.devcontainer/`目录中的任何其他`devcontainer.json`文件，这样可以嵌套这样的配置以提供更大的自定义：可以通过针对不同的Dockerfile内的不同阶段，覆盖任何已合并的元数据或默认属性，或包含其他扩展和备用命令来进行自定义。"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:11
msgid "The specification, reference, and schema for the `devcontainer.json` config file format can be found here:"
msgstr "The specification, reference, and schema for the `devcontainer.json` config file format can be found here:"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:12
msgid "[Specification](https://containers.dev/implementors/spec)"
msgstr "[规范](https://containers.dev/implementors/spec)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:13
msgid "Development Container Specification"
msgstr "Development Container Specification"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:14
msgid "[Reference](https://containers.dev/implementors/json_reference)"
msgstr "[Reference](https://containers.dev/implementors/json_reference)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:15
msgid "Metadata and properties reference"
msgstr "Metadata and properties reference"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:16
msgid "[Schema](https://containers.dev/implementors/json_schema)"
msgstr "[Schema](https://containers.dev/implementors/json_schema)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:17
msgid "JSON schema for `devcontainer.json`"
msgstr "JSON schema for `devcontainer.json`"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:20
msgid "Building the image"
msgstr "Building the image"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:22
msgid "When first creating Dev Containers, any supporting tool or service used will download and build the docker images needed to run the container. This includes pulling any parent images the project's Dockerfile builds `FROM`, as well as any tags or layers declared via `cacheFrom`, as specified in the chosen `devcontainer.json` config file. This can take a while, but only needs to be done once, or at least not again until such layers are updated and pushed to the image registry."
msgstr "When first creating Dev Containers, any supporting tool or service used will download and build the docker images needed to run the container. This includes pulling any parent images the project's Dockerfile builds `FROM`, as well as any tags or layers declared via `cacheFrom`, as specified in the chosen `devcontainer.json` config file. This can take a while, but only needs to be done once, or at least not again until such layers are updated and pushed to the image registry."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:24
msgid "Specifically, for this project, the default `devcontainer.json` file targets the `dever` stage within the project's root Dockerfile, the stage that also includes handy tools for developing the project, such as bash auto completion. This stage is in turn built `FROM` the `builder` stage, the stage that only includes the dependencies needed for building the project, as reused by the project's CI. For example, the `dever` stage modifies `/etc/bash.bashrc` to automatically source `install/setup.bash` from the underlay workspace, ensuring all VS Code extensions are loaded with the correct environment, while avoiding any race conditions during installation and startup."
msgstr "Specifically, for this project, the default `devcontainer.json` file targets the `dever` stage within the project's root Dockerfile, the stage that also includes handy tools for developing the project, such as bash auto completion. This stage is in turn built `FROM` the `builder` stage, the stage that only includes the dependencies needed for building the project, as reused by the project's CI. For example, the `dever` stage modifies `/etc/bash.bashrc` to automatically source `install/setup.bash` from the underlay workspace, ensuring all VS Code extensions are loaded with the correct environment, while avoiding any race conditions during installation and startup."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:26
msgid "To speed up the initial build, images layers from this `builder` stage are cached by pulling the same image tag used by the project's CI, hosted from the image registry. This ensures your local dev container replicates our CI environment as close as possible, while benefiting from any cached work preemptively performed by the CI. Yet, this still allows you to customize the project's Dockerfile and rebuild the container, without needing to update CI images to reflect your local modifications."
msgstr "To speed up the initial build, images layers from this `builder` stage are cached by pulling the same image tag used by the project's CI, hosted from the image registry. This ensures your local dev container replicates our CI environment as close as possible, while benefiting from any cached work preemptively performed by the CI. Yet, this still allows you to customize the project's Dockerfile and rebuild the container, without needing to update CI images to reflect your local modifications."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:29
msgid "More details on the project's CI and related docker image registry can be found here:"
msgstr "More details on the project's CI and related docker image registry can be found here:"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:31
msgid "[Chronicles of Caching and Containerising CI for Nav2](https://vimeo.com/649647161/5b0c278e6c)"
msgstr "[Chronicles of Caching and Containerising CI for Nav2](https://vimeo.com/649647161/5b0c278e6c)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:32
msgid "Video presentation from ROS World 2021 - Ruffin White"
msgstr "Video presentation from ROS World 2021 - Ruffin White"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:35
msgid "Once the base image from the target stage is built, the supporting tool or service may then add additional layers to the image, such as installing additional [features](https://containers.dev/features) or customizations. For VS Code, this also includes some fancy file caching for any extensions to install later. Once this custom image is built, it is then used to start the dev container."
msgstr "Once the base image from the target stage is built, the supporting tool or service may then add additional layers to the image, such as installing additional [features](https://containers.dev/features) or customizations. For VS Code, this also includes some fancy file caching for any extensions to install later. Once this custom image is built, it is then used to start the dev container."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:37
msgid "Starting the container"
msgstr "Starting the container"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:39
msgid "When first creating Dev Containers, any supporting tool or service will invoke a sequence of commands specified in the chosen `devcontainer.json` config file. This can take a while, but only needs to be done once, or at least not again until the container is rebuilt, triggered by either updating the Dockerfile, base image, or `.devcontainer/` config."
msgstr "When first creating Dev Containers, any supporting tool or service will invoke a sequence of commands specified in the chosen `devcontainer.json` config file. This can take a while, but only needs to be done once, or at least not again until the container is rebuilt, triggered by either updating the Dockerfile, base image, or `.devcontainer/` config."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:41
msgid "Specifically, for this project, the default `devcontainer.json` config executes the `onCreateCommand` to initially colcon cache, clean, and build the overlay workspace for the project. This ensures the workspace is precompiled and ready to use, while also ensuring any changes to the project's source code are reflected in the container. This is useful for:"
msgstr "Specifically, for this project, the default `devcontainer.json` config executes the `onCreateCommand` to initially colcon cache, clean, and build the overlay workspace for the project. This ensures the workspace is precompiled and ready to use, while also ensuring any changes to the project's source code are reflected in the container. This is useful for:"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:43
msgid "IntelliSense"
msgstr "IntelliSense"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:44
msgid "Enables VS Code extensions to parse auto generated code"
msgstr "Enables VS Code extensions to parse auto generated code"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:45
msgid "Applicable for ROS package defining messages and services files"
msgstr "Applicable for ROS package defining messages and services files"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:46
msgid "Necessary for code modeling, navigation, and syntax highlighting"
msgstr "Necessary for code modeling, navigation, and syntax highlighting"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:47 ../../development_guides/devcontainer_docs/devcontainer_guide.md:72
msgid "Caching"
msgstr "Caching"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:48
msgid "Enables Codespace Prebuilds to cache the workspace artifacts"
msgstr "Enables Codespace Prebuilds to cache the workspace artifacts"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:49
msgid "Applicable for reducing startup time when spawning new Codespaces"
msgstr "Applicable for reducing startup time when spawning new Codespaces"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:50
msgid "Necessary for limiting costs from CPU and storage usage"
msgstr "Necessary for limiting costs from CPU and storage usage"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:52
msgid "While the colcon workspace is being built, VS Code will simultaneously install any specified extensions and settings. Next the `updateContentCommand` is executed, which reruns whenever the container is started or restarted. Specifically, for this project, this command re-cleans and re-builds the same colcon workspace as before, but only for invalidated packages detected by colcon cache using the lockfiles initialized during the `onCreateCommand`. This caching behavior also replicates the project's CI workflow. This is useful for:"
msgstr "While the colcon workspace is being built, VS Code will simultaneously install any specified extensions and settings. Next the `updateContentCommand` is executed, which reruns whenever the container is started or restarted. Specifically, for this project, this command re-cleans and re-builds the same colcon workspace as before, but only for invalidated packages detected by colcon cache using the lockfiles initialized during the `onCreateCommand`. This caching behavior also replicates the project's CI workflow. This is useful for:"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:54
msgid "Branching"
msgstr "Branching"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:55
msgid "Enables caching of workspace artifacts when switching between branches"
msgstr "Enables caching of workspace artifacts when switching between branches"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:56
msgid "Applicable for reviewing pull requests without rebuilding entire container"
msgstr "Applicable for reviewing pull requests without rebuilding entire container"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:57
msgid "Necessary for reducing startup time when spawning new Codespaces"
msgstr "Necessary for reducing startup time when spawning new Codespaces"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:60
msgid "More documentation about these additional colcon verb extensions can be found here:"
msgstr "More documentation about these additional colcon verb extensions can be found here:"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:62
msgid "[colcon-cache](https://github.com/ruffsl/colcon-cache)"
msgstr "[colcon-cache](https://github.com/ruffsl/colcon-cache)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:63
msgid "A colcon extension to cache the processing of packages"
msgstr "A colcon extension to cache the processing of packages"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:64
msgid "[colcon-clean](https://github.com/colcon/colcon-clean)"
msgstr "[colcon-clean](https://github.com/colcon/colcon-clean)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:65
msgid "A colcon extension to clean package workspaces"
msgstr "A colcon extension to clean package workspaces"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:68
msgid "Finally, the `postCreateCommand` is executed, which also reruns whenever the container is started or restarted. Specifically, for this project, this command makes a last few tweaks to the user's environment to improve the development experience."
msgstr "Finally, the `postCreateCommand` is executed, which also reruns whenever the container is started or restarted. Specifically, for this project, this command makes a last few tweaks to the user's environment to improve the development experience."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:70
msgid "To speed up subsequent startups, volumes that are mounted to the container store a persistent ccache and colcon workspace, while the environment is set to enable [ccache](https://ccache.dev/) via [colcon mixins](https://github.com/colcon/colcon-mixin-repository). These volumes are labeled using the [`devcontainerId`](https://containers.dev/implementors/json_reference/#variables-in-devcontainerjson) variable, which uniquely identify the dev container on a Docker host, allowing us to refer to a common identifier that is unique to the dev container, while remaining stable across rebuilds. This is useful for:"
msgstr "To speed up subsequent startups, volumes that are mounted to the container store a persistent ccache and colcon workspace, while the environment is set to enable [ccache](https://ccache.dev/) via [colcon mixins](https://github.com/colcon/colcon-mixin-repository). These volumes are labeled using the [`devcontainerId`](https://containers.dev/implementors/json_reference/#variables-in-devcontainerjson) variable, which uniquely identify the dev container on a Docker host, allowing us to refer to a common identifier that is unique to the dev container, while remaining stable across rebuilds. This is useful for:"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:73
msgid "Enables colcon workspaces and ccache to persist between container rebuilds"
msgstr "Enables colcon workspaces and ccache to persist between container rebuilds"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:74
msgid "Applicable for avoiding re-compilation when modifying dev container config files"
msgstr "Applicable for avoiding re-compilation when modifying dev container config files"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:75
msgid "Necessary for quickly customizing image or features without rebuilding from scratch"
msgstr "Necessary for quickly customizing image or features without rebuilding from scratch"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:78
msgid "While these volumes are uniquely named, you could rename them locally to further organize or segment works-in-progress. E.g. appending branch names to the volume name to quickly switch between pull requests and cached colcon workspaces."
msgstr "While these volumes are uniquely named, you could rename them locally to further organize or segment works-in-progress. E.g. appending branch names to the volume name to quickly switch between pull requests and cached colcon workspaces."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:81
msgid "Additionally, the container can be granted [privileged](https://docs.docker.com/engine/reference/commandline/run/#privileged) and non-default [Linux capabilities](https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities), connected using the [host](https://docs.docker.com/network/host/) network mode and [IPC](https://docs.docker.com/engine/reference/run/#ipc-settings---ipc) and [PID](https://docs.docker.com/engine/reference/run/#pid-settings---pid) spaces, with a relaxed [security configuration](https://docs.docker.com/engine/reference/run/#security-configuration) and seccomp confinement for native debugging and external connectivity. This is useful for:"
msgstr "Additionally, the container can be granted [privileged](https://docs.docker.com/engine/reference/commandline/run/#privileged) and non-default [Linux capabilities](https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities), connected using the [host](https://docs.docker.com/network/host/) network mode and [IPC](https://docs.docker.com/engine/reference/run/#ipc-settings---ipc) and [PID](https://docs.docker.com/engine/reference/run/#pid-settings---pid) spaces, with a relaxed [security configuration](https://docs.docker.com/engine/reference/run/#security-configuration) and seccomp confinement for native debugging and external connectivity. This is useful for:"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:83
msgid "Hybrid development"
msgstr "Hybrid development"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:84
msgid "Enables connecting ROS nodes external to the container"
msgstr "Enables connecting ROS nodes external to the container"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:85
msgid "Applicable for debugging or visualizing distributed systems"
msgstr "Applicable for debugging or visualizing distributed systems"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:86
msgid "Necessary for DDS discovery and shared memory transport"
msgstr "Necessary for DDS discovery and shared memory transport"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:87
msgid "Device connectivity"
msgstr "Device connectivity"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:88
msgid "Enables hardware forwarding from host machine to container"
msgstr "Enables hardware forwarding from host machine to container"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:89
msgid "Applicable for ROS package using sensors and actuators"
msgstr "Applicable for ROS package using sensors and actuators"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:90
msgid "Necessary for some GPU drivers and USB devices"
msgstr "Necessary for some GPU drivers and USB devices"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:93
msgid "Such `runArgs` in the `devcontainer.json` config can be enabled or customized, either expanded or or narrowed in scope, to better suit your desired development environment. The default configuration merely comments out these parameters, to limit unintended side effects or cross talk between containers, but can be uncommented to accommodate the widest range of development use cases."
msgstr "Such `runArgs` in the `devcontainer.json` config can be enabled or customized, either expanded or or narrowed in scope, to better suit your desired development environment. The default configuration merely comments out these parameters, to limit unintended side effects or cross talk between containers, but can be uncommented to accommodate the widest range of development use cases."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:97
msgid "More details on using DDS, debuggers, or devices with Docker containers can be found here:"
msgstr "More details on using DDS, debuggers, or devices with Docker containers can be found here:"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:99
msgid "[How to Communicate Across Docker Containers Using the Host Driver](https://community.rti.com/kb/how-use-rti-connext-dds-communicate-across-docker-containers-using-host-driver)"
msgstr "[How to Communicate Across Docker Containers Using the Host Driver](https://community.rti.com/kb/how-use-rti-connext-dds-communicate-across-docker-containers-using-host-driver)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:100
msgid "Using the `host` network driver to access all network interfaces of the host machine from the Docker container"
msgstr "Using the `host` network driver to access all network interfaces of the host machine from the Docker container"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:101
msgid "[Communicate between two Docker containers using DDS and shared memory](https://community.rti.com/kb/communicate-between-two-docker-containers-using-rti-connext-dds-and-shared-memory)"
msgstr "[Communicate between two Docker containers using DDS and shared memory](https://community.rti.com/kb/communicate-between-two-docker-containers-using-rti-connext-dds-and-shared-memory)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:102
msgid "Enabling containers to communicate with one another and with the host machine using interprocess communication (IPC)"
msgstr "Enabling containers to communicate with one another and with the host machine using interprocess communication (IPC)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:103
msgid "[Debugging programs running inside Docker containers, in production](https://nvartolomei.com/debugging-programs-running-inside-docker-containers--in-production/)"
msgstr "[Debugging programs running inside Docker containers, in production](https://nvartolomei.com/debugging-programs-running-inside-docker-containers--in-production/)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:104
msgid "Using tools like strace, perf, gdb when debugging programs running inside containers"
msgstr "Using tools like strace, perf, gdb when debugging programs running inside containers"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:107
msgid "Using Dev Containers"
msgstr "Using Dev Containers"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:109
msgid "Once the dev container has been created and setup completed, VS Code will open a new workspace directly from the project's root directory, which itself is mounted within the source directory in the overlay colcon workspace. From here you can build, test, and debug the project as you normally would, with the added benefit of having the project's dependencies, intellisense, linters, and other extensions pre-configured and ready to use. Simply open a new terminal (Crtl+Shift+`), cd to the root of the colcon workspace, and run the usual colcon commands."
msgstr "Once the dev container has been created and setup completed, VS Code will open a new workspace directly from the project's root directory, which itself is mounted within the source directory in the overlay colcon workspace. From here you can build, test, and debug the project as you normally would, with the added benefit of having the project's dependencies, intellisense, linters, and other extensions pre-configured and ready to use. Simply open a new terminal (Crtl+Shift+`), cd to the root of the colcon workspace, and run the usual colcon commands."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:112
msgid "You can incorporate the same scripts used by the `devcontainer.json` config file to further automate your local development workflow."
msgstr "You can incorporate the same scripts used by the `devcontainer.json` config file to further automate your local development workflow."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:115
msgid "Terminals"
msgstr "Terminals"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:117
msgid "If you prefer using an alternate terminal emulator, rather than the built-in VS Code terminal, you can open a separate shell session by simply using the Dev Container CLI or directly using the Docker CLI via the `exec` subcommands."
msgstr "If you prefer using an alternate terminal emulator, rather than the built-in VS Code terminal, you can open a separate shell session by simply using the Dev Container CLI or directly using the Docker CLI via the `exec` subcommands."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:119
msgid "[Dev Container CLI](https://code.visualstudio.com/docs/devcontainers/devcontainer-cli)"
msgstr "[Dev Container CLI](https://code.visualstudio.com/docs/devcontainers/devcontainer-cli)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:120
msgid "`devcontainer exec --workspace-folder $NAV2_WS/src/navigation2 bash`"
msgstr "`devcontainer exec --workspace-folder $NAV2_WS/src/navigation2 bash`"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:121
msgid "[docker exec ](https://docs.docker.com/engine/reference/commandline/exec/)"
msgstr "[docker exec ](https://docs.docker.com/engine/reference/commandline/exec/)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:123
msgid "`docker exec -it <container-id> bash`"
msgstr "`docker exec -it <container-id> bash`"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:126
msgid "Shell sessions spawned directly via `docker exec` do not set the same environment that `devcontainer exec` does using `userEnvProbe`. Additional environment variables include `REMOTE_CONTAINERS_IPC`, `REMOTE_CONTAINERS_SOCKETS` and are used by vscode, ssh and X11."
msgstr "Shell sessions spawned directly via `docker exec` do not set the same environment that `devcontainer exec` does using `userEnvProbe`. Additional environment variables include `REMOTE_CONTAINERS_IPC`, `REMOTE_CONTAINERS_SOCKETS` and are used by vscode, ssh and X11."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:131
msgid "The environment provided by `userEnvProbe` can be sourced manually. E.g. for the default `loginInteractiveShell` probe:"
msgstr "The environment provided by `userEnvProbe` can be sourced manually. E.g. for the default `loginInteractiveShell` probe:"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:140
msgid "Lifecycle"
msgstr "Lifecycle"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:142
msgid "While using the dev container, try and keep in mind the lifecycle of the container itself. Specifically, containers are ephemeral, meaning they are normally destroyed and recreated whenever the dev environment is rebuilt or updated. Subsequently, a best practice is to avoid storing any persistent data within the container, and instead utilize the project's source directory, or a separate mounted volume. When altering the development environment inside the container, try to remember to codify your changes into the Dockerfile, or the `devcontainer.json` config file, so that they can be easily reproduced and shared with others."
msgstr "While using the dev container, try and keep in mind the lifecycle of the container itself. Specifically, containers are ephemeral, meaning they are normally destroyed and recreated whenever the dev environment is rebuilt or updated. Subsequently, a best practice is to avoid storing any persistent data within the container, and instead utilize the project's source directory, or a separate mounted volume. When altering the development environment inside the container, try to remember to codify your changes into the Dockerfile, or the `devcontainer.json` config file, so that they can be easily reproduced and shared with others."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:145
msgid "This is particularly important when the host machine is inherently ephemeral as well, as the case may be when using cloud based environments such as Codespaces, so be sure to commit and push local changes to a remote repository:"
msgstr "This is particularly important when the host machine is inherently ephemeral as well, as the case may be when using cloud based environments such as Codespaces, so be sure to commit and push local changes to a remote repository:"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:147
msgid "[The codespace lifecycle](https://docs.github.com/en/codespaces/getting-started/the-codespace-lifecycle)"
msgstr "[The codespace lifecycle](https://docs.github.com/en/codespaces/getting-started/the-codespace-lifecycle)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:148
msgid "Maintain your data throughout the entire codespace lifecycle"
msgstr "Maintain your data throughout the entire codespace lifecycle"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:151
msgid "Rebuilding"
msgstr "Rebuilding"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:153
msgid "From time to time, you may need to rebuild the dev container, either because the base image, or `.devcontainer/` config was updated, or simply out of wanting a new fresh development environment. To do so, simply open the Command Palette (Ctrl+Shift+P) and select the `Remote-Containers: Rebuild Container` command."
msgstr "From time to time, you may need to rebuild the dev container, either because the base image, or `.devcontainer/` config was updated, or simply out of wanting a new fresh development environment. To do so, simply open the Command Palette (Ctrl+Shift+P) and select the `Remote-Containers: Rebuild Container` command."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:156
msgid "Rebuilding the container will destroy any changes made to the container itself, such as installing additional packages, or modifying the environment. However, the project's source directory, and any mounted volumes, will remain unaffected."
msgstr "Rebuilding the container will destroy any changes made to the container itself, such as installing additional packages, or modifying the environment. However, the project's source directory, and any mounted volumes, will remain unaffected."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:159
msgid "For example, you may need to rebuild the dev container when:"
msgstr "For example, you may need to rebuild the dev container when:"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:161
msgid "Pulling newer images from a container registry"
msgstr "Pulling newer images from a container registry"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:162
msgid "specifically, image tags built `FROM` in the Dockerfile"
msgstr "specifically, image tags built `FROM` in the Dockerfile"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:163
msgid "or tags listed under `cacheFrom` in `devcontainer.json`"
msgstr "or tags listed under `cacheFrom` in `devcontainer.json`"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:164
msgid "periodically done manually to ensure local environment reflects CI"
msgstr "periodically done manually to ensure local environment reflects CI"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:165
msgid "Updating the dev container configuration"
msgstr "Updating the dev container configuration"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:166
msgid "specifically when modifying dependent stages in the `Dockerfile`"
msgstr "specifically when modifying dependent stages in the `Dockerfile`"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:167
msgid "or when modifying `./devcontainer` files and commands"
msgstr "or when modifying `./devcontainer` files and commands"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:168
msgid "where build cache reuse correlates with severity of changes made"
msgstr "where build cache reuse correlates with severity of changes made"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:170
msgid "When necessary, you can also rebuild the container from scratch, e.i. without caching from docker, by selecting the `Remote-Containers: Rebuild Container Without Cache` command. This instead omits the `--cache-from` flag from the `docker buildx` command, while also adding the `--no-cache` and `--pull` flags to prevent caching from any existing image layers, using only the latest images from a container registry."
msgstr "When necessary, you can also rebuild the container from scratch, e.i. without caching from docker, by selecting the `Remote-Containers: Rebuild Container Without Cache` command. This instead omits the `--cache-from` flag from the `docker buildx` command, while also adding the `--no-cache` and `--pull` flags to prevent caching from any existing image layers, using only the latest images from a container registry."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:173
msgid "Rebuilding the container without cache may likely pull newer images from a container registry or install newer packages, as is common when developing for ROS 2 Rolling. You may then want to clean your overlay volume to avoid ABI incompatibilities or stale artifacts."
msgstr "Rebuilding the container without cache may likely pull newer images from a container registry or install newer packages, as is common when developing for ROS 2 Rolling. You may then want to clean your overlay volume to avoid ABI incompatibilities or stale artifacts."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:176
msgid "Rebuilding without caching may be necessary when:"
msgstr "Rebuilding without caching may be necessary when:"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:178
msgid "Needing to update the base image"
msgstr "Needing to update the base image"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:179
msgid "specifically if dev container configurations remain unmodified"
msgstr "specifically if dev container configurations remain unmodified"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:180
msgid "to forcefully rerun a `RUN` directive in the Dockerfile"
msgstr "to forcefully rerun a `RUN` directive in the Dockerfile"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:181
msgid "such as unchanged `apt upgrade` or `rosdep update` commands"
msgstr "such as unchanged `apt upgrade` or `rosdep update` commands"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:183
msgid "Specifically, for this project, volumes remain unaffected by this rebuilding process: i.e. those used to mount the ccache directory or colcon workspace. While volume management is left to the user's discretion, other projects may of course handle this differently, so be sure to check the `./devcontainer` configuration to inspect how various container resources may be managed."
msgstr "Specifically, for this project, volumes remain unaffected by this rebuilding process: i.e. those used to mount the ccache directory or colcon workspace. While volume management is left to the user's discretion, other projects may of course handle this differently, so be sure to check the `./devcontainer` configuration to inspect how various container resources may be managed."


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:186
msgid "Docker volume management can be done via the Docker CLI, or the VS Code Docker extension:"
msgstr "Docker volume management can be done via the Docker CLI, or the VS Code Docker extension:"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:188
msgid "[Docker Volume CLI](https://docs.docker.com/engine/reference/commandline/volume)"
msgstr "[Docker Volume CLI](https://docs.docker.com/engine/reference/commandline/volume)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:189
msgid "Manage volumes using subcommands to create, inspect, list, remove, or prune volumes"
msgstr "Manage volumes using subcommands to create, inspect, list, remove, or prune volumes"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:190
msgid "[VS Code Docker extension](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker)"
msgstr "[VS Code Docker extension](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker)"


#: ../../development_guides/devcontainer_docs/devcontainer_guide.md:191
msgid "Makes it easy to create, manage, and debug containerized applications"
msgstr "Makes it easy to create, manage, and debug containerized applications"


#: ../../development_guides/devcontainer_docs/index.md:2
msgid "Dev Containers"
msgstr "Dev Containers"


#: ../../development_guides/devcontainer_docs/index.md:4
msgid "You can use dev containers to build the project if you prefer a streamlined setup experience. This means you can use the same tools and dependencies as the rest of the team, including our Continuous Integration (CI) workflows, without worrying about installing dependencies on your host machine. Additionally, using Dev Containers makes it simple to switch between local or remote development environments, such as GitHub Codespaces."
msgstr "You can use dev containers to build the project if you prefer a streamlined setup experience. This means you can use the same tools and dependencies as the rest of the team, including our Continuous Integration (CI) workflows, without worrying about installing dependencies on your host machine. Additionally, using Dev Containers makes it simple to switch between local or remote development environments, such as GitHub Codespaces."


#: ../../development_guides/devcontainer_docs/index.md:7
msgid "More info on Dev Containers can be found here:"
msgstr "More info on Dev Containers can be found here:"


#: ../../development_guides/devcontainer_docs/index.md:9
msgid "[Development Containers](https://containers.dev/)"
msgstr "[Development Containers](https://containers.dev/)"


#: ../../development_guides/devcontainer_docs/index.md:10
msgid "An open specification for enriching containers with development specific content and settings"
msgstr "An open specification for enriching containers with development specific content and settings"


#: ../../development_guides/devcontainer_docs/index.md:11
msgid "[Developing inside a Container](https://code.visualstudio.com/docs/remote/containers)"
msgstr "[Developing inside a Container](https://code.visualstudio.com/docs/remote/containers)"


#: ../../development_guides/devcontainer_docs/index.md:12
msgid "Learn how to use Visual Studio Code to develop inside a Docker container"
msgstr "Learn how to use Visual Studio Code to develop inside a Docker container"


#: ../../development_guides/devcontainer_docs/index.md:13
msgid "[GitHub Codespaces overview](https://docs.github.com/en/codespaces/overview)"
msgstr "[GitHub Codespaces overview](https://docs.github.com/en/codespaces/overview)"


#: ../../development_guides/devcontainer_docs/index.md:14
msgid "A development environment hosted in the cloud"
msgstr "A development environment hosted in the cloud"


#: ../../development_guides/devcontainer_docs/index.md:24
msgid "What, Why, How?"
msgstr "What, Why, How?"


#: ../../development_guides/devcontainer_docs/index.md:26
msgid "Lets briefly explain what dev containers are, why you should use them, and how they work."
msgstr "Lets briefly explain what dev containers are, why you should use them, and how they work."


#: ../../development_guides/devcontainer_docs/index.md:29
msgid "Here we'll assume the use of VS Code, but still applies to alternative tools and services, including  other CLIs, IDEs, etc. such as:"
msgstr "Here we'll assume the use of VS Code, but still applies to alternative tools and services, including  other CLIs, IDEs, etc. such as:"


#: ../../development_guides/devcontainer_docs/index.md:31
msgid "[Dev Container CLI](https://github.com/devcontainers/cli)"
msgstr "[Dev Container CLI](https://github.com/devcontainers/cli)"


#: ../../development_guides/devcontainer_docs/index.md:32
msgid "A reference implementation for the open specification"
msgstr "A reference implementation for the open specification"


#: ../../development_guides/devcontainer_docs/index.md:33
msgid "[JetBrains Space | Develop in Dev Environment](https://www.jetbrains.com/help/space/develop-in-a-dev-environment.html)"
msgstr "[JetBrains Space | Develop in Dev Environment](https://www.jetbrains.com/help/space/develop-in-a-dev-environment.html)"


#: ../../development_guides/devcontainer_docs/index.md:34
msgid "Using Dev Containers with JetBrain based products"
msgstr "Using Dev Containers with JetBrain based products"


#: ../../development_guides/devcontainer_docs/index.md:35
msgid "[Supporting tools](https://containers.dev/supporting)"
msgstr "[Supporting tools](https://containers.dev/supporting)"


#: ../../development_guides/devcontainer_docs/index.md:36
msgid "List of tools and services supporting the development container specification"
msgstr "List of tools and services supporting the development container specification"


#: ../../development_guides/devcontainer_docs/index.md:39
msgid "What is a Dev Container?"
msgstr "What is a Dev Container?"


#: ../../development_guides/devcontainer_docs/index.md:41
msgid "A dev container is a Docker container that has all the tools and dependencies you need to develop the project. It runs in a self-contained environment and is isolated from other containers and your host machine. This lets you reliably develop for the project anywhere, notably for linux distributions targeted by ROS, regardless of your host machine's operating system."
msgstr "A dev container is a Docker container that has all the tools and dependencies you need to develop the project. It runs in a self-contained environment and is isolated from other containers and your host machine. This lets you reliably develop for the project anywhere, notably for linux distributions targeted by ROS, regardless of your host machine's operating system."


#: ../../development_guides/devcontainer_docs/index.md:43
msgid "Why use a Dev Container?"
msgstr "Why use a Dev Container?"


#: ../../development_guides/devcontainer_docs/index.md:45
msgid "A dev container provides a common and consistent development environment. It ensures that everyone on the team is using the same tools and dependencies. It also makes it easy to switch between projects because each project can use a different container. This is especially useful if you work on multiple projects that use different versions of the same tools and dependencies, such as different versions of ROS."
msgstr "A dev container provides a common and consistent development environment. It ensures that everyone on the team is using the same tools and dependencies. It also makes it easy to switch between projects because each project can use a different container. This is especially useful if you work on multiple projects that use different versions of the same tools and dependencies, such as different versions of ROS."


#: ../../development_guides/devcontainer_docs/index.md:47
msgid "How do Dev Containers work?"
msgstr "How do Dev Containers work?"


#: ../../development_guides/devcontainer_docs/index.md:49
msgid "When you open the project in VS Code, VS Code checks for the dev container configuration nested within the `.devcontainer` folder under the project's root directory. If it finds one, it can prompt you to reopen the project in a container. If you choose to do so, it launches the container, connects to it, and mounts your project folder inside the container. You can then use VS Code in the container just as you would locally. While setting up the container, VS Code can also attempt to passthrough useful aspects of your local environment, such as git user configurations, X11 sockets, and more."
msgstr "When you open the project in VS Code, VS Code checks for the dev container configuration nested within the `.devcontainer` folder under the project's root directory. If it finds one, it can prompt you to reopen the project in a container. If you choose to do so, it launches the container, connects to it, and mounts your project folder inside the container. You can then use VS Code in the container just as you would locally. While setting up the container, VS Code can also attempt to passthrough useful aspects of your local environment, such as git user configurations, X11 sockets, and more."


#: ../../development_guides/devcontainer_docs/index.md:51
msgid "This is quite similar to earlier tools used to customize and run docker containers for development:"
msgstr "This is quite similar to earlier tools used to customize and run docker containers for development:"


#: ../../development_guides/devcontainer_docs/index.md:53
msgid "[rocker | ROS + Docker](https://github.com/osrf/rocker)"
msgstr "[rocker | ROS + Docker](https://github.com/osrf/rocker)"


#: ../../development_guides/devcontainer_docs/index.md:54
msgid "A tool to run docker containers with overlays and convenient options for things like GUIs etc."
msgstr "A tool to run docker containers with overlays and convenient options for things like GUIs etc."


#: ../../development_guides/devcontainer_docs/index.md:55
msgid "Developed by [Open Robotics](https://www.openrobotics.org/)"
msgstr "Developed by [Open Robotics](https://www.openrobotics.org/)"


#: ../../development_guides/devcontainer_docs/index.md:56
msgid "[ADE Development Environment](https://ade-cli.readthedocs.io/en/latest/)"
msgstr "[ADE Development Environment](https://ade-cli.readthedocs.io/en/latest/)"


#: ../../development_guides/devcontainer_docs/index.md:57
msgid "A modular Docker-based tool to ensure developers have a common, consistent development environment"
msgstr "A modular Docker-based tool to ensure developers have a common, consistent development environment"


#: ../../development_guides/devcontainer_docs/index.md:58
msgid "Developed by [Apex.AI](https://www.apex.ai/)"
msgstr "Developed by [Apex.AI](https://www.apex.ai/)"


#: ../../development_guides/devcontainer_docs/index.md:60
msgid "Prerequisites"
msgstr "前提条件"


#: ../../development_guides/devcontainer_docs/index.md:62
msgid "To use dev containers, you'll need the following:"
msgstr "To use dev containers, you'll need the following:"


#: ../../development_guides/devcontainer_docs/index.md:64
msgid "[Docker Engine](https://docs.docker.com/engine/install/) installed and running on the host machine"
msgstr "[Docker Engine](https://docs.docker.com/engine/install/) installed and running on the host machine"


#: ../../development_guides/devcontainer_docs/index.md:65
msgid "[Visual Studio Code](https://code.visualstudio.com/) installed on any remote machine"
msgstr "[Visual Studio Code](https://code.visualstudio.com/) installed on any remote machine"


#: ../../development_guides/devcontainer_docs/index.md:66
msgid "[Dev Containers](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers) extension installed in VS Code"
msgstr "[Dev Containers](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers) extension installed in VS Code"


#: ../../development_guides/devcontainer_docs/index.md:69
msgid "Alternatively, you could use GitHub Codespaces directly from the project repo, or any other remote host machine:"
msgstr "Alternatively, you could use GitHub Codespaces directly from the project repo, or any other remote host machine:"


#: ../../development_guides/devcontainer_docs/index.md:71
msgid "[Creating a codespace for a repository](https://docs.github.com/en/codespaces/developing-in-codespaces/creating-a-codespace-for-a-repository?tool=webui)"
msgstr "[Creating a codespace for a repository](https://docs.github.com/en/codespaces/developing-in-codespaces/creating-a-codespace-for-a-repository?tool=webui)"


#: ../../development_guides/devcontainer_docs/index.md:72
msgid "How to create a codespace for repository via GitHub CLI, VS Code, or Web browser"
msgstr "How to create a codespace for repository via GitHub CLI, VS Code, or Web browser"


#: ../../development_guides/devcontainer_docs/index.md:73
msgid "[Develop on a remote Docker host](https://code.visualstudio.com/remote/advancedcontainers/develop-remote-host)"
msgstr "[Develop on a remote Docker host](https://code.visualstudio.com/remote/advancedcontainers/develop-remote-host)"


#: ../../development_guides/devcontainer_docs/index.md:74
msgid "How to connect VS Code to a remote Docker host using SSH tunnels or TCP sockets"
msgstr "How to connect VS Code to a remote Docker host using SSH tunnels or TCP sockets"


#: ../../development_guides/devcontainer_docs/index.md:77
msgid "Getting started"
msgstr "Getting started"


#: ../../development_guides/devcontainer_docs/index.md:79
msgid "Getting started using dev containers is as simple as opening the project in VS Code by either: following the notification prompt to reopen the project in a container, or explicitly opening the command palette (Crtl+Shift+P) and selecting `Remote-Containers: Reopen in Container`. This will create a new container, install any extensions specified in the project's default `.devcontainer/devcontainer.json` config file, and mount the project's root directory as the workspace folder. Once the container is created, VS Code will connect to it and you can start developing."
msgstr "Getting started using dev containers is as simple as opening the project in VS Code by either: following the notification prompt to reopen the project in a container, or explicitly opening the command palette (Crtl+Shift+P) and selecting `Remote-Containers: Reopen in Container`. This will create a new container, install any extensions specified in the project's default `.devcontainer/devcontainer.json` config file, and mount the project's root directory as the workspace folder. Once the container is created, VS Code will connect to it and you can start developing."


#: ../../development_guides/devcontainer_docs/index.md:82
msgid "Clicking the `Starting Dev Container (show log)` notification in VS Code allows you to observe in live time how the sausage is made, while typing `Dev Containers: Show Log` into the command palette will list all the available commands to review and revisit these log files later."
msgstr "Clicking the `Starting Dev Container (show log)` notification in VS Code allows you to observe in live time how the sausage is made, while typing `Dev Containers: Show Log` into the command palette will list all the available commands to review and revisit these log files later."


#: ../../development_guides/devcontainer_docs/index.md:85
msgid "While waiting for the initial setup, feel free to stretch your legs, grab a coffee, or continue to read the following guides to learn more about creating and using dev containers, or how to visualize and leverage graphical user interfaces from a headless development environment."
msgstr "While waiting for the initial setup, feel free to stretch your legs, grab a coffee, or continue to read the following guides to learn more about creating and using dev containers, or how to visualize and leverage graphical user interfaces from a headless development environment."


#: ../../development_guides/devcontainer_docs/index.md:87
msgid "**[](devcontainer_guide.md)**"
msgstr "**[](devcontainer_guide.md)**"


#: ../../development_guides/devcontainer_docs/index.md:88
msgid "How to develop Nav2 using dev containers and supporting tools"
msgstr "How to develop Nav2 using dev containers and supporting tools"


#: ../../development_guides/devcontainer_docs/index.md:90
msgid "Security"
msgstr "Security"


#: ../../development_guides/devcontainer_docs/index.md:93
msgid "Ensure you trust the authors and contents of workspaces before launching derived dev containers."
msgstr "Ensure you trust the authors and contents of workspaces before launching derived dev containers."


#: ../../development_guides/devcontainer_docs/index.md:96
msgid "A word of caution when using dev containers: they are powerful tools, but can be a security concern, as the capability of arbitrary code execution facilitated by IDE extensions to enable such automation and convenience remains inherently dual use. Before launching a dev container, ensure you trust the workspaces and authors. For example, when reviewing a pull request, verify patches remain benign and do not introduce any malicious code. Although such vigilance is merited whenever compiling and running patched code, using containers with either elevated privileges or filesystem access renders this diligence even more prudent."
msgstr "A word of caution when using dev containers: they are powerful tools, but can be a security concern, as the capability of arbitrary code execution facilitated by IDE extensions to enable such automation and convenience remains inherently dual use. Before launching a dev container, ensure you trust the workspaces and authors. For example, when reviewing a pull request, verify patches remain benign and do not introduce any malicious code. Although such vigilance is merited whenever compiling and running patched code, using containers with either elevated privileges or filesystem access renders this diligence even more prudent."


#: ../../development_guides/devcontainer_docs/index.md:99
msgid "More info on trusting workspaces and extensions in general can be found here:"
msgstr "More info on trusting workspaces and extensions in general can be found here:"


#: ../../development_guides/devcontainer_docs/index.md:101
msgid "[Workspace Trust](https://code.visualstudio.com/docs/editor/workspace-trust)"
msgstr "[Workspace Trust](https://code.visualstudio.com/docs/editor/workspace-trust)"


#: ../../development_guides/devcontainer_docs/index.md:102
msgid "VS Code user guid on trusting and configure workspaces"
msgstr "VS Code user guid on trusting and configure workspaces"


#: ../../development_guides/index.rst:4
msgid "Development Guides"
msgstr "Development Guides"


#: ../../development_guides/index.rst:6
msgid "This section includes guides for developing Nav2, e.g. how to build from source, how to use dev containers, and how to get involved."
msgstr "This section includes guides for developing Nav2, e.g. how to build from source, how to use dev containers, and how to get involved."


#: ../../development_guides/involvement_docs/index.rst:4 ../../development_guides/involvement_docs/index.rst:16
msgid "Getting Involved"
msgstr "Getting Involved"


#: ../../development_guides/involvement_docs/index.rst:6
msgid "As an open-source project, we welcome and encourage the community to submit patches directly to the |LPN|.  In our collaborative open source environment, standards and methods for submitting changes help reduce the chaos that can result from an active development community."
msgstr "As an open-source project, we welcome and encourage the community to submit patches directly to the |LPN|.  In our collaborative open source environment, standards and methods for submitting changes help reduce the chaos that can result from an active development community."


#: ../../development_guides/involvement_docs/index.rst:11
msgid "This document explains how to participate in project conversations, log and track bugs and enhancement requests, and submit patches to the project so your patch will be accepted quickly in the codebase."
msgstr "This document explains how to participate in project conversations, log and track bugs and enhancement requests, and submit patches to the project so your patch will be accepted quickly in the codebase."


#: ../../development_guides/involvement_docs/index.rst:18
msgid "If you're interested in getting involved in Navigation 2, first of all, welcome! We encourage everyone to get involved from students, to junior developers, to senior developers, and executives. There's something to do for everyone from bug fixes, to feature development, new algorithms, and refactoring."
msgstr "If you're interested in getting involved in Navigation 2, first of all, welcome! We encourage everyone to get involved from students, to junior developers, to senior developers, and executives. There's something to do for everyone from bug fixes, to feature development, new algorithms, and refactoring."


#, python-format
msgid "All ROS 2 TSC Working Groups have their meetings on the `working group calendar <https://calendar.google.com/calendar/embed?src=agf3kajirket8khktupm9go748%40group.calendar.google.com>`_. Here, you can find the date and time of the Navigation2 working group meeting. Make sure you're checking in your local timezone. From this calendar, you can add yourself to the event so it will appear on your google calendar and get the event link to the call through Google Hangouts. We encourage everyone interested to come to the meeting to introduce yourself, your project, and see what everyone is working on."
msgstr "All ROS 2 TSC Working Groups have their meetings on the `working group calendar <https://calendar.google.com/calendar/embed?src=agf3kajirket8khktupm9go748%40group.calendar.google.com>`_. Here, you can find the date and time of the Navigation2 working group meeting. Make sure you're checking in your local timezone. From this calendar, you can add yourself to the event so it will appear on your google calendar and get the event link to the call through Google Hangouts. We encourage everyone interested to come to the meeting to introduce yourself, your project, and see what everyone is working on."


#: ../../development_guides/involvement_docs/index.rst:27
msgid "Further, `ROS Discourse <https://discourse.ros.org/>`_ is a good place to follow larger discussions happening in the community and announcements. This is **not** the correct place to post questions or ask for assistance. Please visit `ROS Answers <https://answers.ros.org/>`_ for Q&A."
msgstr "Further, `ROS Discourse <https://discourse.ros.org/>`_ is a good place to follow larger discussions happening in the community and announcements. This is **not** the correct place to post questions or ask for assistance. Please visit `ROS Answers <https://answers.ros.org/>`_ for Q&A."


#: ../../development_guides/involvement_docs/index.rst:29
msgid "Lastly, we have a `Community Slack <https://join.slack.com/t/navigation2/shared_invite/zt-uj428p0x-jKx8U7OzK1IOWp5TnDS2rA>`_ where we chat in real-time about topics in public channels or sidebar maintainers on individual projects via PMs. If you're interested in contributing to Nav2, this is a great place to join!"
msgstr "Lastly, we have a `Community Slack <https://join.slack.com/t/navigation2/shared_invite/zt-uj428p0x-jKx8U7OzK1IOWp5TnDS2rA>`_ where we chat in real-time about topics in public channels or sidebar maintainers on individual projects via PMs. If you're interested in contributing to Nav2, this is a great place to join!"


#: ../../development_guides/involvement_docs/index.rst:31
msgid "If you're looking to contribute code or bugs, please see the Process section below."
msgstr "If you're looking to contribute code or bugs, please see the Process section below."


#: ../../development_guides/involvement_docs/index.rst:33
msgid "Over time, for developers that have an interest and have shown technical competence in an area of the stack, we elevate developers to a maintainers status. That allows push rights to our protected branches, first-reviewers rights, and getting your name on :ref:`about`. There currently is not a clear process for getting to be a maintainer, but if you've been involved and contributing over a duration of several months, you may be a good candidate and should email the project lead listed on :ref:`about`."
msgstr "Over time, for developers that have an interest and have shown technical competence in an area of the stack, we elevate developers to a maintainers status. That allows push rights to our protected branches, first-reviewers rights, and getting your name on :ref:`about`. There currently is not a clear process for getting to be a maintainer, but if you've been involved and contributing over a duration of several months, you may be a good candidate and should email the project lead listed on :ref:`about`."


#: ../../development_guides/involvement_docs/index.rst:38
msgid "Process"
msgstr "Process"


#: ../../development_guides/involvement_docs/index.rst:40
msgid "After you've introduced yourself in a working group meeting (recommended, not required), you're ready to get started! We recommend a typical open-source project flow and value detail and transparency. If you commit to something and need to pull back, say so. We all know priorities change and appreciate the heads up so that task can go into the open queue of tasks."
msgstr "After you've introduced yourself in a working group meeting (recommended, not required), you're ready to get started! We recommend a typical open-source project flow and value detail and transparency. If you commit to something and need to pull back, say so. We all know priorities change and appreciate the heads up so that task can go into the open queue of tasks."


#: ../../development_guides/involvement_docs/index.rst:45
msgid "The process is simple and is as follow:"
msgstr "The process is simple and is as follow:"


#: ../../development_guides/involvement_docs/index.rst:47
msgid "Create a ticket for any issues or features you'd like to see. You are not required to fix / implement patches required, but it would be helpful. Reporting bugs is also a valuable contribution."
msgstr "Create a ticket for any issues or features you'd like to see. You are not required to fix / implement patches required, but it would be helpful. Reporting bugs is also a valuable contribution."


#: ../../development_guides/involvement_docs/index.rst:49
msgid "If this ticket, or another existing ticket, is something you would like to work on, comment in the ticket claiming ownership over it. It would be helpful at this time if you declared a strategy and a timeline for planning purposes of other folks working around you. Over time, update the ticket with progress of key markers and engage in any constructive feedback maintainers or other users may have."
msgstr "If this ticket, or another existing ticket, is something you would like to work on, comment in the ticket claiming ownership over it. It would be helpful at this time if you declared a strategy and a timeline for planning purposes of other folks working around you. Over time, update the ticket with progress of key markers and engage in any constructive feedback maintainers or other users may have."


#: ../../development_guides/involvement_docs/index.rst:51
msgid "Once you've completed the task you set out to complete, submit a PR! Please fill out the PR template in complete to ensure that we have a full understanding of your work. At that point, 1-2 reviewers will take a look at your work and give it some feedback to be merged into the codebase. For trivial changes, a single maintainer may merge it after review if they're happy with it, up to their discretion. Any substantial changes should be approved by at least 1 maintainer and 1 other community member."
msgstr "Once you've completed the task you set out to complete, submit a PR! Please fill out the PR template in complete to ensure that we have a full understanding of your work. At that point, 1-2 reviewers will take a look at your work and give it some feedback to be merged into the codebase. For trivial changes, a single maintainer may merge it after review if they're happy with it, up to their discretion. Any substantial changes should be approved by at least 1 maintainer and 1 other community member."


#: ../../development_guides/involvement_docs/index.rst:53
msgid "Note: We take code quality seriously and strive for high-quality and consistent code. We make use of the linting and static analysis tools provided in ROS 2 (``ament_cpplint``, ``ament_uncrustify``, ``ament_cppcheck``, etc). All PRs are built in CI with the appropriate ROS distributions and run through a set of unit and system level tests including static analysis. You can see the results of these tests in the pull request. It is expected for feature development for tests to cover this work to be added. If any documentation must be updated due to your changes, that should be included in your pull request."
msgstr "Note: We take code quality seriously and strive for high-quality and consistent code. We make use of the linting and static analysis tools provided in ROS 2 (``ament_cpplint``, ``ament_uncrustify``, ``ament_cppcheck``, etc). All PRs are built in CI with the appropriate ROS distributions and run through a set of unit and system level tests including static analysis. You can see the results of these tests in the pull request. It is expected for feature development for tests to cover this work to be added. If any documentation must be updated due to your changes, that should be included in your pull request."


#: ../../development_guides/involvement_docs/index.rst:61
msgid "Licensing"
msgstr "Licensing"


#: ../../development_guides/involvement_docs/index.rst:63
msgid "Licensing is very important to open source projects. It helps ensure the software continues to be available under the terms that the author desired."
msgstr "Licensing is very important to open source projects. It helps ensure the software continues to be available under the terms that the author desired."


#: ../../development_guides/involvement_docs/index.rst:67
msgid "Because much of the source code is ported from other ROS 1 projects, each package has it's own license. Contributions should be made under the predominant license of that package. Entirely new packages should be made available under the `Apache 2.0 license <https://www.apache.org/licenses/LICENSE-2.0>`_."
msgstr "Because much of the source code is ported from other ROS 1 projects, each package has it's own license. Contributions should be made under the predominant license of that package. Entirely new packages should be made available under the `Apache 2.0 license <https://www.apache.org/licenses/LICENSE-2.0>`_."


#: ../../development_guides/involvement_docs/index.rst:72
msgid "A license tells you what rights you have as a developer, as provided by the copyright holder. It is important that the contributor fully understands the licensing rights and agrees to them. Sometimes the copyright holder isn't the contributor, such as when the contributor is doing work on behalf of a company."
msgstr "A license tells you what rights you have as a developer, as provided by the copyright holder. It is important that the contributor fully understands the licensing rights and agrees to them. Sometimes the copyright holder isn't the contributor, such as when the contributor is doing work on behalf of a company."


#: ../../development_guides/involvement_docs/index.rst:78
msgid "If for some reason Apache 2.0 or BSD licenses are not appropriate for your work, please get in contact with a project maintainer and discuss your concerns or requirements. We may consider special exceptions for exceptional work, within reason (we will not accept any licenses that makes it unsuitable for commercial use)."
msgstr "If for some reason Apache 2.0 or BSD licenses are not appropriate for your work, please get in contact with a project maintainer and discuss your concerns or requirements. We may consider special exceptions for exceptional work, within reason (we will not accept any licenses that makes it unsuitable for commercial use)."


#: ../../development_guides/involvement_docs/index.rst:84
msgid "Developer Certification of Origin (DCO)"
msgstr "Developer Certification of Origin (DCO)"


#: ../../development_guides/involvement_docs/index.rst:86
msgid "To make a good faith effort to ensure licensing criteria are met, |LPN| encourages the Developer Certificate of Origin (DCO) process to be followed."
msgstr "To make a good faith effort to ensure licensing criteria are met, |LPN| encourages the Developer Certificate of Origin (DCO) process to be followed."


#: ../../development_guides/involvement_docs/index.rst:90
msgid "The DCO is an attestation attached to every contribution made by a developer. In the commit message of the contribution, (described more fully later in this document), the developer simply adds a ``Signed-off-by`` statement and thereby agrees to the DCO."
msgstr "The DCO is an attestation attached to every contribution made by a developer. In the commit message of the contribution, (described more fully later in this document), the developer simply adds a ``Signed-off-by`` statement and thereby agrees to the DCO."


#: ../../development_guides/involvement_docs/index.rst:95
msgid "In practice, its easier to just ``git commit -s -m \"commit messsage.\"``. Where ``-s`` adds this automatically. If you forgot to add this to a commit, it is easy to append via: ``git commit --amend -s``."
msgstr "In practice, its easier to just ``git commit -s -m \"commit messsage.\"``. Where ``-s`` adds this automatically. If you forgot to add this to a commit, it is easy to append via: ``git commit --amend -s``."


#: ../../development_guides/involvement_docs/index.rst:99
msgid "When a developer submits a patch, it is a commitment that the contributor has the right to submit the patch per the license.  The DCO agreement is shown below and at http://developercertificate.org/."
msgstr "When a developer submits a patch, it is a commitment that the contributor has the right to submit the patch per the license.  The DCO agreement is shown below and at http://developercertificate.org/."

